ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB75:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "software_timer.h"
  25:Core/Src/main.c **** #include "7segmentLED.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_TIM2_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** const int MAX_LED = 4;
  63:Core/Src/main.c **** const int MAX_LED_MATRIX = 8;
  64:Core/Src/main.c **** int index_led_matrix = 0;
  65:Core/Src/main.c **** int led_buffer[4] = {1, 8, 0, 9};
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // quet cot hang
  68:Core/Src/main.c **** uint16_t cot[8] = {ENM0_Pin, ENM1_Pin, ENM2_Pin, ENM3_Pin, ENM4_Pin, ENM5_Pin, ENM6_Pin, ENM7_Pin};
  69:Core/Src/main.c **** uint16_t hang[8] = {ROW0_Pin, ROW1_Pin, ROW2_Pin, ROW3_Pin, ROW4_Pin, ROW5_Pin, ROW6_Pin, ROW7_Pin}
  70:Core/Src/main.c **** // ma gui ra cot
  71:Core/Src/main.c **** uint16_t matrix_buffer[8] = {0xc3, 0x81, 0x99, 0x99, 0x81, 0x99, 0x99, 0x99};
  72:Core/Src/main.c **** // ma quet hang
  73:Core/Src/main.c **** uint16_t bytes[8] = {
  74:Core/Src/main.c ****     0x01,
  75:Core/Src/main.c ****     0x02,
  76:Core/Src/main.c ****     0x04,
  77:Core/Src/main.c ****     0x08,
  78:Core/Src/main.c ****     0x10,
  79:Core/Src/main.c ****     0x20,
  80:Core/Src/main.c ****     0x40,
  81:Core/Src/main.c ****     0x80,
  82:Core/Src/main.c **** };
  83:Core/Src/main.c **** int hour = 18;
  84:Core/Src/main.c **** int minute = 9;
  85:Core/Src/main.c **** int second = 50;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** void update7SEG(int index)
  88:Core/Src/main.c **** {
  89:Core/Src/main.c ****   switch (index)
  90:Core/Src/main.c ****   {
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 3


  91:Core/Src/main.c ****   case 0:
  92:Core/Src/main.c ****     display7Seg(led_buffer[0]);
  93:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
  94:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
  95:Core/Src/main.c ****     break;
  96:Core/Src/main.c ****   case 1:
  97:Core/Src/main.c ****     display7Seg(led_buffer[1]);
  98:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
  99:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 1);
 100:Core/Src/main.c ****     break;
 101:Core/Src/main.c ****   case 2:
 102:Core/Src/main.c ****     display7Seg(led_buffer[2]);
 103:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 104:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 105:Core/Src/main.c ****     break;
 106:Core/Src/main.c ****   case 3:
 107:Core/Src/main.c ****     display7Seg(led_buffer[3]);
 108:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
 109:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 110:Core/Src/main.c ****     break;
 111:Core/Src/main.c ****   default:
 112:Core/Src/main.c ****     break;
 113:Core/Src/main.c ****   }
 114:Core/Src/main.c **** }
 115:Core/Src/main.c **** void updateClockBuffer()
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   led_buffer[0] = hour / 10;
 118:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 119:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 120:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 121:Core/Src/main.c **** }
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** void writeByte(GPIO_TypeDef *port, uint16_t *pins, uint16_t byte)
 124:Core/Src/main.c **** {
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[0], byte & (uint16_t)0x01);
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[2], byte & (uint16_t)0x04);
 128:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[3], byte & (uint16_t)0x08);
 129:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[4], byte & (uint16_t)0x10);
 130:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[5], byte & (uint16_t)0x20);
 131:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[6], byte & (uint16_t)0x40);
 132:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[7], byte & (uint16_t)0x80);
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** void updateLedMatrix(int index)
 136:Core/Src/main.c **** {
 137:Core/Src/main.c ****   uint16_t temp = matrix_buffer[index];
 138:Core/Src/main.c ****   switch (index)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****   case 0:
 141:Core/Src/main.c ****     writeByte(GPIOA, cot, (temp));
 142:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 143:Core/Src/main.c ****     break;
 144:Core/Src/main.c ****   case 1:
 145:Core/Src/main.c ****     writeByte(GPIOA, cot, (temp));
 146:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 4


 148:Core/Src/main.c ****     break;
 149:Core/Src/main.c ****   case 2:
 150:Core/Src/main.c ****     writeByte(GPIOA, cot, (temp));
 151:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     break;
 154:Core/Src/main.c ****   case 3:
 155:Core/Src/main.c ****     writeByte(GPIOA, cot, (temp));
 156:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****     break;
 159:Core/Src/main.c ****   case 4:
 160:Core/Src/main.c ****     writeByte(GPIOA, cot, (temp));
 161:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****     break;
 164:Core/Src/main.c ****   case 5:
 165:Core/Src/main.c ****     writeByte(GPIOA, cot, (temp));
 166:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****     break;
 169:Core/Src/main.c ****   case 6:
 170:Core/Src/main.c ****     writeByte(GPIOA, cot, (temp));
 171:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****     break;
 174:Core/Src/main.c ****   case 7:
 175:Core/Src/main.c ****     writeByte(GPIOA, cot, (temp));
 176:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 177:Core/Src/main.c ****     break;
 178:Core/Src/main.c ****   default:
 179:Core/Src/main.c ****     break;
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c **** }
 182:Core/Src/main.c **** /* USER CODE END 0 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****  * @brief  The application entry point.
 186:Core/Src/main.c ****  * @retval int
 187:Core/Src/main.c ****  */
 188:Core/Src/main.c **** int main(void)
 189:Core/Src/main.c **** {
 190:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END 1 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 197:Core/Src/main.c ****   HAL_Init();
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END Init */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* Configure the system clock */
 204:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END SysInit */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* Initialize all configured peripherals */
 211:Core/Src/main.c ****   MX_GPIO_Init();
 212:Core/Src/main.c ****   MX_TIM2_Init();
 213:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 214:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 215:Core/Src/main.c ****   setTimer1(100);
 216:Core/Src/main.c ****   setTimer2(25);
 217:Core/Src/main.c ****   setTimer3(10); // fai lam tan so  >= 25hz
 218:Core/Src/main.c ****   clearDisplay7Seg();
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   int ledPos = 1;
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(DOT_GPIO_Port, DOT_Pin, 1);
 222:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 0);
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
 225:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 226:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 227:Core/Src/main.c ****   HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, ROW0_Pin | ROW1_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_Pin | ROW6_P
 230:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ENM0_Pin | ENM1_Pin | ENM2_Pin | ENM3_Pin | ENM4_Pin | ENM5_Pin | ENM6_P
 231:Core/Src/main.c ****   updateLedMatrix(0);
 232:Core/Src/main.c ****   update7SEG(0);
 233:Core/Src/main.c ****   updateClockBuffer();
 234:Core/Src/main.c ****   /* USER CODE END 2 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* Infinite loop */
 237:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 238:Core/Src/main.c ****   while (1)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     if (timer1_flag == 1)
 241:Core/Src/main.c ****     {
 242:Core/Src/main.c ****       second++;
 243:Core/Src/main.c ****       if (second >= 60)
 244:Core/Src/main.c ****       {
 245:Core/Src/main.c ****         second = 0;
 246:Core/Src/main.c ****         minute++;
 247:Core/Src/main.c ****       }
 248:Core/Src/main.c ****       if (minute >= 60)
 249:Core/Src/main.c ****       {
 250:Core/Src/main.c ****         minute = 0;
 251:Core/Src/main.c ****         hour++;
 252:Core/Src/main.c ****       }
 253:Core/Src/main.c ****       if (hour >= 24)
 254:Core/Src/main.c ****       {
 255:Core/Src/main.c ****         hour = 0;
 256:Core/Src/main.c ****       }
 257:Core/Src/main.c ****       updateClockBuffer();
 258:Core/Src/main.c ****       HAL_GPIO_TogglePin(DOT_GPIO_Port, DOT_Pin);
 259:Core/Src/main.c ****       setTimer1(100);
 260:Core/Src/main.c ****     }
 261:Core/Src/main.c ****     if (timer2_flag == 1)
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 6


 262:Core/Src/main.c ****     {
 263:Core/Src/main.c ****       update7SEG(ledPos % 4);
 264:Core/Src/main.c ****       ledPos++;
 265:Core/Src/main.c ****       if (ledPos > 3)
 266:Core/Src/main.c ****         ledPos = 0;
 267:Core/Src/main.c ****       setTimer2(25);
 268:Core/Src/main.c ****     }
 269:Core/Src/main.c ****     if (timer3_flag == 1)
 270:Core/Src/main.c ****     {
 271:Core/Src/main.c ****       updateLedMatrix(index_led_matrix++);
 272:Core/Src/main.c ****       if (index_led_matrix >= 8)
 273:Core/Src/main.c ****       {
 274:Core/Src/main.c ****         setTimer3(10);
 275:Core/Src/main.c ****         index_led_matrix = 0;
 276:Core/Src/main.c ****       }
 277:Core/Src/main.c ****       else
 278:Core/Src/main.c ****       {
 279:Core/Src/main.c ****         setTimer3(5);
 280:Core/Src/main.c ****       }
 281:Core/Src/main.c ****     }
 282:Core/Src/main.c ****     /* USER CODE END WHILE */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****   /* USER CODE END 3 */
 287:Core/Src/main.c **** }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /**
 290:Core/Src/main.c ****  * @brief System Clock Configuration
 291:Core/Src/main.c ****  * @retval None
 292:Core/Src/main.c ****  */
 293:Core/Src/main.c **** void SystemClock_Config(void)
 294:Core/Src/main.c **** {
 295:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 296:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 299:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 300:Core/Src/main.c ****    */
 301:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 302:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 303:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 305:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 311:Core/Src/main.c ****    */
 312:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 313:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 314:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 315:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 316:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 7


 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c **** }
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** /**
 325:Core/Src/main.c ****  * @brief TIM2 Initialization Function
 326:Core/Src/main.c ****  * @param None
 327:Core/Src/main.c ****  * @retval None
 328:Core/Src/main.c ****  */
 329:Core/Src/main.c **** static void MX_TIM2_Init(void)
 330:Core/Src/main.c **** {
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 337:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 342:Core/Src/main.c ****   htim2.Instance = TIM2;
 343:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 344:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 345:Core/Src/main.c ****   htim2.Init.Period = 9;
 346:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 347:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 348:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     Error_Handler();
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 353:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 358:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 359:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 366:Core/Src/main.c **** }
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** /**
 369:Core/Src/main.c ****  * @brief GPIO Initialization Function
 370:Core/Src/main.c ****  * @param None
 371:Core/Src/main.c ****  * @retval None
 372:Core/Src/main.c ****  */
 373:Core/Src/main.c **** static void MX_GPIO_Init(void)
 374:Core/Src/main.c **** {
  26              		.loc 1 374 1 view -0
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 8


  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 375:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 375 3 view .LVU1
  43              		.loc 1 375 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
 376:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 377:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 380:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 380 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 380 3 view .LVU4
  52              		.loc 1 380 3 view .LVU5
  53 0010 1D4B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 380 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 380 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 380 3 view .LVU8
 381:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 381 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 381 3 view .LVU10
  68              		.loc 1 381 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00802 		orr	r2, r2, #8
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 381 3 view .LVU12
  73 002c 9B69     		ldr	r3, [r3, #24]
  74 002e 03F00803 		and	r3, r3, #8
  75 0032 0193     		str	r3, [sp, #4]
  76              		.loc 1 381 3 view .LVU13
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 9


  77 0034 019B     		ldr	r3, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 381 3 view .LVU14
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 384:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ENM0_Pin | ENM1_Pin | DOT_Pin | LED_Pin | EN0_Pin | EN1_Pin | EN2_Pin | 
  80              		.loc 1 384 3 view .LVU15
  81 0036 DFF85480 		ldr	r8, .L3+4
  82 003a 2246     		mov	r2, r4
  83 003c 4FF6FC71 		movw	r1, #65532
  84 0040 4046     		mov	r0, r8
  85 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 387:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, SEG0_Pin | SEG1_Pin | SEG2_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_P
  87              		.loc 1 387 3 view .LVU16
  88 0046 124D     		ldr	r5, .L3+8
  89 0048 2246     		mov	r2, r4
  90 004a 4FF67F71 		movw	r1, #65407
  91 004e 2846     		mov	r0, r5
  92 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /*Configure GPIO pins : ENM0_Pin ENM1_Pin DOT_Pin LED_Pin
 390:Core/Src/main.c ****                            EN0_Pin EN1_Pin EN2_Pin EN3_Pin
 391:Core/Src/main.c ****                            ENM2_Pin ENM3_Pin ENM4_Pin ENM5_Pin
 392:Core/Src/main.c ****                            ENM6_Pin ENM7_Pin */
 393:Core/Src/main.c ****   GPIO_InitStruct.Pin = ENM0_Pin | ENM1_Pin | DOT_Pin | LED_Pin | EN0_Pin | EN1_Pin | EN2_Pin | EN3
  94              		.loc 1 393 3 view .LVU17
  95              		.loc 1 393 23 is_stmt 0 view .LVU18
  96 0054 4FF6FC73 		movw	r3, #65532
  97 0058 0293     		str	r3, [sp, #8]
 394:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 394 3 is_stmt 1 view .LVU19
  99              		.loc 1 394 24 is_stmt 0 view .LVU20
 100 005a 0127     		movs	r7, #1
 101 005c 0397     		str	r7, [sp, #12]
 395:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 395 3 is_stmt 1 view .LVU21
 103              		.loc 1 395 24 is_stmt 0 view .LVU22
 104 005e 0494     		str	r4, [sp, #16]
 396:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 105              		.loc 1 396 3 is_stmt 1 view .LVU23
 106              		.loc 1 396 25 is_stmt 0 view .LVU24
 107 0060 0226     		movs	r6, #2
 108 0062 0596     		str	r6, [sp, #20]
 397:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 397 3 is_stmt 1 view .LVU25
 110 0064 02A9     		add	r1, sp, #8
 111 0066 4046     		mov	r0, r8
 112 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 113              	.LVL2:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /*Configure GPIO pins : SEG0_Pin SEG1_Pin SEG2_Pin ROW2_Pin
 400:Core/Src/main.c ****                            ROW3_Pin ROW4_Pin ROW5_Pin ROW6_Pin
 401:Core/Src/main.c ****                            ROW7_Pin SEG3_Pin SEG4_Pin SEG5_Pin
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 10


 402:Core/Src/main.c ****                            SEG6_Pin ROW0_Pin ROW1_Pin */
 403:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG0_Pin | SEG1_Pin | SEG2_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_Pin 
 114              		.loc 1 403 3 view .LVU26
 115              		.loc 1 403 23 is_stmt 0 view .LVU27
 116 006c 4FF67F73 		movw	r3, #65407
 117 0070 0293     		str	r3, [sp, #8]
 404:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 404 3 is_stmt 1 view .LVU28
 119              		.loc 1 404 24 is_stmt 0 view .LVU29
 120 0072 0397     		str	r7, [sp, #12]
 405:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 121              		.loc 1 405 3 is_stmt 1 view .LVU30
 122              		.loc 1 405 24 is_stmt 0 view .LVU31
 123 0074 0494     		str	r4, [sp, #16]
 406:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 406 3 is_stmt 1 view .LVU32
 125              		.loc 1 406 25 is_stmt 0 view .LVU33
 126 0076 0596     		str	r6, [sp, #20]
 407:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 127              		.loc 1 407 3 is_stmt 1 view .LVU34
 128 0078 02A9     		add	r1, sp, #8
 129 007a 2846     		mov	r0, r5
 130 007c FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 410:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 411:Core/Src/main.c **** }
 132              		.loc 1 411 1 is_stmt 0 view .LVU35
 133 0080 06B0     		add	sp, sp, #24
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 24
 136              		@ sp needed
 137 0082 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 138              	.L4:
 139 0086 00BF     		.align	2
 140              	.L3:
 141 0088 00100240 		.word	1073876992
 142 008c 00080140 		.word	1073809408
 143 0090 000C0140 		.word	1073810432
 144              		.cfi_endproc
 145              	.LFE75:
 147              		.section	.text.update7SEG,"ax",%progbits
 148              		.align	1
 149              		.global	update7SEG
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	update7SEG:
 155              	.LVL4:
 156              	.LFB68:
  88:Core/Src/main.c ****   switch (index)
 157              		.loc 1 88 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
  88:Core/Src/main.c ****   switch (index)
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 11


 161              		.loc 1 88 1 is_stmt 0 view .LVU37
 162 0000 10B5     		push	{r4, lr}
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
  89:Core/Src/main.c ****   {
 167              		.loc 1 89 3 is_stmt 1 view .LVU38
 168 0002 0328     		cmp	r0, #3
 169 0004 13D8     		bhi	.L5
 170 0006 DFE800F0 		tbb	[pc, r0]
 171              	.L8:
 172 000a 02       		.byte	(.L11-.L8)/2
 173 000b 13       		.byte	(.L10-.L8)/2
 174 000c 23       		.byte	(.L9-.L8)/2
 175 000d 34       		.byte	(.L7-.L8)/2
 176              		.p2align 1
 177              	.L11:
  92:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 178              		.loc 1 92 5 view .LVU39
 179 000e 224B     		ldr	r3, .L14
 180 0010 1868     		ldr	r0, [r3]
 181              	.LVL5:
  92:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 182              		.loc 1 92 5 is_stmt 0 view .LVU40
 183 0012 FFF7FEFF 		bl	display7Seg
 184              	.LVL6:
  93:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
 185              		.loc 1 93 5 is_stmt 1 view .LVU41
 186 0016 214C     		ldr	r4, .L14+4
 187 0018 0122     		movs	r2, #1
 188 001a 4FF40071 		mov	r1, #512
 189 001e 2046     		mov	r0, r4
 190 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 191              	.LVL7:
  94:Core/Src/main.c ****     break;
 192              		.loc 1 94 5 view .LVU42
 193 0024 0022     		movs	r2, #0
 194 0026 4021     		movs	r1, #64
 195 0028 2046     		mov	r0, r4
 196 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 197              	.LVL8:
  95:Core/Src/main.c ****   case 1:
 198              		.loc 1 95 5 view .LVU43
 199              	.L5:
 114:Core/Src/main.c **** void updateClockBuffer()
 200              		.loc 1 114 1 is_stmt 0 view .LVU44
 201 002e 10BD     		pop	{r4, pc}
 202              	.LVL9:
 203              	.L10:
  97:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
 204              		.loc 1 97 5 is_stmt 1 view .LVU45
 205 0030 194B     		ldr	r3, .L14
 206 0032 5868     		ldr	r0, [r3, #4]
 207              	.LVL10:
  97:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
 208              		.loc 1 97 5 is_stmt 0 view .LVU46
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 12


 209 0034 FFF7FEFF 		bl	display7Seg
 210              	.LVL11:
  98:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 1);
 211              		.loc 1 98 5 is_stmt 1 view .LVU47
 212 0038 184C     		ldr	r4, .L14+4
 213 003a 0022     		movs	r2, #0
 214 003c 8021     		movs	r1, #128
 215 003e 2046     		mov	r0, r4
 216 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL12:
  99:Core/Src/main.c ****     break;
 218              		.loc 1 99 5 view .LVU48
 219 0044 0122     		movs	r2, #1
 220 0046 4021     		movs	r1, #64
 221 0048 2046     		mov	r0, r4
 222 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 223              	.LVL13:
 100:Core/Src/main.c ****   case 2:
 224              		.loc 1 100 5 view .LVU49
 225 004e EEE7     		b	.L5
 226              	.LVL14:
 227              	.L9:
 102:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 228              		.loc 1 102 5 view .LVU50
 229 0050 114B     		ldr	r3, .L14
 230 0052 9868     		ldr	r0, [r3, #8]
 231              	.LVL15:
 102:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 232              		.loc 1 102 5 is_stmt 0 view .LVU51
 233 0054 FFF7FEFF 		bl	display7Seg
 234              	.LVL16:
 103:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 235              		.loc 1 103 5 is_stmt 1 view .LVU52
 236 0058 104C     		ldr	r4, .L14+4
 237 005a 0022     		movs	r2, #0
 238 005c 4FF48071 		mov	r1, #256
 239 0060 2046     		mov	r0, r4
 240 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL17:
 104:Core/Src/main.c ****     break;
 242              		.loc 1 104 5 view .LVU53
 243 0066 0122     		movs	r2, #1
 244 0068 8021     		movs	r1, #128
 245 006a 2046     		mov	r0, r4
 246 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 247              	.LVL18:
 105:Core/Src/main.c ****   case 3:
 248              		.loc 1 105 5 view .LVU54
 249 0070 DDE7     		b	.L5
 250              	.LVL19:
 251              	.L7:
 107:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
 252              		.loc 1 107 5 view .LVU55
 253 0072 094B     		ldr	r3, .L14
 254 0074 D868     		ldr	r0, [r3, #12]
 255              	.LVL20:
 107:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 13


 256              		.loc 1 107 5 is_stmt 0 view .LVU56
 257 0076 FFF7FEFF 		bl	display7Seg
 258              	.LVL21:
 108:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 259              		.loc 1 108 5 is_stmt 1 view .LVU57
 260 007a 084C     		ldr	r4, .L14+4
 261 007c 0022     		movs	r2, #0
 262 007e 4FF40071 		mov	r1, #512
 263 0082 2046     		mov	r0, r4
 264 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 265              	.LVL22:
 109:Core/Src/main.c ****     break;
 266              		.loc 1 109 5 view .LVU58
 267 0088 0122     		movs	r2, #1
 268 008a 4FF48071 		mov	r1, #256
 269 008e 2046     		mov	r0, r4
 270 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 271              	.LVL23:
 110:Core/Src/main.c ****   default:
 272              		.loc 1 110 5 view .LVU59
 114:Core/Src/main.c **** void updateClockBuffer()
 273              		.loc 1 114 1 is_stmt 0 view .LVU60
 274 0094 CBE7     		b	.L5
 275              	.L15:
 276 0096 00BF     		.align	2
 277              	.L14:
 278 0098 00000000 		.word	led_buffer
 279 009c 00080140 		.word	1073809408
 280              		.cfi_endproc
 281              	.LFE68:
 283              		.section	.text.updateClockBuffer,"ax",%progbits
 284              		.align	1
 285              		.global	updateClockBuffer
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 290              	updateClockBuffer:
 291              	.LFB69:
 116:Core/Src/main.c ****   led_buffer[0] = hour / 10;
 292              		.loc 1 116 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297 0000 10B4     		push	{r4}
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 4, -4
 117:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 301              		.loc 1 117 3 view .LVU62
 117:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 302              		.loc 1 117 24 is_stmt 0 view .LVU63
 303 0002 0F4B     		ldr	r3, .L18
 304 0004 1C68     		ldr	r4, [r3]
 305 0006 0F48     		ldr	r0, .L18+4
 306 0008 80FB0432 		smull	r3, r2, r0, r4
 307 000c E317     		asrs	r3, r4, #31
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 14


 308 000e C3EBA203 		rsb	r3, r3, r2, asr #2
 117:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 309              		.loc 1 117 17 view .LVU64
 310 0012 0D49     		ldr	r1, .L18+8
 311 0014 0B60     		str	r3, [r1]
 118:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 312              		.loc 1 118 3 is_stmt 1 view .LVU65
 118:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 313              		.loc 1 118 24 is_stmt 0 view .LVU66
 314 0016 03EB8303 		add	r3, r3, r3, lsl #2
 315 001a 5A00     		lsls	r2, r3, #1
 316 001c A21A     		subs	r2, r4, r2
 118:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 317              		.loc 1 118 17 view .LVU67
 318 001e 4A60     		str	r2, [r1, #4]
 119:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 319              		.loc 1 119 3 is_stmt 1 view .LVU68
 119:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 320              		.loc 1 119 26 is_stmt 0 view .LVU69
 321 0020 0A4B     		ldr	r3, .L18+12
 322 0022 1C68     		ldr	r4, [r3]
 323 0024 80FB0430 		smull	r3, r0, r0, r4
 324 0028 E317     		asrs	r3, r4, #31
 325 002a C3EBA003 		rsb	r3, r3, r0, asr #2
 119:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 326              		.loc 1 119 17 view .LVU70
 327 002e 8B60     		str	r3, [r1, #8]
 120:Core/Src/main.c **** }
 328              		.loc 1 120 3 is_stmt 1 view .LVU71
 120:Core/Src/main.c **** }
 329              		.loc 1 120 26 is_stmt 0 view .LVU72
 330 0030 03EB8303 		add	r3, r3, r3, lsl #2
 331 0034 5A00     		lsls	r2, r3, #1
 332 0036 A21A     		subs	r2, r4, r2
 120:Core/Src/main.c **** }
 333              		.loc 1 120 17 view .LVU73
 334 0038 CA60     		str	r2, [r1, #12]
 121:Core/Src/main.c **** 
 335              		.loc 1 121 1 view .LVU74
 336 003a 10BC     		pop	{r4}
 337              	.LCFI5:
 338              		.cfi_restore 4
 339              		.cfi_def_cfa_offset 0
 340 003c 7047     		bx	lr
 341              	.L19:
 342 003e 00BF     		.align	2
 343              	.L18:
 344 0040 00000000 		.word	hour
 345 0044 67666666 		.word	1717986919
 346 0048 00000000 		.word	led_buffer
 347 004c 00000000 		.word	minute
 348              		.cfi_endproc
 349              	.LFE69:
 351              		.section	.text.writeByte,"ax",%progbits
 352              		.align	1
 353              		.global	writeByte
 354              		.syntax unified
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 15


 355              		.thumb
 356              		.thumb_func
 358              	writeByte:
 359              	.LVL24:
 360              	.LFB70:
 124:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[0], byte & (uint16_t)0x01);
 361              		.loc 1 124 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 124:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[0], byte & (uint16_t)0x01);
 365              		.loc 1 124 1 is_stmt 0 view .LVU76
 366 0000 70B5     		push	{r4, r5, r6, lr}
 367              	.LCFI6:
 368              		.cfi_def_cfa_offset 16
 369              		.cfi_offset 4, -16
 370              		.cfi_offset 5, -12
 371              		.cfi_offset 6, -8
 372              		.cfi_offset 14, -4
 373 0002 0546     		mov	r5, r0
 374 0004 0C46     		mov	r4, r1
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 375              		.loc 1 125 3 is_stmt 1 view .LVU77
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 376              		.loc 1 125 41 is_stmt 0 view .LVU78
 377 0006 D6B2     		uxtb	r6, r2
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 378              		.loc 1 125 3 view .LVU79
 379 0008 02F00102 		and	r2, r2, #1
 380              	.LVL25:
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 381              		.loc 1 125 3 view .LVU80
 382 000c 0988     		ldrh	r1, [r1]
 383              	.LVL26:
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 384              		.loc 1 125 3 view .LVU81
 385 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 386              	.LVL27:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[2], byte & (uint16_t)0x04);
 387              		.loc 1 126 3 is_stmt 1 view .LVU82
 388 0012 06F00202 		and	r2, r6, #2
 389 0016 6188     		ldrh	r1, [r4, #2]
 390 0018 2846     		mov	r0, r5
 391 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 392              	.LVL28:
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[3], byte & (uint16_t)0x08);
 393              		.loc 1 127 3 view .LVU83
 394 001e 06F00402 		and	r2, r6, #4
 395 0022 A188     		ldrh	r1, [r4, #4]
 396 0024 2846     		mov	r0, r5
 397 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 398              	.LVL29:
 128:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[4], byte & (uint16_t)0x10);
 399              		.loc 1 128 3 view .LVU84
 400 002a 06F00802 		and	r2, r6, #8
 401 002e E188     		ldrh	r1, [r4, #6]
 402 0030 2846     		mov	r0, r5
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 16


 403 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 404              	.LVL30:
 129:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[5], byte & (uint16_t)0x20);
 405              		.loc 1 129 3 view .LVU85
 406 0036 06F01002 		and	r2, r6, #16
 407 003a 2189     		ldrh	r1, [r4, #8]
 408 003c 2846     		mov	r0, r5
 409 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 410              	.LVL31:
 130:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[6], byte & (uint16_t)0x40);
 411              		.loc 1 130 3 view .LVU86
 412 0042 06F02002 		and	r2, r6, #32
 413 0046 6189     		ldrh	r1, [r4, #10]
 414 0048 2846     		mov	r0, r5
 415 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 416              	.LVL32:
 131:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[7], byte & (uint16_t)0x80);
 417              		.loc 1 131 3 view .LVU87
 418 004e 06F04002 		and	r2, r6, #64
 419 0052 A189     		ldrh	r1, [r4, #12]
 420 0054 2846     		mov	r0, r5
 421 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 422              	.LVL33:
 132:Core/Src/main.c **** }
 423              		.loc 1 132 3 view .LVU88
 424 005a 06F08002 		and	r2, r6, #128
 425 005e E189     		ldrh	r1, [r4, #14]
 426 0060 2846     		mov	r0, r5
 427 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 428              	.LVL34:
 133:Core/Src/main.c **** 
 429              		.loc 1 133 1 is_stmt 0 view .LVU89
 430 0066 70BD     		pop	{r4, r5, r6, pc}
 133:Core/Src/main.c **** 
 431              		.loc 1 133 1 view .LVU90
 432              		.cfi_endproc
 433              	.LFE70:
 435              		.section	.text.updateLedMatrix,"ax",%progbits
 436              		.align	1
 437              		.global	updateLedMatrix
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 442              	updateLedMatrix:
 443              	.LVL35:
 444              	.LFB71:
 136:Core/Src/main.c ****   uint16_t temp = matrix_buffer[index];
 445              		.loc 1 136 1 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 136:Core/Src/main.c ****   uint16_t temp = matrix_buffer[index];
 449              		.loc 1 136 1 is_stmt 0 view .LVU92
 450 0000 08B5     		push	{r3, lr}
 451              	.LCFI7:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 3, -8
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 17


 454              		.cfi_offset 14, -4
 137:Core/Src/main.c ****   switch (index)
 455              		.loc 1 137 3 is_stmt 1 view .LVU93
 137:Core/Src/main.c ****   switch (index)
 456              		.loc 1 137 12 is_stmt 0 view .LVU94
 457 0002 314B     		ldr	r3, .L35
 458 0004 33F81020 		ldrh	r2, [r3, r0, lsl #1]
 459              	.LVL36:
 138:Core/Src/main.c ****   {
 460              		.loc 1 138 3 is_stmt 1 view .LVU95
 461 0008 0728     		cmp	r0, #7
 462 000a 0FD8     		bhi	.L22
 463 000c DFE800F0 		tbb	[pc, r0]
 464              	.L25:
 465 0010 04       		.byte	(.L32-.L25)/2
 466 0011 0F       		.byte	(.L31-.L25)/2
 467 0012 1A       		.byte	(.L30-.L25)/2
 468 0013 25       		.byte	(.L29-.L25)/2
 469 0014 30       		.byte	(.L28-.L25)/2
 470 0015 3B       		.byte	(.L27-.L25)/2
 471 0016 46       		.byte	(.L26-.L25)/2
 472 0017 51       		.byte	(.L24-.L25)/2
 473              		.p2align 1
 474              	.L32:
 141:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 475              		.loc 1 141 5 view .LVU96
 476 0018 2C49     		ldr	r1, .L35+4
 477 001a 2D48     		ldr	r0, .L35+8
 478              	.LVL37:
 141:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 479              		.loc 1 141 5 is_stmt 0 view .LVU97
 480 001c FFF7FEFF 		bl	writeByte
 481              	.LVL38:
 142:Core/Src/main.c ****     break;
 482              		.loc 1 142 5 is_stmt 1 view .LVU98
 483 0020 4FF6FE72 		movw	r2, #65534
 484 0024 2B49     		ldr	r1, .L35+12
 485 0026 2C48     		ldr	r0, .L35+16
 486 0028 FFF7FEFF 		bl	writeByte
 487              	.LVL39:
 143:Core/Src/main.c ****   case 1:
 488              		.loc 1 143 5 view .LVU99
 489              	.L22:
 181:Core/Src/main.c **** /* USER CODE END 0 */
 490              		.loc 1 181 1 is_stmt 0 view .LVU100
 491 002c 08BD     		pop	{r3, pc}
 492              	.LVL40:
 493              	.L31:
 145:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 494              		.loc 1 145 5 is_stmt 1 view .LVU101
 495 002e 2749     		ldr	r1, .L35+4
 496 0030 2748     		ldr	r0, .L35+8
 497              	.LVL41:
 145:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 498              		.loc 1 145 5 is_stmt 0 view .LVU102
 499 0032 FFF7FEFF 		bl	writeByte
 500              	.LVL42:
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 18


 146:Core/Src/main.c **** 
 501              		.loc 1 146 5 is_stmt 1 view .LVU103
 502 0036 4FF6FD72 		movw	r2, #65533
 503 003a 2649     		ldr	r1, .L35+12
 504 003c 2648     		ldr	r0, .L35+16
 505 003e FFF7FEFF 		bl	writeByte
 506              	.LVL43:
 148:Core/Src/main.c ****   case 2:
 507              		.loc 1 148 5 view .LVU104
 508 0042 F3E7     		b	.L22
 509              	.LVL44:
 510              	.L30:
 150:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 511              		.loc 1 150 5 view .LVU105
 512 0044 2149     		ldr	r1, .L35+4
 513 0046 2248     		ldr	r0, .L35+8
 514              	.LVL45:
 150:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 515              		.loc 1 150 5 is_stmt 0 view .LVU106
 516 0048 FFF7FEFF 		bl	writeByte
 517              	.LVL46:
 151:Core/Src/main.c **** 
 518              		.loc 1 151 5 is_stmt 1 view .LVU107
 519 004c 4FF6FB72 		movw	r2, #65531
 520 0050 2049     		ldr	r1, .L35+12
 521 0052 2148     		ldr	r0, .L35+16
 522 0054 FFF7FEFF 		bl	writeByte
 523              	.LVL47:
 153:Core/Src/main.c ****   case 3:
 524              		.loc 1 153 5 view .LVU108
 525 0058 E8E7     		b	.L22
 526              	.LVL48:
 527              	.L29:
 155:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 528              		.loc 1 155 5 view .LVU109
 529 005a 1C49     		ldr	r1, .L35+4
 530 005c 1C48     		ldr	r0, .L35+8
 531              	.LVL49:
 155:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 532              		.loc 1 155 5 is_stmt 0 view .LVU110
 533 005e FFF7FEFF 		bl	writeByte
 534              	.LVL50:
 156:Core/Src/main.c **** 
 535              		.loc 1 156 5 is_stmt 1 view .LVU111
 536 0062 4FF6F772 		movw	r2, #65527
 537 0066 1B49     		ldr	r1, .L35+12
 538 0068 1B48     		ldr	r0, .L35+16
 539 006a FFF7FEFF 		bl	writeByte
 540              	.LVL51:
 158:Core/Src/main.c ****   case 4:
 541              		.loc 1 158 5 view .LVU112
 542 006e DDE7     		b	.L22
 543              	.LVL52:
 544              	.L28:
 160:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 545              		.loc 1 160 5 view .LVU113
 546 0070 1649     		ldr	r1, .L35+4
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 19


 547 0072 1748     		ldr	r0, .L35+8
 548              	.LVL53:
 160:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 549              		.loc 1 160 5 is_stmt 0 view .LVU114
 550 0074 FFF7FEFF 		bl	writeByte
 551              	.LVL54:
 161:Core/Src/main.c **** 
 552              		.loc 1 161 5 is_stmt 1 view .LVU115
 553 0078 4FF6EF72 		movw	r2, #65519
 554 007c 1549     		ldr	r1, .L35+12
 555 007e 1648     		ldr	r0, .L35+16
 556 0080 FFF7FEFF 		bl	writeByte
 557              	.LVL55:
 163:Core/Src/main.c ****   case 5:
 558              		.loc 1 163 5 view .LVU116
 559 0084 D2E7     		b	.L22
 560              	.LVL56:
 561              	.L27:
 165:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 562              		.loc 1 165 5 view .LVU117
 563 0086 1149     		ldr	r1, .L35+4
 564 0088 1148     		ldr	r0, .L35+8
 565              	.LVL57:
 165:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 566              		.loc 1 165 5 is_stmt 0 view .LVU118
 567 008a FFF7FEFF 		bl	writeByte
 568              	.LVL58:
 166:Core/Src/main.c **** 
 569              		.loc 1 166 5 is_stmt 1 view .LVU119
 570 008e 4FF6DF72 		movw	r2, #65503
 571 0092 1049     		ldr	r1, .L35+12
 572 0094 1048     		ldr	r0, .L35+16
 573 0096 FFF7FEFF 		bl	writeByte
 574              	.LVL59:
 168:Core/Src/main.c ****   case 6:
 575              		.loc 1 168 5 view .LVU120
 576 009a C7E7     		b	.L22
 577              	.LVL60:
 578              	.L26:
 170:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 579              		.loc 1 170 5 view .LVU121
 580 009c 0B49     		ldr	r1, .L35+4
 581 009e 0C48     		ldr	r0, .L35+8
 582              	.LVL61:
 170:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 583              		.loc 1 170 5 is_stmt 0 view .LVU122
 584 00a0 FFF7FEFF 		bl	writeByte
 585              	.LVL62:
 171:Core/Src/main.c **** 
 586              		.loc 1 171 5 is_stmt 1 view .LVU123
 587 00a4 4FF6BF72 		movw	r2, #65471
 588 00a8 0A49     		ldr	r1, .L35+12
 589 00aa 0B48     		ldr	r0, .L35+16
 590 00ac FFF7FEFF 		bl	writeByte
 591              	.LVL63:
 173:Core/Src/main.c ****   case 7:
 592              		.loc 1 173 5 view .LVU124
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 20


 593 00b0 BCE7     		b	.L22
 594              	.LVL64:
 595              	.L24:
 175:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 596              		.loc 1 175 5 view .LVU125
 597 00b2 0649     		ldr	r1, .L35+4
 598 00b4 0648     		ldr	r0, .L35+8
 599              	.LVL65:
 175:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 600              		.loc 1 175 5 is_stmt 0 view .LVU126
 601 00b6 FFF7FEFF 		bl	writeByte
 602              	.LVL66:
 176:Core/Src/main.c ****     break;
 603              		.loc 1 176 5 is_stmt 1 view .LVU127
 604 00ba 4FF67F72 		movw	r2, #65407
 605 00be 0549     		ldr	r1, .L35+12
 606 00c0 0548     		ldr	r0, .L35+16
 607 00c2 FFF7FEFF 		bl	writeByte
 608              	.LVL67:
 177:Core/Src/main.c ****   default:
 609              		.loc 1 177 5 view .LVU128
 181:Core/Src/main.c **** /* USER CODE END 0 */
 610              		.loc 1 181 1 is_stmt 0 view .LVU129
 611 00c6 B1E7     		b	.L22
 612              	.L36:
 613              		.align	2
 614              	.L35:
 615 00c8 00000000 		.word	matrix_buffer
 616 00cc 00000000 		.word	cot
 617 00d0 00080140 		.word	1073809408
 618 00d4 00000000 		.word	hang
 619 00d8 000C0140 		.word	1073810432
 620              		.cfi_endproc
 621              	.LFE71:
 623              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 624              		.align	1
 625              		.global	HAL_TIM_PeriodElapsedCallback
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 630              	HAL_TIM_PeriodElapsedCallback:
 631              	.LVL68:
 632              	.LFB76:
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 414:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 415:Core/Src/main.c **** {
 633              		.loc 1 415 1 is_stmt 1 view -0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              		.loc 1 415 1 is_stmt 0 view .LVU131
 638 0000 08B5     		push	{r3, lr}
 639              	.LCFI8:
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 3, -8
 642              		.cfi_offset 14, -4
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 21


 416:Core/Src/main.c ****   timerRun();
 643              		.loc 1 416 3 is_stmt 1 view .LVU132
 644 0002 FFF7FEFF 		bl	timerRun
 645              	.LVL69:
 417:Core/Src/main.c **** }
 646              		.loc 1 417 1 is_stmt 0 view .LVU133
 647 0006 08BD     		pop	{r3, pc}
 648              		.cfi_endproc
 649              	.LFE76:
 651              		.section	.text.Error_Handler,"ax",%progbits
 652              		.align	1
 653              		.global	Error_Handler
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 658              	Error_Handler:
 659              	.LFB77:
 418:Core/Src/main.c **** /* USER CODE END 4 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** /**
 421:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 422:Core/Src/main.c ****  * @retval None
 423:Core/Src/main.c ****  */
 424:Core/Src/main.c **** void Error_Handler(void)
 425:Core/Src/main.c **** {
 660              		.loc 1 425 1 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ Volatile: function does not return.
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 426:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 427:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 428:Core/Src/main.c ****   __disable_irq();
 666              		.loc 1 428 3 view .LVU135
 667              	.LBB6:
 668              	.LBI6:
 669              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 22


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 23


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 24


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 670              		.loc 2 140 27 view .LVU136
 671              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 672              		.loc 2 142 3 view .LVU137
 673              		.syntax unified
 674              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 675 0000 72B6     		cpsid i
 676              	@ 0 "" 2
 677              		.thumb
 678              		.syntax unified
 679              	.L40:
 680              	.LBE7:
 681              	.LBE6:
 429:Core/Src/main.c ****   while (1)
 682              		.loc 1 429 3 discriminator 1 view .LVU138
 430:Core/Src/main.c ****   {
 431:Core/Src/main.c ****   }
 683              		.loc 1 431 3 discriminator 1 view .LVU139
 429:Core/Src/main.c ****   while (1)
 684              		.loc 1 429 9 discriminator 1 view .LVU140
 685 0002 FEE7     		b	.L40
 686              		.cfi_endproc
 687              	.LFE77:
 689              		.section	.text.MX_TIM2_Init,"ax",%progbits
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 695              	MX_TIM2_Init:
 696              	.LFB74:
 330:Core/Src/main.c **** 
 697              		.loc 1 330 1 view -0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 24
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701 0000 00B5     		push	{lr}
 702              	.LCFI9:
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 14, -4
 705 0002 87B0     		sub	sp, sp, #28
 706              	.LCFI10:
 707              		.cfi_def_cfa_offset 32
 336:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 708              		.loc 1 336 3 view .LVU142
 336:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 709              		.loc 1 336 26 is_stmt 0 view .LVU143
 710 0004 0023     		movs	r3, #0
 711 0006 0293     		str	r3, [sp, #8]
 712 0008 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 25


 713 000a 0493     		str	r3, [sp, #16]
 714 000c 0593     		str	r3, [sp, #20]
 337:Core/Src/main.c **** 
 715              		.loc 1 337 3 is_stmt 1 view .LVU144
 337:Core/Src/main.c **** 
 716              		.loc 1 337 27 is_stmt 0 view .LVU145
 717 000e 0093     		str	r3, [sp]
 718 0010 0193     		str	r3, [sp, #4]
 342:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 719              		.loc 1 342 3 is_stmt 1 view .LVU146
 342:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 720              		.loc 1 342 18 is_stmt 0 view .LVU147
 721 0012 1448     		ldr	r0, .L49
 722 0014 4FF08042 		mov	r2, #1073741824
 723 0018 0260     		str	r2, [r0]
 343:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 724              		.loc 1 343 3 is_stmt 1 view .LVU148
 343:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 725              		.loc 1 343 24 is_stmt 0 view .LVU149
 726 001a 41F63F72 		movw	r2, #7999
 727 001e 4260     		str	r2, [r0, #4]
 344:Core/Src/main.c ****   htim2.Init.Period = 9;
 728              		.loc 1 344 3 is_stmt 1 view .LVU150
 344:Core/Src/main.c ****   htim2.Init.Period = 9;
 729              		.loc 1 344 26 is_stmt 0 view .LVU151
 730 0020 8360     		str	r3, [r0, #8]
 345:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 731              		.loc 1 345 3 is_stmt 1 view .LVU152
 345:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 732              		.loc 1 345 21 is_stmt 0 view .LVU153
 733 0022 0922     		movs	r2, #9
 734 0024 C260     		str	r2, [r0, #12]
 346:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 735              		.loc 1 346 3 is_stmt 1 view .LVU154
 346:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 736              		.loc 1 346 28 is_stmt 0 view .LVU155
 737 0026 0361     		str	r3, [r0, #16]
 347:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 738              		.loc 1 347 3 is_stmt 1 view .LVU156
 347:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 739              		.loc 1 347 32 is_stmt 0 view .LVU157
 740 0028 8361     		str	r3, [r0, #24]
 348:Core/Src/main.c ****   {
 741              		.loc 1 348 3 is_stmt 1 view .LVU158
 348:Core/Src/main.c ****   {
 742              		.loc 1 348 7 is_stmt 0 view .LVU159
 743 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 744              	.LVL70:
 348:Core/Src/main.c ****   {
 745              		.loc 1 348 6 view .LVU160
 746 002e 90B9     		cbnz	r0, .L46
 352:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 747              		.loc 1 352 3 is_stmt 1 view .LVU161
 352:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 748              		.loc 1 352 34 is_stmt 0 view .LVU162
 749 0030 4FF48053 		mov	r3, #4096
 750 0034 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 26


 353:Core/Src/main.c ****   {
 751              		.loc 1 353 3 is_stmt 1 view .LVU163
 353:Core/Src/main.c ****   {
 752              		.loc 1 353 7 is_stmt 0 view .LVU164
 753 0036 02A9     		add	r1, sp, #8
 754 0038 0A48     		ldr	r0, .L49
 755 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 756              	.LVL71:
 353:Core/Src/main.c ****   {
 757              		.loc 1 353 6 view .LVU165
 758 003e 60B9     		cbnz	r0, .L47
 357:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 759              		.loc 1 357 3 is_stmt 1 view .LVU166
 357:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 760              		.loc 1 357 37 is_stmt 0 view .LVU167
 761 0040 0023     		movs	r3, #0
 762 0042 0093     		str	r3, [sp]
 358:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 763              		.loc 1 358 3 is_stmt 1 view .LVU168
 358:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 764              		.loc 1 358 33 is_stmt 0 view .LVU169
 765 0044 0193     		str	r3, [sp, #4]
 359:Core/Src/main.c ****   {
 766              		.loc 1 359 3 is_stmt 1 view .LVU170
 359:Core/Src/main.c ****   {
 767              		.loc 1 359 7 is_stmt 0 view .LVU171
 768 0046 6946     		mov	r1, sp
 769 0048 0648     		ldr	r0, .L49
 770 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 771              	.LVL72:
 359:Core/Src/main.c ****   {
 772              		.loc 1 359 6 view .LVU172
 773 004e 30B9     		cbnz	r0, .L48
 366:Core/Src/main.c **** 
 774              		.loc 1 366 1 view .LVU173
 775 0050 07B0     		add	sp, sp, #28
 776              	.LCFI11:
 777              		.cfi_remember_state
 778              		.cfi_def_cfa_offset 4
 779              		@ sp needed
 780 0052 5DF804FB 		ldr	pc, [sp], #4
 781              	.L46:
 782              	.LCFI12:
 783              		.cfi_restore_state
 350:Core/Src/main.c ****   }
 784              		.loc 1 350 5 is_stmt 1 view .LVU174
 785 0056 FFF7FEFF 		bl	Error_Handler
 786              	.LVL73:
 787              	.L47:
 355:Core/Src/main.c ****   }
 788              		.loc 1 355 5 view .LVU175
 789 005a FFF7FEFF 		bl	Error_Handler
 790              	.LVL74:
 791              	.L48:
 361:Core/Src/main.c ****   }
 792              		.loc 1 361 5 view .LVU176
 793 005e FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 27


 794              	.LVL75:
 795              	.L50:
 796 0062 00BF     		.align	2
 797              	.L49:
 798 0064 00000000 		.word	htim2
 799              		.cfi_endproc
 800              	.LFE74:
 802              		.section	.text.SystemClock_Config,"ax",%progbits
 803              		.align	1
 804              		.global	SystemClock_Config
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 809              	SystemClock_Config:
 810              	.LFB73:
 294:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 811              		.loc 1 294 1 view -0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 64
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815 0000 00B5     		push	{lr}
 816              	.LCFI13:
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 14, -4
 819 0002 91B0     		sub	sp, sp, #68
 820              	.LCFI14:
 821              		.cfi_def_cfa_offset 72
 295:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 822              		.loc 1 295 3 view .LVU178
 295:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 823              		.loc 1 295 22 is_stmt 0 view .LVU179
 824 0004 2822     		movs	r2, #40
 825 0006 0021     		movs	r1, #0
 826 0008 06A8     		add	r0, sp, #24
 827 000a FFF7FEFF 		bl	memset
 828              	.LVL76:
 296:Core/Src/main.c **** 
 829              		.loc 1 296 3 is_stmt 1 view .LVU180
 296:Core/Src/main.c **** 
 830              		.loc 1 296 22 is_stmt 0 view .LVU181
 831 000e 0023     		movs	r3, #0
 832 0010 0193     		str	r3, [sp, #4]
 833 0012 0293     		str	r3, [sp, #8]
 834 0014 0393     		str	r3, [sp, #12]
 835 0016 0493     		str	r3, [sp, #16]
 836 0018 0593     		str	r3, [sp, #20]
 301:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 837              		.loc 1 301 3 is_stmt 1 view .LVU182
 301:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 838              		.loc 1 301 36 is_stmt 0 view .LVU183
 839 001a 0223     		movs	r3, #2
 840 001c 0693     		str	r3, [sp, #24]
 302:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 841              		.loc 1 302 3 is_stmt 1 view .LVU184
 302:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 842              		.loc 1 302 30 is_stmt 0 view .LVU185
 843 001e 0123     		movs	r3, #1
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 28


 844 0020 0A93     		str	r3, [sp, #40]
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 845              		.loc 1 303 3 is_stmt 1 view .LVU186
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 846              		.loc 1 303 41 is_stmt 0 view .LVU187
 847 0022 1023     		movs	r3, #16
 848 0024 0B93     		str	r3, [sp, #44]
 304:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 849              		.loc 1 304 3 is_stmt 1 view .LVU188
 305:Core/Src/main.c ****   {
 850              		.loc 1 305 3 view .LVU189
 305:Core/Src/main.c ****   {
 851              		.loc 1 305 7 is_stmt 0 view .LVU190
 852 0026 06A8     		add	r0, sp, #24
 853 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 854              	.LVL77:
 305:Core/Src/main.c ****   {
 855              		.loc 1 305 6 view .LVU191
 856 002c 68B9     		cbnz	r0, .L55
 312:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 857              		.loc 1 312 3 is_stmt 1 view .LVU192
 312:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 858              		.loc 1 312 31 is_stmt 0 view .LVU193
 859 002e 0F23     		movs	r3, #15
 860 0030 0193     		str	r3, [sp, #4]
 313:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 861              		.loc 1 313 3 is_stmt 1 view .LVU194
 313:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 862              		.loc 1 313 34 is_stmt 0 view .LVU195
 863 0032 0021     		movs	r1, #0
 864 0034 0291     		str	r1, [sp, #8]
 314:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 865              		.loc 1 314 3 is_stmt 1 view .LVU196
 314:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 866              		.loc 1 314 35 is_stmt 0 view .LVU197
 867 0036 0391     		str	r1, [sp, #12]
 315:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 868              		.loc 1 315 3 is_stmt 1 view .LVU198
 315:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 869              		.loc 1 315 36 is_stmt 0 view .LVU199
 870 0038 0491     		str	r1, [sp, #16]
 316:Core/Src/main.c **** 
 871              		.loc 1 316 3 is_stmt 1 view .LVU200
 316:Core/Src/main.c **** 
 872              		.loc 1 316 36 is_stmt 0 view .LVU201
 873 003a 0591     		str	r1, [sp, #20]
 318:Core/Src/main.c ****   {
 874              		.loc 1 318 3 is_stmt 1 view .LVU202
 318:Core/Src/main.c ****   {
 875              		.loc 1 318 7 is_stmt 0 view .LVU203
 876 003c 01A8     		add	r0, sp, #4
 877 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 878              	.LVL78:
 318:Core/Src/main.c ****   {
 879              		.loc 1 318 6 view .LVU204
 880 0042 20B9     		cbnz	r0, .L56
 322:Core/Src/main.c **** 
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 29


 881              		.loc 1 322 1 view .LVU205
 882 0044 11B0     		add	sp, sp, #68
 883              	.LCFI15:
 884              		.cfi_remember_state
 885              		.cfi_def_cfa_offset 4
 886              		@ sp needed
 887 0046 5DF804FB 		ldr	pc, [sp], #4
 888              	.L55:
 889              	.LCFI16:
 890              		.cfi_restore_state
 307:Core/Src/main.c ****   }
 891              		.loc 1 307 5 is_stmt 1 view .LVU206
 892 004a FFF7FEFF 		bl	Error_Handler
 893              	.LVL79:
 894              	.L56:
 320:Core/Src/main.c ****   }
 895              		.loc 1 320 5 view .LVU207
 896 004e FFF7FEFF 		bl	Error_Handler
 897              	.LVL80:
 898              		.cfi_endproc
 899              	.LFE73:
 901              		.section	.text.main,"ax",%progbits
 902              		.align	1
 903              		.global	main
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 908              	main:
 909              	.LFB72:
 189:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 910              		.loc 1 189 1 view -0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914 0000 38B5     		push	{r3, r4, r5, lr}
 915              	.LCFI17:
 916              		.cfi_def_cfa_offset 16
 917              		.cfi_offset 3, -16
 918              		.cfi_offset 4, -12
 919              		.cfi_offset 5, -8
 920              		.cfi_offset 14, -4
 197:Core/Src/main.c **** 
 921              		.loc 1 197 3 view .LVU209
 922 0002 FFF7FEFF 		bl	HAL_Init
 923              	.LVL81:
 204:Core/Src/main.c **** 
 924              		.loc 1 204 3 view .LVU210
 925 0006 FFF7FEFF 		bl	SystemClock_Config
 926              	.LVL82:
 211:Core/Src/main.c ****   MX_TIM2_Init();
 927              		.loc 1 211 3 view .LVU211
 928 000a FFF7FEFF 		bl	MX_GPIO_Init
 929              	.LVL83:
 212:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 930              		.loc 1 212 3 view .LVU212
 931 000e FFF7FEFF 		bl	MX_TIM2_Init
 932              	.LVL84:
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 30


 214:Core/Src/main.c ****   setTimer1(100);
 933              		.loc 1 214 3 view .LVU213
 934 0012 4E48     		ldr	r0, .L71
 935 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 936              	.LVL85:
 215:Core/Src/main.c ****   setTimer2(25);
 937              		.loc 1 215 3 view .LVU214
 938 0018 6420     		movs	r0, #100
 939 001a FFF7FEFF 		bl	setTimer1
 940              	.LVL86:
 216:Core/Src/main.c ****   setTimer3(10); // fai lam tan so  >= 25hz
 941              		.loc 1 216 3 view .LVU215
 942 001e 1920     		movs	r0, #25
 943 0020 FFF7FEFF 		bl	setTimer2
 944              	.LVL87:
 217:Core/Src/main.c ****   clearDisplay7Seg();
 945              		.loc 1 217 3 view .LVU216
 946 0024 0A20     		movs	r0, #10
 947 0026 FFF7FEFF 		bl	setTimer3
 948              	.LVL88:
 218:Core/Src/main.c **** 
 949              		.loc 1 218 3 view .LVU217
 950 002a FFF7FEFF 		bl	clearDisplay7Seg
 951              	.LVL89:
 220:Core/Src/main.c ****   HAL_GPIO_WritePin(DOT_GPIO_Port, DOT_Pin, 1);
 952              		.loc 1 220 3 view .LVU218
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 0);
 953              		.loc 1 221 3 view .LVU219
 954 002e 484C     		ldr	r4, .L71+4
 955 0030 0122     		movs	r2, #1
 956 0032 1021     		movs	r1, #16
 957 0034 2046     		mov	r0, r4
 958 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 959              	.LVL90:
 222:Core/Src/main.c **** 
 960              		.loc 1 222 3 view .LVU220
 961 003a 0022     		movs	r2, #0
 962 003c 2021     		movs	r1, #32
 963 003e 2046     		mov	r0, r4
 964 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 965              	.LVL91:
 224:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 966              		.loc 1 224 3 view .LVU221
 967 0044 0022     		movs	r2, #0
 968 0046 4021     		movs	r1, #64
 969 0048 2046     		mov	r0, r4
 970 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 971              	.LVL92:
 225:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 972              		.loc 1 225 3 view .LVU222
 973 004e 0122     		movs	r2, #1
 974 0050 8021     		movs	r1, #128
 975 0052 2046     		mov	r0, r4
 976 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 977              	.LVL93:
 226:Core/Src/main.c ****   HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 978              		.loc 1 226 3 view .LVU223
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 31


 979 0058 0122     		movs	r2, #1
 980 005a 4FF48071 		mov	r1, #256
 981 005e 2046     		mov	r0, r4
 982 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 983              	.LVL94:
 227:Core/Src/main.c **** 
 984              		.loc 1 227 3 view .LVU224
 985 0064 0122     		movs	r2, #1
 986 0066 4FF40071 		mov	r1, #512
 987 006a 2046     		mov	r0, r4
 988 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 989              	.LVL95:
 229:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ENM0_Pin | ENM1_Pin | ENM2_Pin | ENM3_Pin | ENM4_Pin | ENM5_Pin | ENM6_P
 990              		.loc 1 229 3 view .LVU225
 991 0070 0022     		movs	r2, #0
 992 0072 4FF47F41 		mov	r1, #65280
 993 0076 3748     		ldr	r0, .L71+8
 994 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 995              	.LVL96:
 230:Core/Src/main.c ****   updateLedMatrix(0);
 996              		.loc 1 230 3 view .LVU226
 997 007c 0022     		movs	r2, #0
 998 007e 4FF60C41 		movw	r1, #64524
 999 0082 2046     		mov	r0, r4
 1000 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1001              	.LVL97:
 231:Core/Src/main.c ****   update7SEG(0);
 1002              		.loc 1 231 3 view .LVU227
 1003 0088 0020     		movs	r0, #0
 1004 008a FFF7FEFF 		bl	updateLedMatrix
 1005              	.LVL98:
 232:Core/Src/main.c ****   updateClockBuffer();
 1006              		.loc 1 232 3 view .LVU228
 1007 008e 0020     		movs	r0, #0
 1008 0090 FFF7FEFF 		bl	update7SEG
 1009              	.LVL99:
 233:Core/Src/main.c ****   /* USER CODE END 2 */
 1010              		.loc 1 233 3 view .LVU229
 1011 0094 FFF7FEFF 		bl	updateClockBuffer
 1012              	.LVL100:
 220:Core/Src/main.c ****   HAL_GPIO_WritePin(DOT_GPIO_Port, DOT_Pin, 1);
 1013              		.loc 1 220 7 is_stmt 0 view .LVU230
 1014 0098 0124     		movs	r4, #1
 1015 009a 3CE0     		b	.L58
 1016              	.LVL101:
 1017              	.L69:
 242:Core/Src/main.c ****       if (second >= 60)
 1018              		.loc 1 242 7 is_stmt 1 view .LVU231
 242:Core/Src/main.c ****       if (second >= 60)
 1019              		.loc 1 242 13 is_stmt 0 view .LVU232
 1020 009c 2E4A     		ldr	r2, .L71+12
 1021 009e 1368     		ldr	r3, [r2]
 1022 00a0 0133     		adds	r3, r3, #1
 1023 00a2 1360     		str	r3, [r2]
 243:Core/Src/main.c ****       {
 1024              		.loc 1 243 7 is_stmt 1 view .LVU233
 243:Core/Src/main.c ****       {
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 32


 1025              		.loc 1 243 10 is_stmt 0 view .LVU234
 1026 00a4 3B2B     		cmp	r3, #59
 1027 00a6 06DD     		ble	.L60
 245:Core/Src/main.c ****         minute++;
 1028              		.loc 1 245 9 is_stmt 1 view .LVU235
 245:Core/Src/main.c ****         minute++;
 1029              		.loc 1 245 16 is_stmt 0 view .LVU236
 1030 00a8 1346     		mov	r3, r2
 1031 00aa 0022     		movs	r2, #0
 1032 00ac 1A60     		str	r2, [r3]
 246:Core/Src/main.c ****       }
 1033              		.loc 1 246 9 is_stmt 1 view .LVU237
 246:Core/Src/main.c ****       }
 1034              		.loc 1 246 15 is_stmt 0 view .LVU238
 1035 00ae 2B4A     		ldr	r2, .L71+16
 1036 00b0 1368     		ldr	r3, [r2]
 1037 00b2 0133     		adds	r3, r3, #1
 1038 00b4 1360     		str	r3, [r2]
 1039              	.L60:
 248:Core/Src/main.c ****       {
 1040              		.loc 1 248 7 is_stmt 1 view .LVU239
 248:Core/Src/main.c ****       {
 1041              		.loc 1 248 18 is_stmt 0 view .LVU240
 1042 00b6 294B     		ldr	r3, .L71+16
 1043 00b8 1B68     		ldr	r3, [r3]
 248:Core/Src/main.c ****       {
 1044              		.loc 1 248 10 view .LVU241
 1045 00ba 3B2B     		cmp	r3, #59
 1046 00bc 06DD     		ble	.L61
 250:Core/Src/main.c ****         hour++;
 1047              		.loc 1 250 9 is_stmt 1 view .LVU242
 250:Core/Src/main.c ****         hour++;
 1048              		.loc 1 250 16 is_stmt 0 view .LVU243
 1049 00be 274B     		ldr	r3, .L71+16
 1050 00c0 0022     		movs	r2, #0
 1051 00c2 1A60     		str	r2, [r3]
 251:Core/Src/main.c ****       }
 1052              		.loc 1 251 9 is_stmt 1 view .LVU244
 251:Core/Src/main.c ****       }
 1053              		.loc 1 251 13 is_stmt 0 view .LVU245
 1054 00c4 264A     		ldr	r2, .L71+20
 1055 00c6 1368     		ldr	r3, [r2]
 1056 00c8 0133     		adds	r3, r3, #1
 1057 00ca 1360     		str	r3, [r2]
 1058              	.L61:
 253:Core/Src/main.c ****       {
 1059              		.loc 1 253 7 is_stmt 1 view .LVU246
 253:Core/Src/main.c ****       {
 1060              		.loc 1 253 16 is_stmt 0 view .LVU247
 1061 00cc 244B     		ldr	r3, .L71+20
 1062 00ce 1B68     		ldr	r3, [r3]
 253:Core/Src/main.c ****       {
 1063              		.loc 1 253 10 view .LVU248
 1064 00d0 172B     		cmp	r3, #23
 1065 00d2 02DD     		ble	.L62
 255:Core/Src/main.c ****       }
 1066              		.loc 1 255 9 is_stmt 1 view .LVU249
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 33


 255:Core/Src/main.c ****       }
 1067              		.loc 1 255 14 is_stmt 0 view .LVU250
 1068 00d4 224B     		ldr	r3, .L71+20
 1069 00d6 0022     		movs	r2, #0
 1070 00d8 1A60     		str	r2, [r3]
 1071              	.L62:
 257:Core/Src/main.c ****       HAL_GPIO_TogglePin(DOT_GPIO_Port, DOT_Pin);
 1072              		.loc 1 257 7 is_stmt 1 view .LVU251
 1073 00da FFF7FEFF 		bl	updateClockBuffer
 1074              	.LVL102:
 258:Core/Src/main.c ****       setTimer1(100);
 1075              		.loc 1 258 7 view .LVU252
 1076 00de 1021     		movs	r1, #16
 1077 00e0 1B48     		ldr	r0, .L71+4
 1078 00e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1079              	.LVL103:
 259:Core/Src/main.c ****     }
 1080              		.loc 1 259 7 view .LVU253
 1081 00e6 6420     		movs	r0, #100
 1082 00e8 FFF7FEFF 		bl	setTimer1
 1083              	.LVL104:
 1084 00ec 17E0     		b	.L59
 1085              	.L70:
 263:Core/Src/main.c ****       ledPos++;
 1086              		.loc 1 263 7 view .LVU254
 1087 00ee 6342     		rsbs	r3, r4, #0
 1088 00f0 04F00300 		and	r0, r4, #3
 1089 00f4 03F00303 		and	r3, r3, #3
 1090 00f8 58BF     		it	pl
 1091 00fa 5842     		rsbpl	r0, r3, #0
 1092 00fc FFF7FEFF 		bl	update7SEG
 1093              	.LVL105:
 264:Core/Src/main.c ****       if (ledPos > 3)
 1094              		.loc 1 264 7 view .LVU255
 264:Core/Src/main.c ****       if (ledPos > 3)
 1095              		.loc 1 264 13 is_stmt 0 view .LVU256
 1096 0100 0134     		adds	r4, r4, #1
 1097              	.LVL106:
 265:Core/Src/main.c ****         ledPos = 0;
 1098              		.loc 1 265 7 is_stmt 1 view .LVU257
 265:Core/Src/main.c ****         ledPos = 0;
 1099              		.loc 1 265 10 is_stmt 0 view .LVU258
 1100 0102 032C     		cmp	r4, #3
 1101 0104 00DD     		ble	.L64
 266:Core/Src/main.c ****       setTimer2(25);
 1102              		.loc 1 266 16 view .LVU259
 1103 0106 0024     		movs	r4, #0
 1104              	.LVL107:
 1105              	.L64:
 267:Core/Src/main.c ****     }
 1106              		.loc 1 267 7 is_stmt 1 view .LVU260
 1107 0108 1920     		movs	r0, #25
 1108 010a FFF7FEFF 		bl	setTimer2
 1109              	.LVL108:
 1110 010e 0AE0     		b	.L63
 1111              	.L66:
 279:Core/Src/main.c ****       }
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 34


 1112              		.loc 1 279 9 view .LVU261
 1113 0110 0520     		movs	r0, #5
 1114 0112 FFF7FEFF 		bl	setTimer3
 1115              	.LVL109:
 1116              	.L58:
 238:Core/Src/main.c ****   {
 1117              		.loc 1 238 3 view .LVU262
 240:Core/Src/main.c ****     {
 1118              		.loc 1 240 5 view .LVU263
 240:Core/Src/main.c ****     {
 1119              		.loc 1 240 21 is_stmt 0 view .LVU264
 1120 0116 134B     		ldr	r3, .L71+24
 1121 0118 1B68     		ldr	r3, [r3]
 240:Core/Src/main.c ****     {
 1122              		.loc 1 240 8 view .LVU265
 1123 011a 012B     		cmp	r3, #1
 1124 011c BED0     		beq	.L69
 1125              	.L59:
 261:Core/Src/main.c ****     {
 1126              		.loc 1 261 5 is_stmt 1 view .LVU266
 261:Core/Src/main.c ****     {
 1127              		.loc 1 261 21 is_stmt 0 view .LVU267
 1128 011e 124B     		ldr	r3, .L71+28
 1129 0120 1B68     		ldr	r3, [r3]
 261:Core/Src/main.c ****     {
 1130              		.loc 1 261 8 view .LVU268
 1131 0122 012B     		cmp	r3, #1
 1132 0124 E3D0     		beq	.L70
 1133              	.L63:
 269:Core/Src/main.c ****     {
 1134              		.loc 1 269 5 is_stmt 1 view .LVU269
 269:Core/Src/main.c ****     {
 1135              		.loc 1 269 21 is_stmt 0 view .LVU270
 1136 0126 114B     		ldr	r3, .L71+32
 1137 0128 1B68     		ldr	r3, [r3]
 269:Core/Src/main.c ****     {
 1138              		.loc 1 269 8 view .LVU271
 1139 012a 012B     		cmp	r3, #1
 1140 012c F3D1     		bne	.L58
 271:Core/Src/main.c ****       if (index_led_matrix >= 8)
 1141              		.loc 1 271 7 is_stmt 1 view .LVU272
 1142 012e 104D     		ldr	r5, .L71+36
 1143 0130 2868     		ldr	r0, [r5]
 1144 0132 431C     		adds	r3, r0, #1
 1145 0134 2B60     		str	r3, [r5]
 1146 0136 FFF7FEFF 		bl	updateLedMatrix
 1147              	.LVL110:
 272:Core/Src/main.c ****       {
 1148              		.loc 1 272 7 view .LVU273
 272:Core/Src/main.c ****       {
 1149              		.loc 1 272 28 is_stmt 0 view .LVU274
 1150 013a 2B68     		ldr	r3, [r5]
 272:Core/Src/main.c ****       {
 1151              		.loc 1 272 10 view .LVU275
 1152 013c 072B     		cmp	r3, #7
 1153 013e E7DD     		ble	.L66
 274:Core/Src/main.c ****         index_led_matrix = 0;
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 35


 1154              		.loc 1 274 9 is_stmt 1 view .LVU276
 1155 0140 0A20     		movs	r0, #10
 1156 0142 FFF7FEFF 		bl	setTimer3
 1157              	.LVL111:
 275:Core/Src/main.c ****       }
 1158              		.loc 1 275 9 view .LVU277
 275:Core/Src/main.c ****       }
 1159              		.loc 1 275 26 is_stmt 0 view .LVU278
 1160 0146 0022     		movs	r2, #0
 1161 0148 2A60     		str	r2, [r5]
 1162 014a E4E7     		b	.L58
 1163              	.L72:
 1164              		.align	2
 1165              	.L71:
 1166 014c 00000000 		.word	htim2
 1167 0150 00080140 		.word	1073809408
 1168 0154 000C0140 		.word	1073810432
 1169 0158 00000000 		.word	second
 1170 015c 00000000 		.word	minute
 1171 0160 00000000 		.word	hour
 1172 0164 00000000 		.word	timer1_flag
 1173 0168 00000000 		.word	timer2_flag
 1174 016c 00000000 		.word	timer3_flag
 1175 0170 00000000 		.word	index_led_matrix
 1176              		.cfi_endproc
 1177              	.LFE72:
 1179              		.global	second
 1180              		.section	.data.second,"aw"
 1181              		.align	2
 1184              	second:
 1185 0000 32000000 		.word	50
 1186              		.global	minute
 1187              		.section	.data.minute,"aw"
 1188              		.align	2
 1191              	minute:
 1192 0000 09000000 		.word	9
 1193              		.global	hour
 1194              		.section	.data.hour,"aw"
 1195              		.align	2
 1198              	hour:
 1199 0000 12000000 		.word	18
 1200              		.global	bytes
 1201              		.section	.data.bytes,"aw"
 1202              		.align	2
 1205              	bytes:
 1206 0000 0100     		.short	1
 1207 0002 0200     		.short	2
 1208 0004 0400     		.short	4
 1209 0006 0800     		.short	8
 1210 0008 1000     		.short	16
 1211 000a 2000     		.short	32
 1212 000c 4000     		.short	64
 1213 000e 8000     		.short	128
 1214              		.global	matrix_buffer
 1215              		.section	.data.matrix_buffer,"aw"
 1216              		.align	2
 1219              	matrix_buffer:
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 36


 1220 0000 C300     		.short	195
 1221 0002 8100     		.short	129
 1222 0004 9900     		.short	153
 1223 0006 9900     		.short	153
 1224 0008 8100     		.short	129
 1225 000a 9900     		.short	153
 1226 000c 9900     		.short	153
 1227 000e 9900     		.short	153
 1228              		.global	hang
 1229              		.section	.data.hang,"aw"
 1230              		.align	2
 1233              	hang:
 1234 0000 0001     		.short	256
 1235 0002 0002     		.short	512
 1236 0004 0004     		.short	1024
 1237 0006 0008     		.short	2048
 1238 0008 0010     		.short	4096
 1239 000a 0020     		.short	8192
 1240 000c 0040     		.short	16384
 1241 000e 0080     		.short	-32768
 1242              		.global	cot
 1243              		.section	.data.cot,"aw"
 1244              		.align	2
 1247              	cot:
 1248 0000 0400     		.short	4
 1249 0002 0800     		.short	8
 1250 0004 0004     		.short	1024
 1251 0006 0008     		.short	2048
 1252 0008 0010     		.short	4096
 1253 000a 0020     		.short	8192
 1254 000c 0040     		.short	16384
 1255 000e 0080     		.short	-32768
 1256              		.global	led_buffer
 1257              		.section	.data.led_buffer,"aw"
 1258              		.align	2
 1261              	led_buffer:
 1262 0000 01000000 		.word	1
 1263 0004 08000000 		.word	8
 1264 0008 00000000 		.word	0
 1265 000c 09000000 		.word	9
 1266              		.global	index_led_matrix
 1267              		.section	.bss.index_led_matrix,"aw",%nobits
 1268              		.align	2
 1271              	index_led_matrix:
 1272 0000 00000000 		.space	4
 1273              		.global	MAX_LED_MATRIX
 1274              		.section	.rodata.MAX_LED_MATRIX,"a"
 1275              		.align	2
 1278              	MAX_LED_MATRIX:
 1279 0000 08000000 		.word	8
 1280              		.global	MAX_LED
 1281              		.section	.rodata.MAX_LED,"a"
 1282              		.align	2
 1285              	MAX_LED:
 1286 0000 04000000 		.word	4
 1287              		.global	htim2
 1288              		.section	.bss.htim2,"aw",%nobits
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 37


 1289              		.align	2
 1292              	htim2:
 1293 0000 00000000 		.space	72
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1294              		.text
 1295              	.Letext0:
 1296              		.file 3 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\machine\\_default_types.h"
 1297              		.file 4 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\sys\\_stdint.h"
 1298              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 1299              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1300              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1301              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1302              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1303              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1304              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1305              		.file 12 "Core/Inc/software_timer.h"
 1306              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1307              		.file 14 "Core/Inc/7segmentLED.h"
 1308              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1309              		.file 16 "<built-in>"
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:141    .text.MX_GPIO_Init:00000088 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:148    .text.update7SEG:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:154    .text.update7SEG:00000000 update7SEG
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:172    .text.update7SEG:0000000a $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:176    .text.update7SEG:0000000e $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:278    .text.update7SEG:00000098 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1261   .data.led_buffer:00000000 led_buffer
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:284    .text.updateClockBuffer:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:290    .text.updateClockBuffer:00000000 updateClockBuffer
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:344    .text.updateClockBuffer:00000040 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1198   .data.hour:00000000 hour
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1191   .data.minute:00000000 minute
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:352    .text.writeByte:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:358    .text.writeByte:00000000 writeByte
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:436    .text.updateLedMatrix:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:442    .text.updateLedMatrix:00000000 updateLedMatrix
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:465    .text.updateLedMatrix:00000010 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:473    .text.updateLedMatrix:00000018 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:615    .text.updateLedMatrix:000000c8 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1219   .data.matrix_buffer:00000000 matrix_buffer
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1247   .data.cot:00000000 cot
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1233   .data.hang:00000000 hang
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:624    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:630    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:652    .text.Error_Handler:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:658    .text.Error_Handler:00000000 Error_Handler
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:690    .text.MX_TIM2_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:695    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:798    .text.MX_TIM2_Init:00000064 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1292   .bss.htim2:00000000 htim2
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:803    .text.SystemClock_Config:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:809    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:902    .text.main:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:908    .text.main:00000000 main
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1166   .text.main:0000014c $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1184   .data.second:00000000 second
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1271   .bss.index_led_matrix:00000000 index_led_matrix
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1181   .data.second:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1188   .data.minute:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1195   .data.hour:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1205   .data.bytes:00000000 bytes
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1202   .data.bytes:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1216   .data.matrix_buffer:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1230   .data.hang:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1244   .data.cot:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1258   .data.led_buffer:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1268   .bss.index_led_matrix:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1278   .rodata.MAX_LED_MATRIX:00000000 MAX_LED_MATRIX
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1275   .rodata.MAX_LED_MATRIX:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1285   .rodata.MAX_LED:00000000 MAX_LED
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1282   .rodata.MAX_LED:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc2OIydP.s:1289   .bss.htim2:00000000 $d

ARM GAS  C:\Users\phong\AppData\Local\Temp\cc2OIydP.s 			page 39


UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
display7Seg
timerRun
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
setTimer1
setTimer2
setTimer3
clearDisplay7Seg
HAL_GPIO_TogglePin
timer1_flag
timer2_flag
timer3_flag

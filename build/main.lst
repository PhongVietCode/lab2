ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB71:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "software_timer.h"
  25:Core/Src/main.c **** #include "7segmentLED.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_TIM2_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** const int MAX_LED = 4;
  61:Core/Src/main.c **** const int MAX_LED_MATRIX = 8;
  62:Core/Src/main.c **** int index_led_matrix = 0;
  63:Core/Src/main.c **** int led_buffer[4] = {1, 8, 0, 9};
  64:Core/Src/main.c **** // ma chu A
  65:Core/Src/main.c **** uint8_t a[24] = {
  66:Core/Src/main.c ****     0xFF,
  67:Core/Src/main.c ****     0xFF,
  68:Core/Src/main.c ****     0xFF,
  69:Core/Src/main.c ****     0xFF,
  70:Core/Src/main.c ****     0xFF,
  71:Core/Src/main.c ****     0xFF,
  72:Core/Src/main.c ****     0xFF,
  73:Core/Src/main.c ****     0xFF,
  74:Core/Src/main.c ****     0xC3,
  75:Core/Src/main.c ****     0x81,
  76:Core/Src/main.c ****     0x99,
  77:Core/Src/main.c ****     0x99,
  78:Core/Src/main.c ****     0x81,
  79:Core/Src/main.c ****     0x99,
  80:Core/Src/main.c ****     0x99,
  81:Core/Src/main.c ****     0x99,
  82:Core/Src/main.c ****     0xFF,
  83:Core/Src/main.c ****     0xFF,
  84:Core/Src/main.c ****     0xFF,
  85:Core/Src/main.c ****     0xFF,
  86:Core/Src/main.c ****     0xFF,
  87:Core/Src/main.c ****     0xFF,
  88:Core/Src/main.c ****     0xFF,
  89:Core/Src/main.c ****     0xFF};
  90:Core/Src/main.c **** // ma quet hang
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 3


  91:Core/Src/main.c **** uint8_t matrix_buffer[8] = {0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08};
  92:Core/Src/main.c **** int hour = 18, minute = 9, second = 50;
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** void update7SEG(int index)
  95:Core/Src/main.c **** {
  96:Core/Src/main.c ****   switch (index)
  97:Core/Src/main.c ****   {
  98:Core/Src/main.c ****   case 0:
  99:Core/Src/main.c ****     display7Seg(led_buffer[0]);
 100:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
 102:Core/Src/main.c ****     break;
 103:Core/Src/main.c ****   case 1:
 104:Core/Src/main.c ****     display7Seg(led_buffer[1]);
 105:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
 106:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 1);
 107:Core/Src/main.c ****     break;
 108:Core/Src/main.c ****   case 2:
 109:Core/Src/main.c ****     display7Seg(led_buffer[2]);
 110:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 111:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 112:Core/Src/main.c ****     break;
 113:Core/Src/main.c ****   case 3:
 114:Core/Src/main.c ****     display7Seg(led_buffer[3]);
 115:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
 116:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 117:Core/Src/main.c ****     break;
 118:Core/Src/main.c ****   default:
 119:Core/Src/main.c ****     break;
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c **** }
 122:Core/Src/main.c **** void updateClockBuffer()
 123:Core/Src/main.c **** {
 124:Core/Src/main.c ****   led_buffer[0] = hour / 10;
 125:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 126:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 127:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 128:Core/Src/main.c **** }
 129:Core/Src/main.c **** void updateLedMatrix(int index)
 130:Core/Src/main.c **** {
 131:Core/Src/main.c ****   switch (index)
 132:Core/Src/main.c ****   {
 133:Core/Src/main.c ****     {
 134:Core/Src/main.c ****     case 0:
 135:Core/Src/main.c ****       /* code */
 136:Core/Src/main.c ****       HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, 0);
 137:Core/Src/main.c ****       break;
 138:Core/Src/main.c ****     case 1:
 139:Core/Src/main.c ****       /* code */
 140:Core/Src/main.c ****       break;
 141:Core/Src/main.c ****     case 2:
 142:Core/Src/main.c ****       /* code */
 143:Core/Src/main.c ****       break;
 144:Core/Src/main.c ****     case 3:
 145:Core/Src/main.c ****       /* code */
 146:Core/Src/main.c ****       break;
 147:Core/Src/main.c ****     case 4:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 4


 148:Core/Src/main.c ****       /* code */
 149:Core/Src/main.c ****       break;
 150:Core/Src/main.c ****     case 5:
 151:Core/Src/main.c ****       /* code */
 152:Core/Src/main.c ****       break;
 153:Core/Src/main.c ****     case 6:
 154:Core/Src/main.c ****       /* code */
 155:Core/Src/main.c ****       break;
 156:Core/Src/main.c ****     case 7:
 157:Core/Src/main.c ****       /* code */
 158:Core/Src/main.c ****       break;
 159:Core/Src/main.c ****     default:
 160:Core/Src/main.c ****       break;
 161:Core/Src/main.c ****     }
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** /* USER CODE END 0 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c ****  * @brief  The application entry point.
 168:Core/Src/main.c ****  * @retval int
 169:Core/Src/main.c ****  */
 170:Core/Src/main.c **** int main(void)
 171:Core/Src/main.c **** {
 172:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END 1 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 179:Core/Src/main.c ****   HAL_Init();
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE END Init */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* Configure the system clock */
 186:Core/Src/main.c ****   SystemClock_Config();
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE END SysInit */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* Initialize all configured peripherals */
 193:Core/Src/main.c ****   MX_GPIO_Init();
 194:Core/Src/main.c ****   MX_TIM2_Init();
 195:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 196:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 197:Core/Src/main.c ****   updateClockBuffer();
 198:Core/Src/main.c ****   setTimer1(100);
 199:Core/Src/main.c ****   setTimer2(50);
 200:Core/Src/main.c ****   setTimer3(25); // fai lam tan so  >= 25hz
 201:Core/Src/main.c ****   clearDisplay7Seg();
 202:Core/Src/main.c ****   update7SEG(0);
 203:Core/Src/main.c ****   int index_led = 1;
 204:Core/Src/main.c ****   HAL_GPIO_WritePin(DOT_GPIO_Port, DOT_Pin, 1);
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 5


 205:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 0);
 206:Core/Src/main.c ****   HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
 207:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 208:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 209:Core/Src/main.c ****   HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW0_GPIO_Port, ROW0_Pin, 0xC0);
 212:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW1_GPIO_Port, ROW1_Pin, 1);
 213:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW2_GPIO_Port, ROW2_Pin, 1);
 214:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW3_GPIO_Port, ROW3_Pin, 1);
 215:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW4_GPIO_Port, ROW4_Pin, 1);
 216:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW5_GPIO_Port, ROW5_Pin, 1);
 217:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW6_GPIO_Port, ROW6_Pin, 1);
 218:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW7_GPIO_Port, ROW7_Pin, 1);
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM0_GPIO_Port, ENM0_Pin, 0xC0);
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, 0x80);
 222:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, 0x33);
 223:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, 0x33);
 224:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, 0x33);
 225:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, 0x33);
 226:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, 0x80);
 227:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, 0xC0);
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END 2 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* Infinite loop */
 232:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 233:Core/Src/main.c ****   while (1)
 234:Core/Src/main.c ****   {
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****     if (timer1_flag == 1)
 237:Core/Src/main.c ****     {
 238:Core/Src/main.c ****       second++;
 239:Core/Src/main.c ****       if (second >= 60)
 240:Core/Src/main.c ****       {
 241:Core/Src/main.c ****         second = 0;
 242:Core/Src/main.c ****         minute++;
 243:Core/Src/main.c ****       }
 244:Core/Src/main.c ****       if (minute >= 60)
 245:Core/Src/main.c ****       {
 246:Core/Src/main.c ****         minute = 0;
 247:Core/Src/main.c ****         hour++;
 248:Core/Src/main.c ****       }
 249:Core/Src/main.c ****       if (hour >= 24)
 250:Core/Src/main.c ****       {
 251:Core/Src/main.c ****         hour = 0;
 252:Core/Src/main.c ****       }
 253:Core/Src/main.c ****       updateClockBuffer();
 254:Core/Src/main.c ****       setTimer1(100);
 255:Core/Src/main.c ****     }
 256:Core/Src/main.c ****     if (timer2_flag == 1)
 257:Core/Src/main.c ****     {
 258:Core/Src/main.c ****       update7SEG(index_led % 4);
 259:Core/Src/main.c ****       index_led++;
 260:Core/Src/main.c ****       setTimer2(50);
 261:Core/Src/main.c ****     }
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 6


 262:Core/Src/main.c ****     if (timer3_flag == 1)
 263:Core/Src/main.c ****     {
 264:Core/Src/main.c ****       // updateLedMatrix(index_led_matrix % 8);
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****       setTimer3(25);
 267:Core/Src/main.c ****     }
 268:Core/Src/main.c ****     /* USER CODE END WHILE */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c ****   /* USER CODE END 3 */
 273:Core/Src/main.c **** }
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** /**
 276:Core/Src/main.c ****  * @brief System Clock Configuration
 277:Core/Src/main.c ****  * @retval None
 278:Core/Src/main.c ****  */
 279:Core/Src/main.c **** void SystemClock_Config(void)
 280:Core/Src/main.c **** {
 281:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 282:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 285:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 286:Core/Src/main.c ****    */
 287:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 288:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 289:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 290:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 291:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 292:Core/Src/main.c ****   {
 293:Core/Src/main.c ****     Error_Handler();
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 297:Core/Src/main.c ****    */
 298:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 299:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 300:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 301:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 302:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 305:Core/Src/main.c ****   {
 306:Core/Src/main.c ****     Error_Handler();
 307:Core/Src/main.c ****   }
 308:Core/Src/main.c **** }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /**
 311:Core/Src/main.c ****  * @brief TIM2 Initialization Function
 312:Core/Src/main.c ****  * @param None
 313:Core/Src/main.c ****  * @retval None
 314:Core/Src/main.c ****  */
 315:Core/Src/main.c **** static void MX_TIM2_Init(void)
 316:Core/Src/main.c **** {
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 7


 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 323:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 328:Core/Src/main.c ****   htim2.Instance = TIM2;
 329:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 330:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 331:Core/Src/main.c ****   htim2.Init.Period = 9;
 332:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 333:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 334:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****     Error_Handler();
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 339:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 340:Core/Src/main.c ****   {
 341:Core/Src/main.c ****     Error_Handler();
 342:Core/Src/main.c ****   }
 343:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 344:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 345:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 352:Core/Src/main.c **** }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** /**
 355:Core/Src/main.c ****  * @brief GPIO Initialization Function
 356:Core/Src/main.c ****  * @param None
 357:Core/Src/main.c ****  * @retval None
 358:Core/Src/main.c ****  */
 359:Core/Src/main.c **** static void MX_GPIO_Init(void)
 360:Core/Src/main.c **** {
  26              		.loc 1 360 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 8


  41              		.cfi_def_cfa_offset 48
 361:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 361 3 view .LVU1
  43              		.loc 1 361 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
 362:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 363:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 366:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 366 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 366 3 view .LVU4
  52              		.loc 1 366 3 view .LVU5
  53 0010 1D4B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 366 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 366 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 366 3 view .LVU8
 367:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 367 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 367 3 view .LVU10
  68              		.loc 1 367 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00802 		orr	r2, r2, #8
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 367 3 view .LVU12
  73 002c 9B69     		ldr	r3, [r3, #24]
  74 002e 03F00803 		and	r3, r3, #8
  75 0032 0193     		str	r3, [sp, #4]
  76              		.loc 1 367 3 view .LVU13
  77 0034 019B     		ldr	r3, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 367 3 view .LVU14
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 370:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ENM0_Pin | ENM1_Pin | DOT_Pin | LED_Pin | EN0_Pin | EN1_Pin | EN2_Pin | 
  80              		.loc 1 370 3 view .LVU15
  81 0036 DFF85480 		ldr	r8, .L3+4
  82 003a 2246     		mov	r2, r4
  83 003c 4FF6FC71 		movw	r1, #65532
  84 0040 4046     		mov	r0, r8
  85 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 371:Core/Src/main.c **** 
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 9


 372:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 373:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, SEG0_Pin | SEG1_Pin | SEG2_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_P
  87              		.loc 1 373 3 view .LVU16
  88 0046 124D     		ldr	r5, .L3+8
  89 0048 2246     		mov	r2, r4
  90 004a 4FF67F71 		movw	r1, #65407
  91 004e 2846     		mov	r0, r5
  92 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /*Configure GPIO pins : ENM0_Pin ENM1_Pin DOT_Pin LED_Pin
 376:Core/Src/main.c ****                            EN0_Pin EN1_Pin EN2_Pin EN3_Pin
 377:Core/Src/main.c ****                            ENM2_Pin ENM3_Pin ENM4_Pin ENM5_Pin
 378:Core/Src/main.c ****                            ENM6_Pin ENM7_Pin */
 379:Core/Src/main.c ****   GPIO_InitStruct.Pin = ENM0_Pin | ENM1_Pin | DOT_Pin | LED_Pin | EN0_Pin | EN1_Pin | EN2_Pin | EN3
  94              		.loc 1 379 3 view .LVU17
  95              		.loc 1 379 23 is_stmt 0 view .LVU18
  96 0054 4FF6FC73 		movw	r3, #65532
  97 0058 0293     		str	r3, [sp, #8]
 380:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 380 3 is_stmt 1 view .LVU19
  99              		.loc 1 380 24 is_stmt 0 view .LVU20
 100 005a 0127     		movs	r7, #1
 101 005c 0397     		str	r7, [sp, #12]
 381:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 381 3 is_stmt 1 view .LVU21
 103              		.loc 1 381 24 is_stmt 0 view .LVU22
 104 005e 0494     		str	r4, [sp, #16]
 382:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 105              		.loc 1 382 3 is_stmt 1 view .LVU23
 106              		.loc 1 382 25 is_stmt 0 view .LVU24
 107 0060 0226     		movs	r6, #2
 108 0062 0596     		str	r6, [sp, #20]
 383:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 383 3 is_stmt 1 view .LVU25
 110 0064 02A9     		add	r1, sp, #8
 111 0066 4046     		mov	r0, r8
 112 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 113              	.LVL2:
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /*Configure GPIO pins : SEG0_Pin SEG1_Pin SEG2_Pin ROW2_Pin
 386:Core/Src/main.c ****                            ROW3_Pin ROW4_Pin ROW5_Pin ROW6_Pin
 387:Core/Src/main.c ****                            ROW7_Pin SEG3_Pin SEG4_Pin SEG5_Pin
 388:Core/Src/main.c ****                            SEG6_Pin ROW0_Pin ROW1_Pin */
 389:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG0_Pin | SEG1_Pin | SEG2_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_Pin 
 114              		.loc 1 389 3 view .LVU26
 115              		.loc 1 389 23 is_stmt 0 view .LVU27
 116 006c 4FF67F73 		movw	r3, #65407
 117 0070 0293     		str	r3, [sp, #8]
 390:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 390 3 is_stmt 1 view .LVU28
 119              		.loc 1 390 24 is_stmt 0 view .LVU29
 120 0072 0397     		str	r7, [sp, #12]
 391:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 121              		.loc 1 391 3 is_stmt 1 view .LVU30
 122              		.loc 1 391 24 is_stmt 0 view .LVU31
 123 0074 0494     		str	r4, [sp, #16]
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 10


 392:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 392 3 is_stmt 1 view .LVU32
 125              		.loc 1 392 25 is_stmt 0 view .LVU33
 126 0076 0596     		str	r6, [sp, #20]
 393:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 127              		.loc 1 393 3 is_stmt 1 view .LVU34
 128 0078 02A9     		add	r1, sp, #8
 129 007a 2846     		mov	r0, r5
 130 007c FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 396:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 397:Core/Src/main.c **** }
 132              		.loc 1 397 1 is_stmt 0 view .LVU35
 133 0080 06B0     		add	sp, sp, #24
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 24
 136              		@ sp needed
 137 0082 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 138              	.L4:
 139 0086 00BF     		.align	2
 140              	.L3:
 141 0088 00100240 		.word	1073876992
 142 008c 00080140 		.word	1073809408
 143 0090 000C0140 		.word	1073810432
 144              		.cfi_endproc
 145              	.LFE71:
 147              		.section	.text.update7SEG,"ax",%progbits
 148              		.align	1
 149              		.global	update7SEG
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	update7SEG:
 155              	.LVL4:
 156              	.LFB65:
  95:Core/Src/main.c ****   switch (index)
 157              		.loc 1 95 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
  95:Core/Src/main.c ****   switch (index)
 161              		.loc 1 95 1 is_stmt 0 view .LVU37
 162 0000 10B5     		push	{r4, lr}
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
  96:Core/Src/main.c ****   {
 167              		.loc 1 96 3 is_stmt 1 view .LVU38
 168 0002 0328     		cmp	r0, #3
 169 0004 13D8     		bhi	.L5
 170 0006 DFE800F0 		tbb	[pc, r0]
 171              	.L8:
 172 000a 02       		.byte	(.L11-.L8)/2
 173 000b 13       		.byte	(.L10-.L8)/2
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 11


 174 000c 23       		.byte	(.L9-.L8)/2
 175 000d 34       		.byte	(.L7-.L8)/2
 176              		.p2align 1
 177              	.L11:
  99:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 178              		.loc 1 99 5 view .LVU39
 179 000e 224B     		ldr	r3, .L14
 180 0010 1868     		ldr	r0, [r3]
 181              	.LVL5:
  99:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 182              		.loc 1 99 5 is_stmt 0 view .LVU40
 183 0012 FFF7FEFF 		bl	display7Seg
 184              	.LVL6:
 100:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
 185              		.loc 1 100 5 is_stmt 1 view .LVU41
 186 0016 214C     		ldr	r4, .L14+4
 187 0018 0122     		movs	r2, #1
 188 001a 4FF40071 		mov	r1, #512
 189 001e 2046     		mov	r0, r4
 190 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 191              	.LVL7:
 101:Core/Src/main.c ****     break;
 192              		.loc 1 101 5 view .LVU42
 193 0024 0022     		movs	r2, #0
 194 0026 4021     		movs	r1, #64
 195 0028 2046     		mov	r0, r4
 196 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 197              	.LVL8:
 102:Core/Src/main.c ****   case 1:
 198              		.loc 1 102 5 view .LVU43
 199              	.L5:
 121:Core/Src/main.c **** void updateClockBuffer()
 200              		.loc 1 121 1 is_stmt 0 view .LVU44
 201 002e 10BD     		pop	{r4, pc}
 202              	.LVL9:
 203              	.L10:
 104:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
 204              		.loc 1 104 5 is_stmt 1 view .LVU45
 205 0030 194B     		ldr	r3, .L14
 206 0032 5868     		ldr	r0, [r3, #4]
 207              	.LVL10:
 104:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
 208              		.loc 1 104 5 is_stmt 0 view .LVU46
 209 0034 FFF7FEFF 		bl	display7Seg
 210              	.LVL11:
 105:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 1);
 211              		.loc 1 105 5 is_stmt 1 view .LVU47
 212 0038 184C     		ldr	r4, .L14+4
 213 003a 0022     		movs	r2, #0
 214 003c 8021     		movs	r1, #128
 215 003e 2046     		mov	r0, r4
 216 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL12:
 106:Core/Src/main.c ****     break;
 218              		.loc 1 106 5 view .LVU48
 219 0044 0122     		movs	r2, #1
 220 0046 4021     		movs	r1, #64
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 12


 221 0048 2046     		mov	r0, r4
 222 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 223              	.LVL13:
 107:Core/Src/main.c ****   case 2:
 224              		.loc 1 107 5 view .LVU49
 225 004e EEE7     		b	.L5
 226              	.LVL14:
 227              	.L9:
 109:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 228              		.loc 1 109 5 view .LVU50
 229 0050 114B     		ldr	r3, .L14
 230 0052 9868     		ldr	r0, [r3, #8]
 231              	.LVL15:
 109:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 232              		.loc 1 109 5 is_stmt 0 view .LVU51
 233 0054 FFF7FEFF 		bl	display7Seg
 234              	.LVL16:
 110:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 235              		.loc 1 110 5 is_stmt 1 view .LVU52
 236 0058 104C     		ldr	r4, .L14+4
 237 005a 0022     		movs	r2, #0
 238 005c 4FF48071 		mov	r1, #256
 239 0060 2046     		mov	r0, r4
 240 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL17:
 111:Core/Src/main.c ****     break;
 242              		.loc 1 111 5 view .LVU53
 243 0066 0122     		movs	r2, #1
 244 0068 8021     		movs	r1, #128
 245 006a 2046     		mov	r0, r4
 246 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 247              	.LVL18:
 112:Core/Src/main.c ****   case 3:
 248              		.loc 1 112 5 view .LVU54
 249 0070 DDE7     		b	.L5
 250              	.LVL19:
 251              	.L7:
 114:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
 252              		.loc 1 114 5 view .LVU55
 253 0072 094B     		ldr	r3, .L14
 254 0074 D868     		ldr	r0, [r3, #12]
 255              	.LVL20:
 114:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
 256              		.loc 1 114 5 is_stmt 0 view .LVU56
 257 0076 FFF7FEFF 		bl	display7Seg
 258              	.LVL21:
 115:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 259              		.loc 1 115 5 is_stmt 1 view .LVU57
 260 007a 084C     		ldr	r4, .L14+4
 261 007c 0022     		movs	r2, #0
 262 007e 4FF40071 		mov	r1, #512
 263 0082 2046     		mov	r0, r4
 264 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 265              	.LVL22:
 116:Core/Src/main.c ****     break;
 266              		.loc 1 116 5 view .LVU58
 267 0088 0122     		movs	r2, #1
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 13


 268 008a 4FF48071 		mov	r1, #256
 269 008e 2046     		mov	r0, r4
 270 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 271              	.LVL23:
 117:Core/Src/main.c ****   default:
 272              		.loc 1 117 5 view .LVU59
 121:Core/Src/main.c **** void updateClockBuffer()
 273              		.loc 1 121 1 is_stmt 0 view .LVU60
 274 0094 CBE7     		b	.L5
 275              	.L15:
 276 0096 00BF     		.align	2
 277              	.L14:
 278 0098 00000000 		.word	led_buffer
 279 009c 00080140 		.word	1073809408
 280              		.cfi_endproc
 281              	.LFE65:
 283              		.section	.text.updateClockBuffer,"ax",%progbits
 284              		.align	1
 285              		.global	updateClockBuffer
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 290              	updateClockBuffer:
 291              	.LFB66:
 123:Core/Src/main.c ****   led_buffer[0] = hour / 10;
 292              		.loc 1 123 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297 0000 10B4     		push	{r4}
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 4, -4
 124:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 301              		.loc 1 124 3 view .LVU62
 124:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 302              		.loc 1 124 24 is_stmt 0 view .LVU63
 303 0002 0F4B     		ldr	r3, .L18
 304 0004 1C68     		ldr	r4, [r3]
 305 0006 0F48     		ldr	r0, .L18+4
 306 0008 80FB0432 		smull	r3, r2, r0, r4
 307 000c E317     		asrs	r3, r4, #31
 308 000e C3EBA203 		rsb	r3, r3, r2, asr #2
 124:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 309              		.loc 1 124 17 view .LVU64
 310 0012 0D49     		ldr	r1, .L18+8
 311 0014 0B60     		str	r3, [r1]
 125:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 312              		.loc 1 125 3 is_stmt 1 view .LVU65
 125:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 313              		.loc 1 125 24 is_stmt 0 view .LVU66
 314 0016 03EB8303 		add	r3, r3, r3, lsl #2
 315 001a 5A00     		lsls	r2, r3, #1
 316 001c A21A     		subs	r2, r4, r2
 125:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 317              		.loc 1 125 17 view .LVU67
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 14


 318 001e 4A60     		str	r2, [r1, #4]
 126:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 319              		.loc 1 126 3 is_stmt 1 view .LVU68
 126:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 320              		.loc 1 126 26 is_stmt 0 view .LVU69
 321 0020 0A4B     		ldr	r3, .L18+12
 322 0022 1C68     		ldr	r4, [r3]
 323 0024 80FB0430 		smull	r3, r0, r0, r4
 324 0028 E317     		asrs	r3, r4, #31
 325 002a C3EBA003 		rsb	r3, r3, r0, asr #2
 126:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 326              		.loc 1 126 17 view .LVU70
 327 002e 8B60     		str	r3, [r1, #8]
 127:Core/Src/main.c **** }
 328              		.loc 1 127 3 is_stmt 1 view .LVU71
 127:Core/Src/main.c **** }
 329              		.loc 1 127 26 is_stmt 0 view .LVU72
 330 0030 03EB8303 		add	r3, r3, r3, lsl #2
 331 0034 5A00     		lsls	r2, r3, #1
 332 0036 A21A     		subs	r2, r4, r2
 127:Core/Src/main.c **** }
 333              		.loc 1 127 17 view .LVU73
 334 0038 CA60     		str	r2, [r1, #12]
 128:Core/Src/main.c **** void updateLedMatrix(int index)
 335              		.loc 1 128 1 view .LVU74
 336 003a 10BC     		pop	{r4}
 337              	.LCFI5:
 338              		.cfi_restore 4
 339              		.cfi_def_cfa_offset 0
 340 003c 7047     		bx	lr
 341              	.L19:
 342 003e 00BF     		.align	2
 343              	.L18:
 344 0040 00000000 		.word	hour
 345 0044 67666666 		.word	1717986919
 346 0048 00000000 		.word	led_buffer
 347 004c 00000000 		.word	minute
 348              		.cfi_endproc
 349              	.LFE66:
 351              		.section	.text.updateLedMatrix,"ax",%progbits
 352              		.align	1
 353              		.global	updateLedMatrix
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	updateLedMatrix:
 359              	.LVL24:
 360              	.LFB67:
 130:Core/Src/main.c ****   switch (index)
 361              		.loc 1 130 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 131:Core/Src/main.c ****   {
 365              		.loc 1 131 3 view .LVU76
 366 0000 00B1     		cbz	r0, .L26
 367 0002 7047     		bx	lr
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 15


 368              	.L26:
 130:Core/Src/main.c ****   switch (index)
 369              		.loc 1 130 1 is_stmt 0 view .LVU77
 370 0004 08B5     		push	{r3, lr}
 371              	.LCFI6:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 3, -8
 374              		.cfi_offset 14, -4
 136:Core/Src/main.c ****       break;
 375              		.loc 1 136 7 is_stmt 1 view .LVU78
 376 0006 0022     		movs	r2, #0
 377 0008 0421     		movs	r1, #4
 378 000a 00F18040 		add	r0, r0, #1073741824
 379              	.LVL25:
 136:Core/Src/main.c ****       break;
 380              		.loc 1 136 7 is_stmt 0 view .LVU79
 381 000e 00F58430 		add	r0, r0, #67584
 382              	.LVL26:
 136:Core/Src/main.c ****       break;
 383              		.loc 1 136 7 view .LVU80
 384 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 385              	.LVL27:
 137:Core/Src/main.c ****     case 1:
 386              		.loc 1 137 7 is_stmt 1 view .LVU81
 163:Core/Src/main.c **** /* USER CODE END 0 */
 387              		.loc 1 163 1 is_stmt 0 view .LVU82
 388 0016 08BD     		pop	{r3, pc}
 389              		.cfi_endproc
 390              	.LFE67:
 392              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 393              		.align	1
 394              		.global	HAL_TIM_PeriodElapsedCallback
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 399              	HAL_TIM_PeriodElapsedCallback:
 400              	.LVL28:
 401              	.LFB72:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 400:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 401:Core/Src/main.c **** {
 402              		.loc 1 401 1 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		.loc 1 401 1 is_stmt 0 view .LVU84
 407 0000 08B5     		push	{r3, lr}
 408              	.LCFI7:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 3, -8
 411              		.cfi_offset 14, -4
 402:Core/Src/main.c ****   timerRun();
 412              		.loc 1 402 3 is_stmt 1 view .LVU85
 413 0002 FFF7FEFF 		bl	timerRun
 414              	.LVL29:
 403:Core/Src/main.c **** }
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 16


 415              		.loc 1 403 1 is_stmt 0 view .LVU86
 416 0006 08BD     		pop	{r3, pc}
 417              		.cfi_endproc
 418              	.LFE72:
 420              		.section	.text.Error_Handler,"ax",%progbits
 421              		.align	1
 422              		.global	Error_Handler
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 427              	Error_Handler:
 428              	.LFB73:
 404:Core/Src/main.c **** /* USER CODE END 4 */
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** /**
 407:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 408:Core/Src/main.c ****  * @retval None
 409:Core/Src/main.c ****  */
 410:Core/Src/main.c **** void Error_Handler(void)
 411:Core/Src/main.c **** {
 429              		.loc 1 411 1 is_stmt 1 view -0
 430              		.cfi_startproc
 431              		@ Volatile: function does not return.
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 412:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 413:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 414:Core/Src/main.c ****   __disable_irq();
 435              		.loc 1 414 3 view .LVU88
 436              	.LBB6:
 437              	.LBI6:
 438              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 17


  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 18


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 19


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 439              		.loc 2 140 27 view .LVU89
 440              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 441              		.loc 2 142 3 view .LVU90
 442              		.syntax unified
 443              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 444 0000 72B6     		cpsid i
 445              	@ 0 "" 2
 446              		.thumb
 447              		.syntax unified
 448              	.L30:
 449              	.LBE7:
 450              	.LBE6:
 415:Core/Src/main.c ****   while (1)
 451              		.loc 1 415 3 discriminator 1 view .LVU91
 416:Core/Src/main.c ****   {
 417:Core/Src/main.c ****   }
 452              		.loc 1 417 3 discriminator 1 view .LVU92
 415:Core/Src/main.c ****   while (1)
 453              		.loc 1 415 9 discriminator 1 view .LVU93
 454 0002 FEE7     		b	.L30
 455              		.cfi_endproc
 456              	.LFE73:
 458              		.section	.text.MX_TIM2_Init,"ax",%progbits
 459              		.align	1
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 464              	MX_TIM2_Init:
 465              	.LFB70:
 316:Core/Src/main.c **** 
 466              		.loc 1 316 1 view -0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 24
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470 0000 00B5     		push	{lr}
 471              	.LCFI8:
 472              		.cfi_def_cfa_offset 4
 473              		.cfi_offset 14, -4
 474 0002 87B0     		sub	sp, sp, #28
 475              	.LCFI9:
 476              		.cfi_def_cfa_offset 32
 322:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 477              		.loc 1 322 3 view .LVU95
 322:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 478              		.loc 1 322 26 is_stmt 0 view .LVU96
 479 0004 0023     		movs	r3, #0
 480 0006 0293     		str	r3, [sp, #8]
 481 0008 0393     		str	r3, [sp, #12]
 482 000a 0493     		str	r3, [sp, #16]
 483 000c 0593     		str	r3, [sp, #20]
 323:Core/Src/main.c **** 
 484              		.loc 1 323 3 is_stmt 1 view .LVU97
 323:Core/Src/main.c **** 
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 20


 485              		.loc 1 323 27 is_stmt 0 view .LVU98
 486 000e 0093     		str	r3, [sp]
 487 0010 0193     		str	r3, [sp, #4]
 328:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 488              		.loc 1 328 3 is_stmt 1 view .LVU99
 328:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 489              		.loc 1 328 18 is_stmt 0 view .LVU100
 490 0012 1448     		ldr	r0, .L39
 491 0014 4FF08042 		mov	r2, #1073741824
 492 0018 0260     		str	r2, [r0]
 329:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 493              		.loc 1 329 3 is_stmt 1 view .LVU101
 329:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 494              		.loc 1 329 24 is_stmt 0 view .LVU102
 495 001a 41F63F72 		movw	r2, #7999
 496 001e 4260     		str	r2, [r0, #4]
 330:Core/Src/main.c ****   htim2.Init.Period = 9;
 497              		.loc 1 330 3 is_stmt 1 view .LVU103
 330:Core/Src/main.c ****   htim2.Init.Period = 9;
 498              		.loc 1 330 26 is_stmt 0 view .LVU104
 499 0020 8360     		str	r3, [r0, #8]
 331:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 500              		.loc 1 331 3 is_stmt 1 view .LVU105
 331:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 501              		.loc 1 331 21 is_stmt 0 view .LVU106
 502 0022 0922     		movs	r2, #9
 503 0024 C260     		str	r2, [r0, #12]
 332:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 504              		.loc 1 332 3 is_stmt 1 view .LVU107
 332:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 505              		.loc 1 332 28 is_stmt 0 view .LVU108
 506 0026 0361     		str	r3, [r0, #16]
 333:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 507              		.loc 1 333 3 is_stmt 1 view .LVU109
 333:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 508              		.loc 1 333 32 is_stmt 0 view .LVU110
 509 0028 8361     		str	r3, [r0, #24]
 334:Core/Src/main.c ****   {
 510              		.loc 1 334 3 is_stmt 1 view .LVU111
 334:Core/Src/main.c ****   {
 511              		.loc 1 334 7 is_stmt 0 view .LVU112
 512 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 513              	.LVL30:
 334:Core/Src/main.c ****   {
 514              		.loc 1 334 6 view .LVU113
 515 002e 90B9     		cbnz	r0, .L36
 338:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 516              		.loc 1 338 3 is_stmt 1 view .LVU114
 338:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 517              		.loc 1 338 34 is_stmt 0 view .LVU115
 518 0030 4FF48053 		mov	r3, #4096
 519 0034 0293     		str	r3, [sp, #8]
 339:Core/Src/main.c ****   {
 520              		.loc 1 339 3 is_stmt 1 view .LVU116
 339:Core/Src/main.c ****   {
 521              		.loc 1 339 7 is_stmt 0 view .LVU117
 522 0036 02A9     		add	r1, sp, #8
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 21


 523 0038 0A48     		ldr	r0, .L39
 524 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 525              	.LVL31:
 339:Core/Src/main.c ****   {
 526              		.loc 1 339 6 view .LVU118
 527 003e 60B9     		cbnz	r0, .L37
 343:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 528              		.loc 1 343 3 is_stmt 1 view .LVU119
 343:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 529              		.loc 1 343 37 is_stmt 0 view .LVU120
 530 0040 0023     		movs	r3, #0
 531 0042 0093     		str	r3, [sp]
 344:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 532              		.loc 1 344 3 is_stmt 1 view .LVU121
 344:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 533              		.loc 1 344 33 is_stmt 0 view .LVU122
 534 0044 0193     		str	r3, [sp, #4]
 345:Core/Src/main.c ****   {
 535              		.loc 1 345 3 is_stmt 1 view .LVU123
 345:Core/Src/main.c ****   {
 536              		.loc 1 345 7 is_stmt 0 view .LVU124
 537 0046 6946     		mov	r1, sp
 538 0048 0648     		ldr	r0, .L39
 539 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 540              	.LVL32:
 345:Core/Src/main.c ****   {
 541              		.loc 1 345 6 view .LVU125
 542 004e 30B9     		cbnz	r0, .L38
 352:Core/Src/main.c **** 
 543              		.loc 1 352 1 view .LVU126
 544 0050 07B0     		add	sp, sp, #28
 545              	.LCFI10:
 546              		.cfi_remember_state
 547              		.cfi_def_cfa_offset 4
 548              		@ sp needed
 549 0052 5DF804FB 		ldr	pc, [sp], #4
 550              	.L36:
 551              	.LCFI11:
 552              		.cfi_restore_state
 336:Core/Src/main.c ****   }
 553              		.loc 1 336 5 is_stmt 1 view .LVU127
 554 0056 FFF7FEFF 		bl	Error_Handler
 555              	.LVL33:
 556              	.L37:
 341:Core/Src/main.c ****   }
 557              		.loc 1 341 5 view .LVU128
 558 005a FFF7FEFF 		bl	Error_Handler
 559              	.LVL34:
 560              	.L38:
 347:Core/Src/main.c ****   }
 561              		.loc 1 347 5 view .LVU129
 562 005e FFF7FEFF 		bl	Error_Handler
 563              	.LVL35:
 564              	.L40:
 565 0062 00BF     		.align	2
 566              	.L39:
 567 0064 00000000 		.word	htim2
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 22


 568              		.cfi_endproc
 569              	.LFE70:
 571              		.section	.text.SystemClock_Config,"ax",%progbits
 572              		.align	1
 573              		.global	SystemClock_Config
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 578              	SystemClock_Config:
 579              	.LFB69:
 280:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 580              		.loc 1 280 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 64
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584 0000 00B5     		push	{lr}
 585              	.LCFI12:
 586              		.cfi_def_cfa_offset 4
 587              		.cfi_offset 14, -4
 588 0002 91B0     		sub	sp, sp, #68
 589              	.LCFI13:
 590              		.cfi_def_cfa_offset 72
 281:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 591              		.loc 1 281 3 view .LVU131
 281:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 592              		.loc 1 281 22 is_stmt 0 view .LVU132
 593 0004 2822     		movs	r2, #40
 594 0006 0021     		movs	r1, #0
 595 0008 06A8     		add	r0, sp, #24
 596 000a FFF7FEFF 		bl	memset
 597              	.LVL36:
 282:Core/Src/main.c **** 
 598              		.loc 1 282 3 is_stmt 1 view .LVU133
 282:Core/Src/main.c **** 
 599              		.loc 1 282 22 is_stmt 0 view .LVU134
 600 000e 0023     		movs	r3, #0
 601 0010 0193     		str	r3, [sp, #4]
 602 0012 0293     		str	r3, [sp, #8]
 603 0014 0393     		str	r3, [sp, #12]
 604 0016 0493     		str	r3, [sp, #16]
 605 0018 0593     		str	r3, [sp, #20]
 287:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 606              		.loc 1 287 3 is_stmt 1 view .LVU135
 287:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 607              		.loc 1 287 36 is_stmt 0 view .LVU136
 608 001a 0223     		movs	r3, #2
 609 001c 0693     		str	r3, [sp, #24]
 288:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 610              		.loc 1 288 3 is_stmt 1 view .LVU137
 288:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 611              		.loc 1 288 30 is_stmt 0 view .LVU138
 612 001e 0123     		movs	r3, #1
 613 0020 0A93     		str	r3, [sp, #40]
 289:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 614              		.loc 1 289 3 is_stmt 1 view .LVU139
 289:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 615              		.loc 1 289 41 is_stmt 0 view .LVU140
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 23


 616 0022 1023     		movs	r3, #16
 617 0024 0B93     		str	r3, [sp, #44]
 290:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 618              		.loc 1 290 3 is_stmt 1 view .LVU141
 291:Core/Src/main.c ****   {
 619              		.loc 1 291 3 view .LVU142
 291:Core/Src/main.c ****   {
 620              		.loc 1 291 7 is_stmt 0 view .LVU143
 621 0026 06A8     		add	r0, sp, #24
 622 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 623              	.LVL37:
 291:Core/Src/main.c ****   {
 624              		.loc 1 291 6 view .LVU144
 625 002c 68B9     		cbnz	r0, .L45
 298:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 626              		.loc 1 298 3 is_stmt 1 view .LVU145
 298:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 627              		.loc 1 298 31 is_stmt 0 view .LVU146
 628 002e 0F23     		movs	r3, #15
 629 0030 0193     		str	r3, [sp, #4]
 299:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 630              		.loc 1 299 3 is_stmt 1 view .LVU147
 299:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 631              		.loc 1 299 34 is_stmt 0 view .LVU148
 632 0032 0021     		movs	r1, #0
 633 0034 0291     		str	r1, [sp, #8]
 300:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 634              		.loc 1 300 3 is_stmt 1 view .LVU149
 300:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 635              		.loc 1 300 35 is_stmt 0 view .LVU150
 636 0036 0391     		str	r1, [sp, #12]
 301:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 637              		.loc 1 301 3 is_stmt 1 view .LVU151
 301:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 638              		.loc 1 301 36 is_stmt 0 view .LVU152
 639 0038 0491     		str	r1, [sp, #16]
 302:Core/Src/main.c **** 
 640              		.loc 1 302 3 is_stmt 1 view .LVU153
 302:Core/Src/main.c **** 
 641              		.loc 1 302 36 is_stmt 0 view .LVU154
 642 003a 0591     		str	r1, [sp, #20]
 304:Core/Src/main.c ****   {
 643              		.loc 1 304 3 is_stmt 1 view .LVU155
 304:Core/Src/main.c ****   {
 644              		.loc 1 304 7 is_stmt 0 view .LVU156
 645 003c 01A8     		add	r0, sp, #4
 646 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 647              	.LVL38:
 304:Core/Src/main.c ****   {
 648              		.loc 1 304 6 view .LVU157
 649 0042 20B9     		cbnz	r0, .L46
 308:Core/Src/main.c **** 
 650              		.loc 1 308 1 view .LVU158
 651 0044 11B0     		add	sp, sp, #68
 652              	.LCFI14:
 653              		.cfi_remember_state
 654              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 24


 655              		@ sp needed
 656 0046 5DF804FB 		ldr	pc, [sp], #4
 657              	.L45:
 658              	.LCFI15:
 659              		.cfi_restore_state
 293:Core/Src/main.c ****   }
 660              		.loc 1 293 5 is_stmt 1 view .LVU159
 661 004a FFF7FEFF 		bl	Error_Handler
 662              	.LVL39:
 663              	.L46:
 306:Core/Src/main.c ****   }
 664              		.loc 1 306 5 view .LVU160
 665 004e FFF7FEFF 		bl	Error_Handler
 666              	.LVL40:
 667              		.cfi_endproc
 668              	.LFE69:
 670              		.section	.text.main,"ax",%progbits
 671              		.align	1
 672              		.global	main
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 677              	main:
 678              	.LFB68:
 171:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 679              		.loc 1 171 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683 0000 38B5     		push	{r3, r4, r5, lr}
 684              	.LCFI16:
 685              		.cfi_def_cfa_offset 16
 686              		.cfi_offset 3, -16
 687              		.cfi_offset 4, -12
 688              		.cfi_offset 5, -8
 689              		.cfi_offset 14, -4
 179:Core/Src/main.c **** 
 690              		.loc 1 179 3 view .LVU162
 691 0002 FFF7FEFF 		bl	HAL_Init
 692              	.LVL41:
 186:Core/Src/main.c **** 
 693              		.loc 1 186 3 view .LVU163
 694 0006 FFF7FEFF 		bl	SystemClock_Config
 695              	.LVL42:
 193:Core/Src/main.c ****   MX_TIM2_Init();
 696              		.loc 1 193 3 view .LVU164
 697 000a FFF7FEFF 		bl	MX_GPIO_Init
 698              	.LVL43:
 194:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 699              		.loc 1 194 3 view .LVU165
 700 000e FFF7FEFF 		bl	MX_TIM2_Init
 701              	.LVL44:
 196:Core/Src/main.c ****   updateClockBuffer();
 702              		.loc 1 196 3 view .LVU166
 703 0012 6C48     		ldr	r0, .L58
 704 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 705              	.LVL45:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 25


 197:Core/Src/main.c ****   setTimer1(100);
 706              		.loc 1 197 3 view .LVU167
 707 0018 FFF7FEFF 		bl	updateClockBuffer
 708              	.LVL46:
 198:Core/Src/main.c ****   setTimer2(50);
 709              		.loc 1 198 3 view .LVU168
 710 001c 6420     		movs	r0, #100
 711 001e FFF7FEFF 		bl	setTimer1
 712              	.LVL47:
 199:Core/Src/main.c ****   setTimer3(25); // fai lam tan so  >= 25hz
 713              		.loc 1 199 3 view .LVU169
 714 0022 3220     		movs	r0, #50
 715 0024 FFF7FEFF 		bl	setTimer2
 716              	.LVL48:
 200:Core/Src/main.c ****   clearDisplay7Seg();
 717              		.loc 1 200 3 view .LVU170
 718 0028 1920     		movs	r0, #25
 719 002a FFF7FEFF 		bl	setTimer3
 720              	.LVL49:
 201:Core/Src/main.c ****   update7SEG(0);
 721              		.loc 1 201 3 view .LVU171
 722 002e FFF7FEFF 		bl	clearDisplay7Seg
 723              	.LVL50:
 202:Core/Src/main.c ****   int index_led = 1;
 724              		.loc 1 202 3 view .LVU172
 725 0032 0020     		movs	r0, #0
 726 0034 FFF7FEFF 		bl	update7SEG
 727              	.LVL51:
 203:Core/Src/main.c ****   HAL_GPIO_WritePin(DOT_GPIO_Port, DOT_Pin, 1);
 728              		.loc 1 203 3 view .LVU173
 204:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 0);
 729              		.loc 1 204 3 view .LVU174
 730 0038 634C     		ldr	r4, .L58+4
 731 003a 0122     		movs	r2, #1
 732 003c 1021     		movs	r1, #16
 733 003e 2046     		mov	r0, r4
 734 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 735              	.LVL52:
 205:Core/Src/main.c ****   HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
 736              		.loc 1 205 3 view .LVU175
 737 0044 0022     		movs	r2, #0
 738 0046 2021     		movs	r1, #32
 739 0048 2046     		mov	r0, r4
 740 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 741              	.LVL53:
 206:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 742              		.loc 1 206 3 view .LVU176
 743 004e 0022     		movs	r2, #0
 744 0050 4021     		movs	r1, #64
 745 0052 2046     		mov	r0, r4
 746 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 747              	.LVL54:
 207:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 748              		.loc 1 207 3 view .LVU177
 749 0058 0122     		movs	r2, #1
 750 005a 8021     		movs	r1, #128
 751 005c 2046     		mov	r0, r4
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 26


 752 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 753              	.LVL55:
 208:Core/Src/main.c ****   HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 754              		.loc 1 208 3 view .LVU178
 755 0062 0122     		movs	r2, #1
 756 0064 4FF48071 		mov	r1, #256
 757 0068 2046     		mov	r0, r4
 758 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 759              	.LVL56:
 209:Core/Src/main.c **** 
 760              		.loc 1 209 3 view .LVU179
 761 006e 0122     		movs	r2, #1
 762 0070 4FF40071 		mov	r1, #512
 763 0074 2046     		mov	r0, r4
 764 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 765              	.LVL57:
 211:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW1_GPIO_Port, ROW1_Pin, 1);
 766              		.loc 1 211 3 view .LVU180
 767 007a 544D     		ldr	r5, .L58+8
 768 007c C022     		movs	r2, #192
 769 007e 4FF48071 		mov	r1, #256
 770 0082 2846     		mov	r0, r5
 771 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 772              	.LVL58:
 212:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW2_GPIO_Port, ROW2_Pin, 1);
 773              		.loc 1 212 3 view .LVU181
 774 0088 0122     		movs	r2, #1
 775 008a 4FF40071 		mov	r1, #512
 776 008e 2846     		mov	r0, r5
 777 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 778              	.LVL59:
 213:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW3_GPIO_Port, ROW3_Pin, 1);
 779              		.loc 1 213 3 view .LVU182
 780 0094 0122     		movs	r2, #1
 781 0096 4FF48061 		mov	r1, #1024
 782 009a 2846     		mov	r0, r5
 783 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 784              	.LVL60:
 214:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW4_GPIO_Port, ROW4_Pin, 1);
 785              		.loc 1 214 3 view .LVU183
 786 00a0 0122     		movs	r2, #1
 787 00a2 4FF40061 		mov	r1, #2048
 788 00a6 2846     		mov	r0, r5
 789 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 790              	.LVL61:
 215:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW5_GPIO_Port, ROW5_Pin, 1);
 791              		.loc 1 215 3 view .LVU184
 792 00ac 0122     		movs	r2, #1
 793 00ae 4FF48051 		mov	r1, #4096
 794 00b2 2846     		mov	r0, r5
 795 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 796              	.LVL62:
 216:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW6_GPIO_Port, ROW6_Pin, 1);
 797              		.loc 1 216 3 view .LVU185
 798 00b8 0122     		movs	r2, #1
 799 00ba 4FF40051 		mov	r1, #8192
 800 00be 2846     		mov	r0, r5
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 27


 801 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 802              	.LVL63:
 217:Core/Src/main.c ****   HAL_GPIO_WritePin(ROW7_GPIO_Port, ROW7_Pin, 1);
 803              		.loc 1 217 3 view .LVU186
 804 00c4 0122     		movs	r2, #1
 805 00c6 4FF48041 		mov	r1, #16384
 806 00ca 2846     		mov	r0, r5
 807 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 808              	.LVL64:
 218:Core/Src/main.c **** 
 809              		.loc 1 218 3 view .LVU187
 810 00d0 0122     		movs	r2, #1
 811 00d2 4FF40041 		mov	r1, #32768
 812 00d6 2846     		mov	r0, r5
 813 00d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 814              	.LVL65:
 220:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM1_GPIO_Port, ENM1_Pin, 0x80);
 815              		.loc 1 220 3 view .LVU188
 816 00dc C022     		movs	r2, #192
 817 00de 0421     		movs	r1, #4
 818 00e0 2046     		mov	r0, r4
 819 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 820              	.LVL66:
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM2_GPIO_Port, ENM2_Pin, 0x33);
 821              		.loc 1 221 3 view .LVU189
 822 00e6 8022     		movs	r2, #128
 823 00e8 0821     		movs	r1, #8
 824 00ea 2046     		mov	r0, r4
 825 00ec FFF7FEFF 		bl	HAL_GPIO_WritePin
 826              	.LVL67:
 222:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM3_GPIO_Port, ENM3_Pin, 0x33);
 827              		.loc 1 222 3 view .LVU190
 828 00f0 3322     		movs	r2, #51
 829 00f2 4FF48061 		mov	r1, #1024
 830 00f6 2046     		mov	r0, r4
 831 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 832              	.LVL68:
 223:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM4_GPIO_Port, ENM4_Pin, 0x33);
 833              		.loc 1 223 3 view .LVU191
 834 00fc 3322     		movs	r2, #51
 835 00fe 4FF40061 		mov	r1, #2048
 836 0102 2046     		mov	r0, r4
 837 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
 838              	.LVL69:
 224:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM5_GPIO_Port, ENM5_Pin, 0x33);
 839              		.loc 1 224 3 view .LVU192
 840 0108 3322     		movs	r2, #51
 841 010a 4FF48051 		mov	r1, #4096
 842 010e 2046     		mov	r0, r4
 843 0110 FFF7FEFF 		bl	HAL_GPIO_WritePin
 844              	.LVL70:
 225:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM6_GPIO_Port, ENM6_Pin, 0x80);
 845              		.loc 1 225 3 view .LVU193
 846 0114 3322     		movs	r2, #51
 847 0116 4FF40051 		mov	r1, #8192
 848 011a 2046     		mov	r0, r4
 849 011c FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 28


 850              	.LVL71:
 226:Core/Src/main.c ****   HAL_GPIO_WritePin(ENM7_GPIO_Port, ENM7_Pin, 0xC0);
 851              		.loc 1 226 3 view .LVU194
 852 0120 8022     		movs	r2, #128
 853 0122 4FF48041 		mov	r1, #16384
 854 0126 2046     		mov	r0, r4
 855 0128 FFF7FEFF 		bl	HAL_GPIO_WritePin
 856              	.LVL72:
 227:Core/Src/main.c **** 
 857              		.loc 1 227 3 view .LVU195
 858 012c C022     		movs	r2, #192
 859 012e 4FF40041 		mov	r1, #32768
 860 0132 2046     		mov	r0, r4
 861 0134 FFF7FEFF 		bl	HAL_GPIO_WritePin
 862              	.LVL73:
 203:Core/Src/main.c ****   HAL_GPIO_WritePin(DOT_GPIO_Port, DOT_Pin, 1);
 863              		.loc 1 203 7 is_stmt 0 view .LVU196
 864 0138 0124     		movs	r4, #1
 865 013a 0CE0     		b	.L48
 866              	.LVL74:
 867              	.L52:
 253:Core/Src/main.c ****       setTimer1(100);
 868              		.loc 1 253 7 is_stmt 1 view .LVU197
 869 013c FFF7FEFF 		bl	updateClockBuffer
 870              	.LVL75:
 254:Core/Src/main.c ****     }
 871              		.loc 1 254 7 view .LVU198
 872 0140 6420     		movs	r0, #100
 873 0142 FFF7FEFF 		bl	setTimer1
 874              	.LVL76:
 875              	.L49:
 256:Core/Src/main.c ****     {
 876              		.loc 1 256 5 view .LVU199
 256:Core/Src/main.c ****     {
 877              		.loc 1 256 21 is_stmt 0 view .LVU200
 878 0146 224B     		ldr	r3, .L58+12
 879 0148 1B68     		ldr	r3, [r3]
 256:Core/Src/main.c ****     {
 880              		.loc 1 256 8 view .LVU201
 881 014a 012B     		cmp	r3, #1
 882 014c 27D0     		beq	.L56
 883              	.L53:
 262:Core/Src/main.c ****     {
 884              		.loc 1 262 5 is_stmt 1 view .LVU202
 262:Core/Src/main.c ****     {
 885              		.loc 1 262 21 is_stmt 0 view .LVU203
 886 014e 214B     		ldr	r3, .L58+16
 887 0150 1B68     		ldr	r3, [r3]
 262:Core/Src/main.c ****     {
 888              		.loc 1 262 8 view .LVU204
 889 0152 012B     		cmp	r3, #1
 890 0154 31D0     		beq	.L57
 891              	.LVL77:
 892              	.L48:
 233:Core/Src/main.c ****   {
 893              		.loc 1 233 3 is_stmt 1 view .LVU205
 236:Core/Src/main.c ****     {
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 29


 894              		.loc 1 236 5 view .LVU206
 236:Core/Src/main.c ****     {
 895              		.loc 1 236 21 is_stmt 0 view .LVU207
 896 0156 204B     		ldr	r3, .L58+20
 897 0158 1B68     		ldr	r3, [r3]
 236:Core/Src/main.c ****     {
 898              		.loc 1 236 8 view .LVU208
 899 015a 012B     		cmp	r3, #1
 900 015c F3D1     		bne	.L49
 238:Core/Src/main.c ****       if (second >= 60)
 901              		.loc 1 238 7 is_stmt 1 view .LVU209
 238:Core/Src/main.c ****       if (second >= 60)
 902              		.loc 1 238 13 is_stmt 0 view .LVU210
 903 015e 1F4A     		ldr	r2, .L58+24
 904 0160 1368     		ldr	r3, [r2]
 905 0162 0133     		adds	r3, r3, #1
 906 0164 1360     		str	r3, [r2]
 239:Core/Src/main.c ****       {
 907              		.loc 1 239 7 is_stmt 1 view .LVU211
 239:Core/Src/main.c ****       {
 908              		.loc 1 239 10 is_stmt 0 view .LVU212
 909 0166 3B2B     		cmp	r3, #59
 910 0168 06DD     		ble	.L50
 241:Core/Src/main.c ****         minute++;
 911              		.loc 1 241 9 is_stmt 1 view .LVU213
 241:Core/Src/main.c ****         minute++;
 912              		.loc 1 241 16 is_stmt 0 view .LVU214
 913 016a 1346     		mov	r3, r2
 914 016c 0022     		movs	r2, #0
 915 016e 1A60     		str	r2, [r3]
 242:Core/Src/main.c ****       }
 916              		.loc 1 242 9 is_stmt 1 view .LVU215
 242:Core/Src/main.c ****       }
 917              		.loc 1 242 15 is_stmt 0 view .LVU216
 918 0170 1B4A     		ldr	r2, .L58+28
 919 0172 1368     		ldr	r3, [r2]
 920 0174 0133     		adds	r3, r3, #1
 921 0176 1360     		str	r3, [r2]
 922              	.L50:
 244:Core/Src/main.c ****       {
 923              		.loc 1 244 7 is_stmt 1 view .LVU217
 244:Core/Src/main.c ****       {
 924              		.loc 1 244 18 is_stmt 0 view .LVU218
 925 0178 194B     		ldr	r3, .L58+28
 926 017a 1B68     		ldr	r3, [r3]
 244:Core/Src/main.c ****       {
 927              		.loc 1 244 10 view .LVU219
 928 017c 3B2B     		cmp	r3, #59
 929 017e 06DD     		ble	.L51
 246:Core/Src/main.c ****         hour++;
 930              		.loc 1 246 9 is_stmt 1 view .LVU220
 246:Core/Src/main.c ****         hour++;
 931              		.loc 1 246 16 is_stmt 0 view .LVU221
 932 0180 174B     		ldr	r3, .L58+28
 933 0182 0022     		movs	r2, #0
 934 0184 1A60     		str	r2, [r3]
 247:Core/Src/main.c ****       }
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 30


 935              		.loc 1 247 9 is_stmt 1 view .LVU222
 247:Core/Src/main.c ****       }
 936              		.loc 1 247 13 is_stmt 0 view .LVU223
 937 0186 174A     		ldr	r2, .L58+32
 938 0188 1368     		ldr	r3, [r2]
 939 018a 0133     		adds	r3, r3, #1
 940 018c 1360     		str	r3, [r2]
 941              	.L51:
 249:Core/Src/main.c ****       {
 942              		.loc 1 249 7 is_stmt 1 view .LVU224
 249:Core/Src/main.c ****       {
 943              		.loc 1 249 16 is_stmt 0 view .LVU225
 944 018e 154B     		ldr	r3, .L58+32
 945 0190 1B68     		ldr	r3, [r3]
 249:Core/Src/main.c ****       {
 946              		.loc 1 249 10 view .LVU226
 947 0192 172B     		cmp	r3, #23
 948 0194 D2DD     		ble	.L52
 251:Core/Src/main.c ****       }
 949              		.loc 1 251 9 is_stmt 1 view .LVU227
 251:Core/Src/main.c ****       }
 950              		.loc 1 251 14 is_stmt 0 view .LVU228
 951 0196 134B     		ldr	r3, .L58+32
 952 0198 0022     		movs	r2, #0
 953 019a 1A60     		str	r2, [r3]
 954 019c CEE7     		b	.L52
 955              	.L56:
 258:Core/Src/main.c ****       index_led++;
 956              		.loc 1 258 7 is_stmt 1 view .LVU229
 957 019e 6342     		rsbs	r3, r4, #0
 958 01a0 04F00300 		and	r0, r4, #3
 959 01a4 03F00303 		and	r3, r3, #3
 960 01a8 58BF     		it	pl
 961 01aa 5842     		rsbpl	r0, r3, #0
 962 01ac FFF7FEFF 		bl	update7SEG
 963              	.LVL78:
 259:Core/Src/main.c ****       setTimer2(50);
 964              		.loc 1 259 7 view .LVU230
 259:Core/Src/main.c ****       setTimer2(50);
 965              		.loc 1 259 16 is_stmt 0 view .LVU231
 966 01b0 0134     		adds	r4, r4, #1
 967              	.LVL79:
 260:Core/Src/main.c ****     }
 968              		.loc 1 260 7 is_stmt 1 view .LVU232
 969 01b2 3220     		movs	r0, #50
 970 01b4 FFF7FEFF 		bl	setTimer2
 971              	.LVL80:
 972 01b8 C9E7     		b	.L53
 973              	.L57:
 266:Core/Src/main.c ****     }
 974              		.loc 1 266 7 view .LVU233
 975 01ba 1920     		movs	r0, #25
 976 01bc FFF7FEFF 		bl	setTimer3
 977              	.LVL81:
 978 01c0 C9E7     		b	.L48
 979              	.L59:
 980 01c2 00BF     		.align	2
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 31


 981              	.L58:
 982 01c4 00000000 		.word	htim2
 983 01c8 00080140 		.word	1073809408
 984 01cc 000C0140 		.word	1073810432
 985 01d0 00000000 		.word	timer2_flag
 986 01d4 00000000 		.word	timer3_flag
 987 01d8 00000000 		.word	timer1_flag
 988 01dc 00000000 		.word	second
 989 01e0 00000000 		.word	minute
 990 01e4 00000000 		.word	hour
 991              		.cfi_endproc
 992              	.LFE68:
 994              		.global	second
 995              		.section	.data.second,"aw"
 996              		.align	2
 999              	second:
 1000 0000 32000000 		.word	50
 1001              		.global	minute
 1002              		.section	.data.minute,"aw"
 1003              		.align	2
 1006              	minute:
 1007 0000 09000000 		.word	9
 1008              		.global	hour
 1009              		.section	.data.hour,"aw"
 1010              		.align	2
 1013              	hour:
 1014 0000 12000000 		.word	18
 1015              		.global	matrix_buffer
 1016              		.section	.data.matrix_buffer,"aw"
 1017              		.align	2
 1020              	matrix_buffer:
 1021 0000 01020304 		.ascii	"\001\002\003\004\005\006\007\010"
 1021      05060708 
 1022              		.global	a
 1023              		.section	.data.a,"aw"
 1024              		.align	2
 1027              	a:
 1028 0000 FFFFFFFF 		.ascii	"\377\377\377\377\377\377\377\377\303\201\231\231\201"
 1028      FFFFFFFF 
 1028      C3819999 
 1028      81
 1029 000d 999999FF 		.ascii	"\231\231\231\377\377\377\377\377\377\377\377"
 1029      FFFFFFFF 
 1029      FFFFFF
 1030              		.global	led_buffer
 1031              		.section	.data.led_buffer,"aw"
 1032              		.align	2
 1035              	led_buffer:
 1036 0000 01000000 		.word	1
 1037 0004 08000000 		.word	8
 1038 0008 00000000 		.word	0
 1039 000c 09000000 		.word	9
 1040              		.global	index_led_matrix
 1041              		.section	.bss.index_led_matrix,"aw",%nobits
 1042              		.align	2
 1045              	index_led_matrix:
 1046 0000 00000000 		.space	4
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 32


 1047              		.global	MAX_LED_MATRIX
 1048              		.section	.rodata.MAX_LED_MATRIX,"a"
 1049              		.align	2
 1052              	MAX_LED_MATRIX:
 1053 0000 08000000 		.word	8
 1054              		.global	MAX_LED
 1055              		.section	.rodata.MAX_LED,"a"
 1056              		.align	2
 1059              	MAX_LED:
 1060 0000 04000000 		.word	4
 1061              		.global	htim2
 1062              		.section	.bss.htim2,"aw",%nobits
 1063              		.align	2
 1066              	htim2:
 1067 0000 00000000 		.space	72
 1067      00000000 
 1067      00000000 
 1067      00000000 
 1067      00000000 
 1068              		.text
 1069              	.Letext0:
 1070              		.file 3 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\machine\\_default_types.h"
 1071              		.file 4 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\sys\\_stdint.h"
 1072              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 1073              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1074              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1075              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1076              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1077              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1078              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1079              		.file 12 "Core/Inc/software_timer.h"
 1080              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1081              		.file 14 "Core/Inc/7segmentLED.h"
 1082              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1083              		.file 16 "<built-in>"
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 33


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:141    .text.MX_GPIO_Init:00000088 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:148    .text.update7SEG:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:154    .text.update7SEG:00000000 update7SEG
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:172    .text.update7SEG:0000000a $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:176    .text.update7SEG:0000000e $t
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:278    .text.update7SEG:00000098 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1035   .data.led_buffer:00000000 led_buffer
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:284    .text.updateClockBuffer:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:290    .text.updateClockBuffer:00000000 updateClockBuffer
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:344    .text.updateClockBuffer:00000040 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1013   .data.hour:00000000 hour
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1006   .data.minute:00000000 minute
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:352    .text.updateLedMatrix:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:358    .text.updateLedMatrix:00000000 updateLedMatrix
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:393    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:399    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:421    .text.Error_Handler:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:427    .text.Error_Handler:00000000 Error_Handler
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:459    .text.MX_TIM2_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:464    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:567    .text.MX_TIM2_Init:00000064 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1066   .bss.htim2:00000000 htim2
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:572    .text.SystemClock_Config:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:578    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:671    .text.main:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:677    .text.main:00000000 main
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:982    .text.main:000001c4 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:999    .data.second:00000000 second
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:996    .data.second:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1003   .data.minute:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1010   .data.hour:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1020   .data.matrix_buffer:00000000 matrix_buffer
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1017   .data.matrix_buffer:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1027   .data.a:00000000 a
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1024   .data.a:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1032   .data.led_buffer:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1045   .bss.index_led_matrix:00000000 index_led_matrix
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1042   .bss.index_led_matrix:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1052   .rodata.MAX_LED_MATRIX:00000000 MAX_LED_MATRIX
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1049   .rodata.MAX_LED_MATRIX:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1059   .rodata.MAX_LED:00000000 MAX_LED
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1056   .rodata.MAX_LED:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccGaclGB.s:1063   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
display7Seg
timerRun
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccGaclGB.s 			page 34


HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
setTimer1
setTimer2
setTimer3
clearDisplay7Seg
timer2_flag
timer3_flag
timer1_flag

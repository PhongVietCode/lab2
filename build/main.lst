ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB75:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "software_timer.h"
  25:Core/Src/main.c **** #include "7segmentLED.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_TIM2_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** const int MAX_LED = 4;
  63:Core/Src/main.c **** const int MAX_LED_MATRIX = 8;
  64:Core/Src/main.c **** int index_led_matrix = 0;
  65:Core/Src/main.c **** int led_buffer[4] = {1, 8, 0, 9};
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // quet cot hang
  68:Core/Src/main.c **** uint16_t cot[8] = {ENM0_Pin, ENM1_Pin, ENM2_Pin, ENM3_Pin, ENM4_Pin, ENM5_Pin, ENM6_Pin, ENM7_Pin};
  69:Core/Src/main.c **** uint16_t hang[8] = {ROW0_Pin, ROW1_Pin, ROW2_Pin, ROW3_Pin, ROW4_Pin, ROW5_Pin, ROW6_Pin, ROW7_Pin}
  70:Core/Src/main.c **** // ma gui ra cot
  71:Core/Src/main.c **** uint16_t matrix_buffer[8] = {0x18, 0x3c, 0x66, 0x66, 0x7e, 0x7e, 0x66, 0x66};
  72:Core/Src/main.c **** // ma quet hang
  73:Core/Src/main.c **** uint16_t bytes[8] = {
  74:Core/Src/main.c ****     0x01,
  75:Core/Src/main.c ****     0x02,
  76:Core/Src/main.c ****     0x04,
  77:Core/Src/main.c ****     0x08,
  78:Core/Src/main.c ****     0x10,
  79:Core/Src/main.c ****     0x20,
  80:Core/Src/main.c ****     0x40,
  81:Core/Src/main.c ****     0x80,
  82:Core/Src/main.c **** };
  83:Core/Src/main.c **** int hour = 18;
  84:Core/Src/main.c **** int minute = 9;
  85:Core/Src/main.c **** int second = 50;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** void update7SEG(int index)
  88:Core/Src/main.c **** {
  89:Core/Src/main.c ****   switch (index)
  90:Core/Src/main.c ****   {
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 3


  91:Core/Src/main.c ****   case 0:
  92:Core/Src/main.c ****     display7Seg(led_buffer[0]);
  93:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
  94:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
  95:Core/Src/main.c ****     break;
  96:Core/Src/main.c ****   case 1:
  97:Core/Src/main.c ****     display7Seg(led_buffer[1]);
  98:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
  99:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 1);
 100:Core/Src/main.c ****     break;
 101:Core/Src/main.c ****   case 2:
 102:Core/Src/main.c ****     display7Seg(led_buffer[2]);
 103:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 104:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 105:Core/Src/main.c ****     break;
 106:Core/Src/main.c ****   case 3:
 107:Core/Src/main.c ****     display7Seg(led_buffer[3]);
 108:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
 109:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 110:Core/Src/main.c ****     break;
 111:Core/Src/main.c ****   default:
 112:Core/Src/main.c ****     break;
 113:Core/Src/main.c ****   }
 114:Core/Src/main.c **** }
 115:Core/Src/main.c **** void updateClockBuffer()
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   led_buffer[0] = hour / 10;
 118:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 119:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 120:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 121:Core/Src/main.c **** }
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** void writeByte(GPIO_TypeDef *port, uint16_t *pins, uint16_t byte)
 124:Core/Src/main.c **** {
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[0], byte & (uint16_t)0x01);
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[2], byte & (uint16_t)0x04);
 128:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[3], byte & (uint16_t)0x08);
 129:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[4], byte & (uint16_t)0x10);
 130:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[5], byte & (uint16_t)0x20);
 131:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[6], byte & (uint16_t)0x40);
 132:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[7], byte & (uint16_t)0x80);
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** void updateLedMatrix(int index)
 136:Core/Src/main.c **** {
 137:Core/Src/main.c ****   uint16_t temp = matrix_buffer[index];
 138:Core/Src/main.c ****   switch (index)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****   case 0:
 141:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 142:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 143:Core/Src/main.c ****     break;
 144:Core/Src/main.c ****   case 1:
 145:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 146:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 4


 148:Core/Src/main.c ****     break;
 149:Core/Src/main.c ****   case 2:
 150:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 151:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     break;
 154:Core/Src/main.c ****   case 3:
 155:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 156:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****     break;
 159:Core/Src/main.c ****   case 4:
 160:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 161:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****     break;
 164:Core/Src/main.c ****   case 5:
 165:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 166:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****     break;
 169:Core/Src/main.c ****   case 6:
 170:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 171:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****     break;
 174:Core/Src/main.c ****   case 7:
 175:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 176:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 177:Core/Src/main.c ****     break;
 178:Core/Src/main.c ****   default:
 179:Core/Src/main.c ****     break;
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c **** }
 182:Core/Src/main.c **** /* USER CODE END 0 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****  * @brief  The application entry point.
 186:Core/Src/main.c ****  * @retval int
 187:Core/Src/main.c ****  */
 188:Core/Src/main.c **** int main(void)
 189:Core/Src/main.c **** {
 190:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END 1 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 197:Core/Src/main.c ****   HAL_Init();
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END Init */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* Configure the system clock */
 204:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END SysInit */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* Initialize all configured peripherals */
 211:Core/Src/main.c ****   MX_GPIO_Init();
 212:Core/Src/main.c ****   MX_TIM2_Init();
 213:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 214:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 215:Core/Src/main.c ****   setTimer1(100);
 216:Core/Src/main.c ****   setTimer2(25);
 217:Core/Src/main.c ****   setTimer3(10); // fai lam tan so  >= 25hz
 218:Core/Src/main.c ****   clearDisplay7Seg();
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   int ledPos = 1;
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(DOT_GPIO_Port, DOT_Pin, 1);
 222:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 0);
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
 225:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 226:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 227:Core/Src/main.c ****   HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, ROW0_Pin | ROW1_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_Pin | ROW6_P
 230:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ENM0_Pin | ENM1_Pin | ENM2_Pin | ENM3_Pin | ENM4_Pin | ENM5_Pin | ENM6_P
 231:Core/Src/main.c ****   updateLedMatrix(0);
 232:Core/Src/main.c ****   update7SEG(0);
 233:Core/Src/main.c ****   updateClockBuffer();
 234:Core/Src/main.c ****   /* USER CODE END 2 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* Infinite loop */
 237:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 238:Core/Src/main.c ****   while (1)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     if (timer1_flag == 1)
 241:Core/Src/main.c ****     {
 242:Core/Src/main.c ****       second++;
 243:Core/Src/main.c ****       if (second >= 60)
 244:Core/Src/main.c ****       {
 245:Core/Src/main.c ****         second = 0;
 246:Core/Src/main.c ****         minute++;
 247:Core/Src/main.c ****       }
 248:Core/Src/main.c ****       if (minute >= 60)
 249:Core/Src/main.c ****       {
 250:Core/Src/main.c ****         minute = 0;
 251:Core/Src/main.c ****         hour++;
 252:Core/Src/main.c ****       }
 253:Core/Src/main.c ****       if (hour >= 24)
 254:Core/Src/main.c ****       {
 255:Core/Src/main.c ****         hour = 0;
 256:Core/Src/main.c ****       }
 257:Core/Src/main.c ****       updateClockBuffer();
 258:Core/Src/main.c ****       HAL_GPIO_TogglePin(DOT_GPIO_Port, DOT_Pin);
 259:Core/Src/main.c ****       setTimer1(100);
 260:Core/Src/main.c ****     }
 261:Core/Src/main.c ****     if (timer2_flag == 1)
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 6


 262:Core/Src/main.c ****     {
 263:Core/Src/main.c ****       update7SEG(ledPos % 4);
 264:Core/Src/main.c ****       ledPos++;
 265:Core/Src/main.c ****       if (ledPos > 3)
 266:Core/Src/main.c ****         ledPos = 0;
 267:Core/Src/main.c ****       setTimer2(25);
 268:Core/Src/main.c ****     }
 269:Core/Src/main.c ****     if (timer3_flag == 1)
 270:Core/Src/main.c ****     {
 271:Core/Src/main.c ****       updateLedMatrix(index_led_matrix++);
 272:Core/Src/main.c ****       if (index_led_matrix >= 8)
 273:Core/Src/main.c ****       {
 274:Core/Src/main.c ****         setTimer3(10);
 275:Core/Src/main.c ****         index_led_matrix = 0;
 276:Core/Src/main.c ****       }
 277:Core/Src/main.c ****       else
 278:Core/Src/main.c ****       {
 279:Core/Src/main.c ****         setTimer3(5);
 280:Core/Src/main.c ****       }
 281:Core/Src/main.c ****     }
 282:Core/Src/main.c ****     /* USER CODE END WHILE */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****   /* USER CODE END 3 */
 287:Core/Src/main.c **** }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /**
 290:Core/Src/main.c ****  * @brief System Clock Configuration
 291:Core/Src/main.c ****  * @retval None
 292:Core/Src/main.c ****  */
 293:Core/Src/main.c **** void SystemClock_Config(void)
 294:Core/Src/main.c **** {
 295:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 296:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 299:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 300:Core/Src/main.c ****    */
 301:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 302:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 303:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 305:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 311:Core/Src/main.c ****    */
 312:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 313:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 314:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 315:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 316:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 7


 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c **** }
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** /**
 325:Core/Src/main.c ****  * @brief TIM2 Initialization Function
 326:Core/Src/main.c ****  * @param None
 327:Core/Src/main.c ****  * @retval None
 328:Core/Src/main.c ****  */
 329:Core/Src/main.c **** static void MX_TIM2_Init(void)
 330:Core/Src/main.c **** {
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 337:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 342:Core/Src/main.c ****   htim2.Instance = TIM2;
 343:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 344:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 345:Core/Src/main.c ****   htim2.Init.Period = 9;
 346:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 347:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 348:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     Error_Handler();
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 353:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 358:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 359:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 366:Core/Src/main.c **** }
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** /**
 369:Core/Src/main.c ****  * @brief GPIO Initialization Function
 370:Core/Src/main.c ****  * @param None
 371:Core/Src/main.c ****  * @retval None
 372:Core/Src/main.c ****  */
 373:Core/Src/main.c **** static void MX_GPIO_Init(void)
 374:Core/Src/main.c **** {
  26              		.loc 1 374 1 view -0
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 8


  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 375:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 375 3 view .LVU1
  43              		.loc 1 375 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
 376:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 377:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 380:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 380 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 380 3 view .LVU4
  52              		.loc 1 380 3 view .LVU5
  53 0010 1D4B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 380 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 380 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 380 3 view .LVU8
 381:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 381 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 381 3 view .LVU10
  68              		.loc 1 381 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00802 		orr	r2, r2, #8
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 381 3 view .LVU12
  73 002c 9B69     		ldr	r3, [r3, #24]
  74 002e 03F00803 		and	r3, r3, #8
  75 0032 0193     		str	r3, [sp, #4]
  76              		.loc 1 381 3 view .LVU13
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 9


  77 0034 019B     		ldr	r3, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 381 3 view .LVU14
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 384:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ENM0_Pin | ENM1_Pin | DOT_Pin | LED_Pin | EN0_Pin | EN1_Pin | EN2_Pin | 
  80              		.loc 1 384 3 view .LVU15
  81 0036 DFF85480 		ldr	r8, .L3+4
  82 003a 2246     		mov	r2, r4
  83 003c 4FF6FC71 		movw	r1, #65532
  84 0040 4046     		mov	r0, r8
  85 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 387:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, SEG0_Pin | SEG1_Pin | SEG2_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_P
  87              		.loc 1 387 3 view .LVU16
  88 0046 124D     		ldr	r5, .L3+8
  89 0048 2246     		mov	r2, r4
  90 004a 4FF67F71 		movw	r1, #65407
  91 004e 2846     		mov	r0, r5
  92 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /*Configure GPIO pins : ENM0_Pin ENM1_Pin DOT_Pin LED_Pin
 390:Core/Src/main.c ****                            EN0_Pin EN1_Pin EN2_Pin EN3_Pin
 391:Core/Src/main.c ****                            ENM2_Pin ENM3_Pin ENM4_Pin ENM5_Pin
 392:Core/Src/main.c ****                            ENM6_Pin ENM7_Pin */
 393:Core/Src/main.c ****   GPIO_InitStruct.Pin = ENM0_Pin | ENM1_Pin | DOT_Pin | LED_Pin | EN0_Pin | EN1_Pin | EN2_Pin | EN3
  94              		.loc 1 393 3 view .LVU17
  95              		.loc 1 393 23 is_stmt 0 view .LVU18
  96 0054 4FF6FC73 		movw	r3, #65532
  97 0058 0293     		str	r3, [sp, #8]
 394:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 394 3 is_stmt 1 view .LVU19
  99              		.loc 1 394 24 is_stmt 0 view .LVU20
 100 005a 0127     		movs	r7, #1
 101 005c 0397     		str	r7, [sp, #12]
 395:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 395 3 is_stmt 1 view .LVU21
 103              		.loc 1 395 24 is_stmt 0 view .LVU22
 104 005e 0494     		str	r4, [sp, #16]
 396:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 105              		.loc 1 396 3 is_stmt 1 view .LVU23
 106              		.loc 1 396 25 is_stmt 0 view .LVU24
 107 0060 0226     		movs	r6, #2
 108 0062 0596     		str	r6, [sp, #20]
 397:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 397 3 is_stmt 1 view .LVU25
 110 0064 02A9     		add	r1, sp, #8
 111 0066 4046     		mov	r0, r8
 112 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 113              	.LVL2:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /*Configure GPIO pins : SEG0_Pin SEG1_Pin SEG2_Pin ROW2_Pin
 400:Core/Src/main.c ****                            ROW3_Pin ROW4_Pin ROW5_Pin ROW6_Pin
 401:Core/Src/main.c ****                            ROW7_Pin SEG3_Pin SEG4_Pin SEG5_Pin
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 10


 402:Core/Src/main.c ****                            SEG6_Pin ROW0_Pin ROW1_Pin */
 403:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG0_Pin | SEG1_Pin | SEG2_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_Pin 
 114              		.loc 1 403 3 view .LVU26
 115              		.loc 1 403 23 is_stmt 0 view .LVU27
 116 006c 4FF67F73 		movw	r3, #65407
 117 0070 0293     		str	r3, [sp, #8]
 404:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 404 3 is_stmt 1 view .LVU28
 119              		.loc 1 404 24 is_stmt 0 view .LVU29
 120 0072 0397     		str	r7, [sp, #12]
 405:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 121              		.loc 1 405 3 is_stmt 1 view .LVU30
 122              		.loc 1 405 24 is_stmt 0 view .LVU31
 123 0074 0494     		str	r4, [sp, #16]
 406:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 406 3 is_stmt 1 view .LVU32
 125              		.loc 1 406 25 is_stmt 0 view .LVU33
 126 0076 0596     		str	r6, [sp, #20]
 407:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 127              		.loc 1 407 3 is_stmt 1 view .LVU34
 128 0078 02A9     		add	r1, sp, #8
 129 007a 2846     		mov	r0, r5
 130 007c FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 410:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 411:Core/Src/main.c **** }
 132              		.loc 1 411 1 is_stmt 0 view .LVU35
 133 0080 06B0     		add	sp, sp, #24
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 24
 136              		@ sp needed
 137 0082 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 138              	.L4:
 139 0086 00BF     		.align	2
 140              	.L3:
 141 0088 00100240 		.word	1073876992
 142 008c 00080140 		.word	1073809408
 143 0090 000C0140 		.word	1073810432
 144              		.cfi_endproc
 145              	.LFE75:
 147              		.section	.text.update7SEG,"ax",%progbits
 148              		.align	1
 149              		.global	update7SEG
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	update7SEG:
 155              	.LVL4:
 156              	.LFB68:
  88:Core/Src/main.c ****   switch (index)
 157              		.loc 1 88 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
  88:Core/Src/main.c ****   switch (index)
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 11


 161              		.loc 1 88 1 is_stmt 0 view .LVU37
 162 0000 10B5     		push	{r4, lr}
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
  89:Core/Src/main.c ****   {
 167              		.loc 1 89 3 is_stmt 1 view .LVU38
 168 0002 0328     		cmp	r0, #3
 169 0004 13D8     		bhi	.L5
 170 0006 DFE800F0 		tbb	[pc, r0]
 171              	.L8:
 172 000a 02       		.byte	(.L11-.L8)/2
 173 000b 13       		.byte	(.L10-.L8)/2
 174 000c 23       		.byte	(.L9-.L8)/2
 175 000d 34       		.byte	(.L7-.L8)/2
 176              		.p2align 1
 177              	.L11:
  92:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 178              		.loc 1 92 5 view .LVU39
 179 000e 224B     		ldr	r3, .L14
 180 0010 1868     		ldr	r0, [r3]
 181              	.LVL5:
  92:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 182              		.loc 1 92 5 is_stmt 0 view .LVU40
 183 0012 FFF7FEFF 		bl	display7Seg
 184              	.LVL6:
  93:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
 185              		.loc 1 93 5 is_stmt 1 view .LVU41
 186 0016 214C     		ldr	r4, .L14+4
 187 0018 0122     		movs	r2, #1
 188 001a 4FF40071 		mov	r1, #512
 189 001e 2046     		mov	r0, r4
 190 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 191              	.LVL7:
  94:Core/Src/main.c ****     break;
 192              		.loc 1 94 5 view .LVU42
 193 0024 0022     		movs	r2, #0
 194 0026 4021     		movs	r1, #64
 195 0028 2046     		mov	r0, r4
 196 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 197              	.LVL8:
  95:Core/Src/main.c ****   case 1:
 198              		.loc 1 95 5 view .LVU43
 199              	.L5:
 114:Core/Src/main.c **** void updateClockBuffer()
 200              		.loc 1 114 1 is_stmt 0 view .LVU44
 201 002e 10BD     		pop	{r4, pc}
 202              	.LVL9:
 203              	.L10:
  97:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
 204              		.loc 1 97 5 is_stmt 1 view .LVU45
 205 0030 194B     		ldr	r3, .L14
 206 0032 5868     		ldr	r0, [r3, #4]
 207              	.LVL10:
  97:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
 208              		.loc 1 97 5 is_stmt 0 view .LVU46
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 12


 209 0034 FFF7FEFF 		bl	display7Seg
 210              	.LVL11:
  98:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 1);
 211              		.loc 1 98 5 is_stmt 1 view .LVU47
 212 0038 184C     		ldr	r4, .L14+4
 213 003a 0022     		movs	r2, #0
 214 003c 8021     		movs	r1, #128
 215 003e 2046     		mov	r0, r4
 216 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL12:
  99:Core/Src/main.c ****     break;
 218              		.loc 1 99 5 view .LVU48
 219 0044 0122     		movs	r2, #1
 220 0046 4021     		movs	r1, #64
 221 0048 2046     		mov	r0, r4
 222 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 223              	.LVL13:
 100:Core/Src/main.c ****   case 2:
 224              		.loc 1 100 5 view .LVU49
 225 004e EEE7     		b	.L5
 226              	.LVL14:
 227              	.L9:
 102:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 228              		.loc 1 102 5 view .LVU50
 229 0050 114B     		ldr	r3, .L14
 230 0052 9868     		ldr	r0, [r3, #8]
 231              	.LVL15:
 102:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 232              		.loc 1 102 5 is_stmt 0 view .LVU51
 233 0054 FFF7FEFF 		bl	display7Seg
 234              	.LVL16:
 103:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 235              		.loc 1 103 5 is_stmt 1 view .LVU52
 236 0058 104C     		ldr	r4, .L14+4
 237 005a 0022     		movs	r2, #0
 238 005c 4FF48071 		mov	r1, #256
 239 0060 2046     		mov	r0, r4
 240 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL17:
 104:Core/Src/main.c ****     break;
 242              		.loc 1 104 5 view .LVU53
 243 0066 0122     		movs	r2, #1
 244 0068 8021     		movs	r1, #128
 245 006a 2046     		mov	r0, r4
 246 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 247              	.LVL18:
 105:Core/Src/main.c ****   case 3:
 248              		.loc 1 105 5 view .LVU54
 249 0070 DDE7     		b	.L5
 250              	.LVL19:
 251              	.L7:
 107:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
 252              		.loc 1 107 5 view .LVU55
 253 0072 094B     		ldr	r3, .L14
 254 0074 D868     		ldr	r0, [r3, #12]
 255              	.LVL20:
 107:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 13


 256              		.loc 1 107 5 is_stmt 0 view .LVU56
 257 0076 FFF7FEFF 		bl	display7Seg
 258              	.LVL21:
 108:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 259              		.loc 1 108 5 is_stmt 1 view .LVU57
 260 007a 084C     		ldr	r4, .L14+4
 261 007c 0022     		movs	r2, #0
 262 007e 4FF40071 		mov	r1, #512
 263 0082 2046     		mov	r0, r4
 264 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 265              	.LVL22:
 109:Core/Src/main.c ****     break;
 266              		.loc 1 109 5 view .LVU58
 267 0088 0122     		movs	r2, #1
 268 008a 4FF48071 		mov	r1, #256
 269 008e 2046     		mov	r0, r4
 270 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 271              	.LVL23:
 110:Core/Src/main.c ****   default:
 272              		.loc 1 110 5 view .LVU59
 114:Core/Src/main.c **** void updateClockBuffer()
 273              		.loc 1 114 1 is_stmt 0 view .LVU60
 274 0094 CBE7     		b	.L5
 275              	.L15:
 276 0096 00BF     		.align	2
 277              	.L14:
 278 0098 00000000 		.word	led_buffer
 279 009c 00080140 		.word	1073809408
 280              		.cfi_endproc
 281              	.LFE68:
 283              		.section	.text.updateClockBuffer,"ax",%progbits
 284              		.align	1
 285              		.global	updateClockBuffer
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 290              	updateClockBuffer:
 291              	.LFB69:
 116:Core/Src/main.c ****   led_buffer[0] = hour / 10;
 292              		.loc 1 116 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297 0000 10B4     		push	{r4}
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 4, -4
 117:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 301              		.loc 1 117 3 view .LVU62
 117:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 302              		.loc 1 117 24 is_stmt 0 view .LVU63
 303 0002 0F4B     		ldr	r3, .L18
 304 0004 1C68     		ldr	r4, [r3]
 305 0006 0F48     		ldr	r0, .L18+4
 306 0008 80FB0432 		smull	r3, r2, r0, r4
 307 000c E317     		asrs	r3, r4, #31
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 14


 308 000e C3EBA203 		rsb	r3, r3, r2, asr #2
 117:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 309              		.loc 1 117 17 view .LVU64
 310 0012 0D49     		ldr	r1, .L18+8
 311 0014 0B60     		str	r3, [r1]
 118:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 312              		.loc 1 118 3 is_stmt 1 view .LVU65
 118:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 313              		.loc 1 118 24 is_stmt 0 view .LVU66
 314 0016 03EB8303 		add	r3, r3, r3, lsl #2
 315 001a 5A00     		lsls	r2, r3, #1
 316 001c A21A     		subs	r2, r4, r2
 118:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 317              		.loc 1 118 17 view .LVU67
 318 001e 4A60     		str	r2, [r1, #4]
 119:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 319              		.loc 1 119 3 is_stmt 1 view .LVU68
 119:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 320              		.loc 1 119 26 is_stmt 0 view .LVU69
 321 0020 0A4B     		ldr	r3, .L18+12
 322 0022 1C68     		ldr	r4, [r3]
 323 0024 80FB0430 		smull	r3, r0, r0, r4
 324 0028 E317     		asrs	r3, r4, #31
 325 002a C3EBA003 		rsb	r3, r3, r0, asr #2
 119:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 326              		.loc 1 119 17 view .LVU70
 327 002e 8B60     		str	r3, [r1, #8]
 120:Core/Src/main.c **** }
 328              		.loc 1 120 3 is_stmt 1 view .LVU71
 120:Core/Src/main.c **** }
 329              		.loc 1 120 26 is_stmt 0 view .LVU72
 330 0030 03EB8303 		add	r3, r3, r3, lsl #2
 331 0034 5A00     		lsls	r2, r3, #1
 332 0036 A21A     		subs	r2, r4, r2
 120:Core/Src/main.c **** }
 333              		.loc 1 120 17 view .LVU73
 334 0038 CA60     		str	r2, [r1, #12]
 121:Core/Src/main.c **** 
 335              		.loc 1 121 1 view .LVU74
 336 003a 10BC     		pop	{r4}
 337              	.LCFI5:
 338              		.cfi_restore 4
 339              		.cfi_def_cfa_offset 0
 340 003c 7047     		bx	lr
 341              	.L19:
 342 003e 00BF     		.align	2
 343              	.L18:
 344 0040 00000000 		.word	hour
 345 0044 67666666 		.word	1717986919
 346 0048 00000000 		.word	led_buffer
 347 004c 00000000 		.word	minute
 348              		.cfi_endproc
 349              	.LFE69:
 351              		.section	.text.writeByte,"ax",%progbits
 352              		.align	1
 353              		.global	writeByte
 354              		.syntax unified
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 15


 355              		.thumb
 356              		.thumb_func
 358              	writeByte:
 359              	.LVL24:
 360              	.LFB70:
 124:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[0], byte & (uint16_t)0x01);
 361              		.loc 1 124 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 124:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[0], byte & (uint16_t)0x01);
 365              		.loc 1 124 1 is_stmt 0 view .LVU76
 366 0000 70B5     		push	{r4, r5, r6, lr}
 367              	.LCFI6:
 368              		.cfi_def_cfa_offset 16
 369              		.cfi_offset 4, -16
 370              		.cfi_offset 5, -12
 371              		.cfi_offset 6, -8
 372              		.cfi_offset 14, -4
 373 0002 0546     		mov	r5, r0
 374 0004 0C46     		mov	r4, r1
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 375              		.loc 1 125 3 is_stmt 1 view .LVU77
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 376              		.loc 1 125 41 is_stmt 0 view .LVU78
 377 0006 D6B2     		uxtb	r6, r2
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 378              		.loc 1 125 3 view .LVU79
 379 0008 02F00102 		and	r2, r2, #1
 380              	.LVL25:
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 381              		.loc 1 125 3 view .LVU80
 382 000c 0988     		ldrh	r1, [r1]
 383              	.LVL26:
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 384              		.loc 1 125 3 view .LVU81
 385 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 386              	.LVL27:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[2], byte & (uint16_t)0x04);
 387              		.loc 1 126 3 is_stmt 1 view .LVU82
 388 0012 06F00202 		and	r2, r6, #2
 389 0016 6188     		ldrh	r1, [r4, #2]
 390 0018 2846     		mov	r0, r5
 391 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 392              	.LVL28:
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[3], byte & (uint16_t)0x08);
 393              		.loc 1 127 3 view .LVU83
 394 001e 06F00402 		and	r2, r6, #4
 395 0022 A188     		ldrh	r1, [r4, #4]
 396 0024 2846     		mov	r0, r5
 397 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 398              	.LVL29:
 128:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[4], byte & (uint16_t)0x10);
 399              		.loc 1 128 3 view .LVU84
 400 002a 06F00802 		and	r2, r6, #8
 401 002e E188     		ldrh	r1, [r4, #6]
 402 0030 2846     		mov	r0, r5
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 16


 403 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 404              	.LVL30:
 129:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[5], byte & (uint16_t)0x20);
 405              		.loc 1 129 3 view .LVU85
 406 0036 06F01002 		and	r2, r6, #16
 407 003a 2189     		ldrh	r1, [r4, #8]
 408 003c 2846     		mov	r0, r5
 409 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 410              	.LVL31:
 130:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[6], byte & (uint16_t)0x40);
 411              		.loc 1 130 3 view .LVU86
 412 0042 06F02002 		and	r2, r6, #32
 413 0046 6189     		ldrh	r1, [r4, #10]
 414 0048 2846     		mov	r0, r5
 415 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 416              	.LVL32:
 131:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[7], byte & (uint16_t)0x80);
 417              		.loc 1 131 3 view .LVU87
 418 004e 06F04002 		and	r2, r6, #64
 419 0052 A189     		ldrh	r1, [r4, #12]
 420 0054 2846     		mov	r0, r5
 421 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 422              	.LVL33:
 132:Core/Src/main.c **** }
 423              		.loc 1 132 3 view .LVU88
 424 005a 06F08002 		and	r2, r6, #128
 425 005e E189     		ldrh	r1, [r4, #14]
 426 0060 2846     		mov	r0, r5
 427 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 428              	.LVL34:
 133:Core/Src/main.c **** 
 429              		.loc 1 133 1 is_stmt 0 view .LVU89
 430 0066 70BD     		pop	{r4, r5, r6, pc}
 133:Core/Src/main.c **** 
 431              		.loc 1 133 1 view .LVU90
 432              		.cfi_endproc
 433              	.LFE70:
 435              		.section	.text.updateLedMatrix,"ax",%progbits
 436              		.align	1
 437              		.global	updateLedMatrix
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 442              	updateLedMatrix:
 443              	.LVL35:
 444              	.LFB71:
 136:Core/Src/main.c ****   uint16_t temp = matrix_buffer[index];
 445              		.loc 1 136 1 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 136:Core/Src/main.c ****   uint16_t temp = matrix_buffer[index];
 449              		.loc 1 136 1 is_stmt 0 view .LVU92
 450 0000 08B5     		push	{r3, lr}
 451              	.LCFI7:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 3, -8
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 17


 454              		.cfi_offset 14, -4
 137:Core/Src/main.c ****   switch (index)
 455              		.loc 1 137 3 is_stmt 1 view .LVU93
 137:Core/Src/main.c ****   switch (index)
 456              		.loc 1 137 12 is_stmt 0 view .LVU94
 457 0002 394B     		ldr	r3, .L35
 458 0004 33F81020 		ldrh	r2, [r3, r0, lsl #1]
 459              	.LVL36:
 138:Core/Src/main.c ****   {
 460              		.loc 1 138 3 is_stmt 1 view .LVU95
 461 0008 0728     		cmp	r0, #7
 462 000a 11D8     		bhi	.L22
 463 000c DFE800F0 		tbb	[pc, r0]
 464              	.L25:
 465 0010 04       		.byte	(.L32-.L25)/2
 466 0011 11       		.byte	(.L31-.L25)/2
 467 0012 1E       		.byte	(.L30-.L25)/2
 468 0013 2B       		.byte	(.L29-.L25)/2
 469 0014 38       		.byte	(.L28-.L25)/2
 470 0015 45       		.byte	(.L27-.L25)/2
 471 0016 52       		.byte	(.L26-.L25)/2
 472 0017 5F       		.byte	(.L24-.L25)/2
 473              		.p2align 1
 474              	.L32:
 141:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 475              		.loc 1 141 5 view .LVU96
 476 0018 D243     		mvns	r2, r2
 477              	.LVL37:
 141:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 478              		.loc 1 141 5 is_stmt 0 view .LVU97
 479 001a 92B2     		uxth	r2, r2
 480              	.LVL38:
 141:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 481              		.loc 1 141 5 view .LVU98
 482 001c 3349     		ldr	r1, .L35+4
 483 001e 3448     		ldr	r0, .L35+8
 484              	.LVL39:
 141:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 485              		.loc 1 141 5 view .LVU99
 486 0020 FFF7FEFF 		bl	writeByte
 487              	.LVL40:
 142:Core/Src/main.c ****     break;
 488              		.loc 1 142 5 is_stmt 1 view .LVU100
 489 0024 4FF6FE72 		movw	r2, #65534
 490 0028 3249     		ldr	r1, .L35+12
 491 002a 3348     		ldr	r0, .L35+16
 492 002c FFF7FEFF 		bl	writeByte
 493              	.LVL41:
 143:Core/Src/main.c ****   case 1:
 494              		.loc 1 143 5 view .LVU101
 495              	.L22:
 181:Core/Src/main.c **** /* USER CODE END 0 */
 496              		.loc 1 181 1 is_stmt 0 view .LVU102
 497 0030 08BD     		pop	{r3, pc}
 498              	.LVL42:
 499              	.L31:
 145:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 18


 500              		.loc 1 145 5 is_stmt 1 view .LVU103
 501 0032 D243     		mvns	r2, r2
 502              	.LVL43:
 145:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 503              		.loc 1 145 5 is_stmt 0 view .LVU104
 504 0034 92B2     		uxth	r2, r2
 505              	.LVL44:
 145:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 506              		.loc 1 145 5 view .LVU105
 507 0036 2D49     		ldr	r1, .L35+4
 508 0038 2D48     		ldr	r0, .L35+8
 509              	.LVL45:
 145:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 510              		.loc 1 145 5 view .LVU106
 511 003a FFF7FEFF 		bl	writeByte
 512              	.LVL46:
 146:Core/Src/main.c **** 
 513              		.loc 1 146 5 is_stmt 1 view .LVU107
 514 003e 4FF6FD72 		movw	r2, #65533
 515 0042 2C49     		ldr	r1, .L35+12
 516 0044 2C48     		ldr	r0, .L35+16
 517 0046 FFF7FEFF 		bl	writeByte
 518              	.LVL47:
 148:Core/Src/main.c ****   case 2:
 519              		.loc 1 148 5 view .LVU108
 520 004a F1E7     		b	.L22
 521              	.LVL48:
 522              	.L30:
 150:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 523              		.loc 1 150 5 view .LVU109
 524 004c D243     		mvns	r2, r2
 525              	.LVL49:
 150:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 526              		.loc 1 150 5 is_stmt 0 view .LVU110
 527 004e 92B2     		uxth	r2, r2
 528              	.LVL50:
 150:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 529              		.loc 1 150 5 view .LVU111
 530 0050 2649     		ldr	r1, .L35+4
 531 0052 2748     		ldr	r0, .L35+8
 532              	.LVL51:
 150:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 533              		.loc 1 150 5 view .LVU112
 534 0054 FFF7FEFF 		bl	writeByte
 535              	.LVL52:
 151:Core/Src/main.c **** 
 536              		.loc 1 151 5 is_stmt 1 view .LVU113
 537 0058 4FF6FB72 		movw	r2, #65531
 538 005c 2549     		ldr	r1, .L35+12
 539 005e 2648     		ldr	r0, .L35+16
 540 0060 FFF7FEFF 		bl	writeByte
 541              	.LVL53:
 153:Core/Src/main.c ****   case 3:
 542              		.loc 1 153 5 view .LVU114
 543 0064 E4E7     		b	.L22
 544              	.LVL54:
 545              	.L29:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 19


 155:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 546              		.loc 1 155 5 view .LVU115
 547 0066 D243     		mvns	r2, r2
 548              	.LVL55:
 155:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 549              		.loc 1 155 5 is_stmt 0 view .LVU116
 550 0068 92B2     		uxth	r2, r2
 551              	.LVL56:
 155:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 552              		.loc 1 155 5 view .LVU117
 553 006a 2049     		ldr	r1, .L35+4
 554 006c 2048     		ldr	r0, .L35+8
 555              	.LVL57:
 155:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 556              		.loc 1 155 5 view .LVU118
 557 006e FFF7FEFF 		bl	writeByte
 558              	.LVL58:
 156:Core/Src/main.c **** 
 559              		.loc 1 156 5 is_stmt 1 view .LVU119
 560 0072 4FF6F772 		movw	r2, #65527
 561 0076 1F49     		ldr	r1, .L35+12
 562 0078 1F48     		ldr	r0, .L35+16
 563 007a FFF7FEFF 		bl	writeByte
 564              	.LVL59:
 158:Core/Src/main.c ****   case 4:
 565              		.loc 1 158 5 view .LVU120
 566 007e D7E7     		b	.L22
 567              	.LVL60:
 568              	.L28:
 160:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 569              		.loc 1 160 5 view .LVU121
 570 0080 D243     		mvns	r2, r2
 571              	.LVL61:
 160:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 572              		.loc 1 160 5 is_stmt 0 view .LVU122
 573 0082 92B2     		uxth	r2, r2
 574              	.LVL62:
 160:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 575              		.loc 1 160 5 view .LVU123
 576 0084 1949     		ldr	r1, .L35+4
 577 0086 1A48     		ldr	r0, .L35+8
 578              	.LVL63:
 160:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 579              		.loc 1 160 5 view .LVU124
 580 0088 FFF7FEFF 		bl	writeByte
 581              	.LVL64:
 161:Core/Src/main.c **** 
 582              		.loc 1 161 5 is_stmt 1 view .LVU125
 583 008c 4FF6EF72 		movw	r2, #65519
 584 0090 1849     		ldr	r1, .L35+12
 585 0092 1948     		ldr	r0, .L35+16
 586 0094 FFF7FEFF 		bl	writeByte
 587              	.LVL65:
 163:Core/Src/main.c ****   case 5:
 588              		.loc 1 163 5 view .LVU126
 589 0098 CAE7     		b	.L22
 590              	.LVL66:
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 20


 591              	.L27:
 165:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 592              		.loc 1 165 5 view .LVU127
 593 009a D243     		mvns	r2, r2
 594              	.LVL67:
 165:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 595              		.loc 1 165 5 is_stmt 0 view .LVU128
 596 009c 92B2     		uxth	r2, r2
 597              	.LVL68:
 165:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 598              		.loc 1 165 5 view .LVU129
 599 009e 1349     		ldr	r1, .L35+4
 600 00a0 1348     		ldr	r0, .L35+8
 601              	.LVL69:
 165:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 602              		.loc 1 165 5 view .LVU130
 603 00a2 FFF7FEFF 		bl	writeByte
 604              	.LVL70:
 166:Core/Src/main.c **** 
 605              		.loc 1 166 5 is_stmt 1 view .LVU131
 606 00a6 4FF6DF72 		movw	r2, #65503
 607 00aa 1249     		ldr	r1, .L35+12
 608 00ac 1248     		ldr	r0, .L35+16
 609 00ae FFF7FEFF 		bl	writeByte
 610              	.LVL71:
 168:Core/Src/main.c ****   case 6:
 611              		.loc 1 168 5 view .LVU132
 612 00b2 BDE7     		b	.L22
 613              	.LVL72:
 614              	.L26:
 170:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 615              		.loc 1 170 5 view .LVU133
 616 00b4 D243     		mvns	r2, r2
 617              	.LVL73:
 170:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 618              		.loc 1 170 5 is_stmt 0 view .LVU134
 619 00b6 92B2     		uxth	r2, r2
 620              	.LVL74:
 170:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 621              		.loc 1 170 5 view .LVU135
 622 00b8 0C49     		ldr	r1, .L35+4
 623 00ba 0D48     		ldr	r0, .L35+8
 624              	.LVL75:
 170:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 625              		.loc 1 170 5 view .LVU136
 626 00bc FFF7FEFF 		bl	writeByte
 627              	.LVL76:
 171:Core/Src/main.c **** 
 628              		.loc 1 171 5 is_stmt 1 view .LVU137
 629 00c0 4FF6BF72 		movw	r2, #65471
 630 00c4 0B49     		ldr	r1, .L35+12
 631 00c6 0C48     		ldr	r0, .L35+16
 632 00c8 FFF7FEFF 		bl	writeByte
 633              	.LVL77:
 173:Core/Src/main.c ****   case 7:
 634              		.loc 1 173 5 view .LVU138
 635 00cc B0E7     		b	.L22
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 21


 636              	.LVL78:
 637              	.L24:
 175:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 638              		.loc 1 175 5 view .LVU139
 639 00ce D243     		mvns	r2, r2
 640              	.LVL79:
 175:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 641              		.loc 1 175 5 is_stmt 0 view .LVU140
 642 00d0 92B2     		uxth	r2, r2
 643              	.LVL80:
 175:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 644              		.loc 1 175 5 view .LVU141
 645 00d2 0649     		ldr	r1, .L35+4
 646 00d4 0648     		ldr	r0, .L35+8
 647              	.LVL81:
 175:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 648              		.loc 1 175 5 view .LVU142
 649 00d6 FFF7FEFF 		bl	writeByte
 650              	.LVL82:
 176:Core/Src/main.c ****     break;
 651              		.loc 1 176 5 is_stmt 1 view .LVU143
 652 00da 4FF67F72 		movw	r2, #65407
 653 00de 0549     		ldr	r1, .L35+12
 654 00e0 0548     		ldr	r0, .L35+16
 655 00e2 FFF7FEFF 		bl	writeByte
 656              	.LVL83:
 177:Core/Src/main.c ****   default:
 657              		.loc 1 177 5 view .LVU144
 181:Core/Src/main.c **** /* USER CODE END 0 */
 658              		.loc 1 181 1 is_stmt 0 view .LVU145
 659 00e6 A3E7     		b	.L22
 660              	.L36:
 661              		.align	2
 662              	.L35:
 663 00e8 00000000 		.word	matrix_buffer
 664 00ec 00000000 		.word	cot
 665 00f0 00080140 		.word	1073809408
 666 00f4 00000000 		.word	hang
 667 00f8 000C0140 		.word	1073810432
 668              		.cfi_endproc
 669              	.LFE71:
 671              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 672              		.align	1
 673              		.global	HAL_TIM_PeriodElapsedCallback
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 678              	HAL_TIM_PeriodElapsedCallback:
 679              	.LVL84:
 680              	.LFB76:
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 414:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 415:Core/Src/main.c **** {
 681              		.loc 1 415 1 is_stmt 1 view -0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 22


 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              		.loc 1 415 1 is_stmt 0 view .LVU147
 686 0000 08B5     		push	{r3, lr}
 687              	.LCFI8:
 688              		.cfi_def_cfa_offset 8
 689              		.cfi_offset 3, -8
 690              		.cfi_offset 14, -4
 416:Core/Src/main.c ****   timerRun();
 691              		.loc 1 416 3 is_stmt 1 view .LVU148
 692 0002 FFF7FEFF 		bl	timerRun
 693              	.LVL85:
 417:Core/Src/main.c **** }
 694              		.loc 1 417 1 is_stmt 0 view .LVU149
 695 0006 08BD     		pop	{r3, pc}
 696              		.cfi_endproc
 697              	.LFE76:
 699              		.section	.text.Error_Handler,"ax",%progbits
 700              		.align	1
 701              		.global	Error_Handler
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 706              	Error_Handler:
 707              	.LFB77:
 418:Core/Src/main.c **** /* USER CODE END 4 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** /**
 421:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 422:Core/Src/main.c ****  * @retval None
 423:Core/Src/main.c ****  */
 424:Core/Src/main.c **** void Error_Handler(void)
 425:Core/Src/main.c **** {
 708              		.loc 1 425 1 is_stmt 1 view -0
 709              		.cfi_startproc
 710              		@ Volatile: function does not return.
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 426:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 427:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 428:Core/Src/main.c ****   __disable_irq();
 714              		.loc 1 428 3 view .LVU151
 715              	.LBB6:
 716              	.LBI6:
 717              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 23


  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 24


  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 25


 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 718              		.loc 2 140 27 view .LVU152
 719              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 720              		.loc 2 142 3 view .LVU153
 721              		.syntax unified
 722              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 723 0000 72B6     		cpsid i
 724              	@ 0 "" 2
 725              		.thumb
 726              		.syntax unified
 727              	.L40:
 728              	.LBE7:
 729              	.LBE6:
 429:Core/Src/main.c ****   while (1)
 730              		.loc 1 429 3 discriminator 1 view .LVU154
 430:Core/Src/main.c ****   {
 431:Core/Src/main.c ****   }
 731              		.loc 1 431 3 discriminator 1 view .LVU155
 429:Core/Src/main.c ****   while (1)
 732              		.loc 1 429 9 discriminator 1 view .LVU156
 733 0002 FEE7     		b	.L40
 734              		.cfi_endproc
 735              	.LFE77:
 737              		.section	.text.MX_TIM2_Init,"ax",%progbits
 738              		.align	1
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 743              	MX_TIM2_Init:
 744              	.LFB74:
 330:Core/Src/main.c **** 
 745              		.loc 1 330 1 view -0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 24
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749 0000 00B5     		push	{lr}
 750              	.LCFI9:
 751              		.cfi_def_cfa_offset 4
 752              		.cfi_offset 14, -4
 753 0002 87B0     		sub	sp, sp, #28
 754              	.LCFI10:
 755              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 26


 336:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 756              		.loc 1 336 3 view .LVU158
 336:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 757              		.loc 1 336 26 is_stmt 0 view .LVU159
 758 0004 0023     		movs	r3, #0
 759 0006 0293     		str	r3, [sp, #8]
 760 0008 0393     		str	r3, [sp, #12]
 761 000a 0493     		str	r3, [sp, #16]
 762 000c 0593     		str	r3, [sp, #20]
 337:Core/Src/main.c **** 
 763              		.loc 1 337 3 is_stmt 1 view .LVU160
 337:Core/Src/main.c **** 
 764              		.loc 1 337 27 is_stmt 0 view .LVU161
 765 000e 0093     		str	r3, [sp]
 766 0010 0193     		str	r3, [sp, #4]
 342:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 767              		.loc 1 342 3 is_stmt 1 view .LVU162
 342:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 768              		.loc 1 342 18 is_stmt 0 view .LVU163
 769 0012 1448     		ldr	r0, .L49
 770 0014 4FF08042 		mov	r2, #1073741824
 771 0018 0260     		str	r2, [r0]
 343:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 772              		.loc 1 343 3 is_stmt 1 view .LVU164
 343:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 773              		.loc 1 343 24 is_stmt 0 view .LVU165
 774 001a 41F63F72 		movw	r2, #7999
 775 001e 4260     		str	r2, [r0, #4]
 344:Core/Src/main.c ****   htim2.Init.Period = 9;
 776              		.loc 1 344 3 is_stmt 1 view .LVU166
 344:Core/Src/main.c ****   htim2.Init.Period = 9;
 777              		.loc 1 344 26 is_stmt 0 view .LVU167
 778 0020 8360     		str	r3, [r0, #8]
 345:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 779              		.loc 1 345 3 is_stmt 1 view .LVU168
 345:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 780              		.loc 1 345 21 is_stmt 0 view .LVU169
 781 0022 0922     		movs	r2, #9
 782 0024 C260     		str	r2, [r0, #12]
 346:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 783              		.loc 1 346 3 is_stmt 1 view .LVU170
 346:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 784              		.loc 1 346 28 is_stmt 0 view .LVU171
 785 0026 0361     		str	r3, [r0, #16]
 347:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 786              		.loc 1 347 3 is_stmt 1 view .LVU172
 347:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 787              		.loc 1 347 32 is_stmt 0 view .LVU173
 788 0028 8361     		str	r3, [r0, #24]
 348:Core/Src/main.c ****   {
 789              		.loc 1 348 3 is_stmt 1 view .LVU174
 348:Core/Src/main.c ****   {
 790              		.loc 1 348 7 is_stmt 0 view .LVU175
 791 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 792              	.LVL86:
 348:Core/Src/main.c ****   {
 793              		.loc 1 348 6 view .LVU176
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 27


 794 002e 90B9     		cbnz	r0, .L46
 352:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 795              		.loc 1 352 3 is_stmt 1 view .LVU177
 352:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 796              		.loc 1 352 34 is_stmt 0 view .LVU178
 797 0030 4FF48053 		mov	r3, #4096
 798 0034 0293     		str	r3, [sp, #8]
 353:Core/Src/main.c ****   {
 799              		.loc 1 353 3 is_stmt 1 view .LVU179
 353:Core/Src/main.c ****   {
 800              		.loc 1 353 7 is_stmt 0 view .LVU180
 801 0036 02A9     		add	r1, sp, #8
 802 0038 0A48     		ldr	r0, .L49
 803 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 804              	.LVL87:
 353:Core/Src/main.c ****   {
 805              		.loc 1 353 6 view .LVU181
 806 003e 60B9     		cbnz	r0, .L47
 357:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 807              		.loc 1 357 3 is_stmt 1 view .LVU182
 357:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 808              		.loc 1 357 37 is_stmt 0 view .LVU183
 809 0040 0023     		movs	r3, #0
 810 0042 0093     		str	r3, [sp]
 358:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 811              		.loc 1 358 3 is_stmt 1 view .LVU184
 358:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 812              		.loc 1 358 33 is_stmt 0 view .LVU185
 813 0044 0193     		str	r3, [sp, #4]
 359:Core/Src/main.c ****   {
 814              		.loc 1 359 3 is_stmt 1 view .LVU186
 359:Core/Src/main.c ****   {
 815              		.loc 1 359 7 is_stmt 0 view .LVU187
 816 0046 6946     		mov	r1, sp
 817 0048 0648     		ldr	r0, .L49
 818 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 819              	.LVL88:
 359:Core/Src/main.c ****   {
 820              		.loc 1 359 6 view .LVU188
 821 004e 30B9     		cbnz	r0, .L48
 366:Core/Src/main.c **** 
 822              		.loc 1 366 1 view .LVU189
 823 0050 07B0     		add	sp, sp, #28
 824              	.LCFI11:
 825              		.cfi_remember_state
 826              		.cfi_def_cfa_offset 4
 827              		@ sp needed
 828 0052 5DF804FB 		ldr	pc, [sp], #4
 829              	.L46:
 830              	.LCFI12:
 831              		.cfi_restore_state
 350:Core/Src/main.c ****   }
 832              		.loc 1 350 5 is_stmt 1 view .LVU190
 833 0056 FFF7FEFF 		bl	Error_Handler
 834              	.LVL89:
 835              	.L47:
 355:Core/Src/main.c ****   }
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 28


 836              		.loc 1 355 5 view .LVU191
 837 005a FFF7FEFF 		bl	Error_Handler
 838              	.LVL90:
 839              	.L48:
 361:Core/Src/main.c ****   }
 840              		.loc 1 361 5 view .LVU192
 841 005e FFF7FEFF 		bl	Error_Handler
 842              	.LVL91:
 843              	.L50:
 844 0062 00BF     		.align	2
 845              	.L49:
 846 0064 00000000 		.word	htim2
 847              		.cfi_endproc
 848              	.LFE74:
 850              		.section	.text.SystemClock_Config,"ax",%progbits
 851              		.align	1
 852              		.global	SystemClock_Config
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
 857              	SystemClock_Config:
 858              	.LFB73:
 294:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 859              		.loc 1 294 1 view -0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 64
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863 0000 00B5     		push	{lr}
 864              	.LCFI13:
 865              		.cfi_def_cfa_offset 4
 866              		.cfi_offset 14, -4
 867 0002 91B0     		sub	sp, sp, #68
 868              	.LCFI14:
 869              		.cfi_def_cfa_offset 72
 295:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 870              		.loc 1 295 3 view .LVU194
 295:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 871              		.loc 1 295 22 is_stmt 0 view .LVU195
 872 0004 2822     		movs	r2, #40
 873 0006 0021     		movs	r1, #0
 874 0008 06A8     		add	r0, sp, #24
 875 000a FFF7FEFF 		bl	memset
 876              	.LVL92:
 296:Core/Src/main.c **** 
 877              		.loc 1 296 3 is_stmt 1 view .LVU196
 296:Core/Src/main.c **** 
 878              		.loc 1 296 22 is_stmt 0 view .LVU197
 879 000e 0023     		movs	r3, #0
 880 0010 0193     		str	r3, [sp, #4]
 881 0012 0293     		str	r3, [sp, #8]
 882 0014 0393     		str	r3, [sp, #12]
 883 0016 0493     		str	r3, [sp, #16]
 884 0018 0593     		str	r3, [sp, #20]
 301:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 885              		.loc 1 301 3 is_stmt 1 view .LVU198
 301:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 886              		.loc 1 301 36 is_stmt 0 view .LVU199
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 29


 887 001a 0223     		movs	r3, #2
 888 001c 0693     		str	r3, [sp, #24]
 302:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 889              		.loc 1 302 3 is_stmt 1 view .LVU200
 302:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 890              		.loc 1 302 30 is_stmt 0 view .LVU201
 891 001e 0123     		movs	r3, #1
 892 0020 0A93     		str	r3, [sp, #40]
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 893              		.loc 1 303 3 is_stmt 1 view .LVU202
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 894              		.loc 1 303 41 is_stmt 0 view .LVU203
 895 0022 1023     		movs	r3, #16
 896 0024 0B93     		str	r3, [sp, #44]
 304:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 897              		.loc 1 304 3 is_stmt 1 view .LVU204
 305:Core/Src/main.c ****   {
 898              		.loc 1 305 3 view .LVU205
 305:Core/Src/main.c ****   {
 899              		.loc 1 305 7 is_stmt 0 view .LVU206
 900 0026 06A8     		add	r0, sp, #24
 901 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 902              	.LVL93:
 305:Core/Src/main.c ****   {
 903              		.loc 1 305 6 view .LVU207
 904 002c 68B9     		cbnz	r0, .L55
 312:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 905              		.loc 1 312 3 is_stmt 1 view .LVU208
 312:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 906              		.loc 1 312 31 is_stmt 0 view .LVU209
 907 002e 0F23     		movs	r3, #15
 908 0030 0193     		str	r3, [sp, #4]
 313:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 909              		.loc 1 313 3 is_stmt 1 view .LVU210
 313:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 910              		.loc 1 313 34 is_stmt 0 view .LVU211
 911 0032 0021     		movs	r1, #0
 912 0034 0291     		str	r1, [sp, #8]
 314:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 913              		.loc 1 314 3 is_stmt 1 view .LVU212
 314:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 914              		.loc 1 314 35 is_stmt 0 view .LVU213
 915 0036 0391     		str	r1, [sp, #12]
 315:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 916              		.loc 1 315 3 is_stmt 1 view .LVU214
 315:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 917              		.loc 1 315 36 is_stmt 0 view .LVU215
 918 0038 0491     		str	r1, [sp, #16]
 316:Core/Src/main.c **** 
 919              		.loc 1 316 3 is_stmt 1 view .LVU216
 316:Core/Src/main.c **** 
 920              		.loc 1 316 36 is_stmt 0 view .LVU217
 921 003a 0591     		str	r1, [sp, #20]
 318:Core/Src/main.c ****   {
 922              		.loc 1 318 3 is_stmt 1 view .LVU218
 318:Core/Src/main.c ****   {
 923              		.loc 1 318 7 is_stmt 0 view .LVU219
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 30


 924 003c 01A8     		add	r0, sp, #4
 925 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 926              	.LVL94:
 318:Core/Src/main.c ****   {
 927              		.loc 1 318 6 view .LVU220
 928 0042 20B9     		cbnz	r0, .L56
 322:Core/Src/main.c **** 
 929              		.loc 1 322 1 view .LVU221
 930 0044 11B0     		add	sp, sp, #68
 931              	.LCFI15:
 932              		.cfi_remember_state
 933              		.cfi_def_cfa_offset 4
 934              		@ sp needed
 935 0046 5DF804FB 		ldr	pc, [sp], #4
 936              	.L55:
 937              	.LCFI16:
 938              		.cfi_restore_state
 307:Core/Src/main.c ****   }
 939              		.loc 1 307 5 is_stmt 1 view .LVU222
 940 004a FFF7FEFF 		bl	Error_Handler
 941              	.LVL95:
 942              	.L56:
 320:Core/Src/main.c ****   }
 943              		.loc 1 320 5 view .LVU223
 944 004e FFF7FEFF 		bl	Error_Handler
 945              	.LVL96:
 946              		.cfi_endproc
 947              	.LFE73:
 949              		.section	.text.main,"ax",%progbits
 950              		.align	1
 951              		.global	main
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 956              	main:
 957              	.LFB72:
 189:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 958              		.loc 1 189 1 view -0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962 0000 38B5     		push	{r3, r4, r5, lr}
 963              	.LCFI17:
 964              		.cfi_def_cfa_offset 16
 965              		.cfi_offset 3, -16
 966              		.cfi_offset 4, -12
 967              		.cfi_offset 5, -8
 968              		.cfi_offset 14, -4
 197:Core/Src/main.c **** 
 969              		.loc 1 197 3 view .LVU225
 970 0002 FFF7FEFF 		bl	HAL_Init
 971              	.LVL97:
 204:Core/Src/main.c **** 
 972              		.loc 1 204 3 view .LVU226
 973 0006 FFF7FEFF 		bl	SystemClock_Config
 974              	.LVL98:
 211:Core/Src/main.c ****   MX_TIM2_Init();
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 31


 975              		.loc 1 211 3 view .LVU227
 976 000a FFF7FEFF 		bl	MX_GPIO_Init
 977              	.LVL99:
 212:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 978              		.loc 1 212 3 view .LVU228
 979 000e FFF7FEFF 		bl	MX_TIM2_Init
 980              	.LVL100:
 214:Core/Src/main.c ****   setTimer1(100);
 981              		.loc 1 214 3 view .LVU229
 982 0012 4E48     		ldr	r0, .L71
 983 0014 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 984              	.LVL101:
 215:Core/Src/main.c ****   setTimer2(25);
 985              		.loc 1 215 3 view .LVU230
 986 0018 6420     		movs	r0, #100
 987 001a FFF7FEFF 		bl	setTimer1
 988              	.LVL102:
 216:Core/Src/main.c ****   setTimer3(10); // fai lam tan so  >= 25hz
 989              		.loc 1 216 3 view .LVU231
 990 001e 1920     		movs	r0, #25
 991 0020 FFF7FEFF 		bl	setTimer2
 992              	.LVL103:
 217:Core/Src/main.c ****   clearDisplay7Seg();
 993              		.loc 1 217 3 view .LVU232
 994 0024 0A20     		movs	r0, #10
 995 0026 FFF7FEFF 		bl	setTimer3
 996              	.LVL104:
 218:Core/Src/main.c **** 
 997              		.loc 1 218 3 view .LVU233
 998 002a FFF7FEFF 		bl	clearDisplay7Seg
 999              	.LVL105:
 220:Core/Src/main.c ****   HAL_GPIO_WritePin(DOT_GPIO_Port, DOT_Pin, 1);
 1000              		.loc 1 220 3 view .LVU234
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 0);
 1001              		.loc 1 221 3 view .LVU235
 1002 002e 484C     		ldr	r4, .L71+4
 1003 0030 0122     		movs	r2, #1
 1004 0032 1021     		movs	r1, #16
 1005 0034 2046     		mov	r0, r4
 1006 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1007              	.LVL106:
 222:Core/Src/main.c **** 
 1008              		.loc 1 222 3 view .LVU236
 1009 003a 0022     		movs	r2, #0
 1010 003c 2021     		movs	r1, #32
 1011 003e 2046     		mov	r0, r4
 1012 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1013              	.LVL107:
 224:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 1014              		.loc 1 224 3 view .LVU237
 1015 0044 0022     		movs	r2, #0
 1016 0046 4021     		movs	r1, #64
 1017 0048 2046     		mov	r0, r4
 1018 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1019              	.LVL108:
 225:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 1020              		.loc 1 225 3 view .LVU238
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 32


 1021 004e 0122     		movs	r2, #1
 1022 0050 8021     		movs	r1, #128
 1023 0052 2046     		mov	r0, r4
 1024 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1025              	.LVL109:
 226:Core/Src/main.c ****   HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 1026              		.loc 1 226 3 view .LVU239
 1027 0058 0122     		movs	r2, #1
 1028 005a 4FF48071 		mov	r1, #256
 1029 005e 2046     		mov	r0, r4
 1030 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1031              	.LVL110:
 227:Core/Src/main.c **** 
 1032              		.loc 1 227 3 view .LVU240
 1033 0064 0122     		movs	r2, #1
 1034 0066 4FF40071 		mov	r1, #512
 1035 006a 2046     		mov	r0, r4
 1036 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1037              	.LVL111:
 229:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ENM0_Pin | ENM1_Pin | ENM2_Pin | ENM3_Pin | ENM4_Pin | ENM5_Pin | ENM6_P
 1038              		.loc 1 229 3 view .LVU241
 1039 0070 0022     		movs	r2, #0
 1040 0072 4FF47F41 		mov	r1, #65280
 1041 0076 3748     		ldr	r0, .L71+8
 1042 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1043              	.LVL112:
 230:Core/Src/main.c ****   updateLedMatrix(0);
 1044              		.loc 1 230 3 view .LVU242
 1045 007c 0022     		movs	r2, #0
 1046 007e 4FF60C41 		movw	r1, #64524
 1047 0082 2046     		mov	r0, r4
 1048 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1049              	.LVL113:
 231:Core/Src/main.c ****   update7SEG(0);
 1050              		.loc 1 231 3 view .LVU243
 1051 0088 0020     		movs	r0, #0
 1052 008a FFF7FEFF 		bl	updateLedMatrix
 1053              	.LVL114:
 232:Core/Src/main.c ****   updateClockBuffer();
 1054              		.loc 1 232 3 view .LVU244
 1055 008e 0020     		movs	r0, #0
 1056 0090 FFF7FEFF 		bl	update7SEG
 1057              	.LVL115:
 233:Core/Src/main.c ****   /* USER CODE END 2 */
 1058              		.loc 1 233 3 view .LVU245
 1059 0094 FFF7FEFF 		bl	updateClockBuffer
 1060              	.LVL116:
 220:Core/Src/main.c ****   HAL_GPIO_WritePin(DOT_GPIO_Port, DOT_Pin, 1);
 1061              		.loc 1 220 7 is_stmt 0 view .LVU246
 1062 0098 0124     		movs	r4, #1
 1063 009a 3CE0     		b	.L58
 1064              	.LVL117:
 1065              	.L69:
 242:Core/Src/main.c ****       if (second >= 60)
 1066              		.loc 1 242 7 is_stmt 1 view .LVU247
 242:Core/Src/main.c ****       if (second >= 60)
 1067              		.loc 1 242 13 is_stmt 0 view .LVU248
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 33


 1068 009c 2E4A     		ldr	r2, .L71+12
 1069 009e 1368     		ldr	r3, [r2]
 1070 00a0 0133     		adds	r3, r3, #1
 1071 00a2 1360     		str	r3, [r2]
 243:Core/Src/main.c ****       {
 1072              		.loc 1 243 7 is_stmt 1 view .LVU249
 243:Core/Src/main.c ****       {
 1073              		.loc 1 243 10 is_stmt 0 view .LVU250
 1074 00a4 3B2B     		cmp	r3, #59
 1075 00a6 06DD     		ble	.L60
 245:Core/Src/main.c ****         minute++;
 1076              		.loc 1 245 9 is_stmt 1 view .LVU251
 245:Core/Src/main.c ****         minute++;
 1077              		.loc 1 245 16 is_stmt 0 view .LVU252
 1078 00a8 1346     		mov	r3, r2
 1079 00aa 0022     		movs	r2, #0
 1080 00ac 1A60     		str	r2, [r3]
 246:Core/Src/main.c ****       }
 1081              		.loc 1 246 9 is_stmt 1 view .LVU253
 246:Core/Src/main.c ****       }
 1082              		.loc 1 246 15 is_stmt 0 view .LVU254
 1083 00ae 2B4A     		ldr	r2, .L71+16
 1084 00b0 1368     		ldr	r3, [r2]
 1085 00b2 0133     		adds	r3, r3, #1
 1086 00b4 1360     		str	r3, [r2]
 1087              	.L60:
 248:Core/Src/main.c ****       {
 1088              		.loc 1 248 7 is_stmt 1 view .LVU255
 248:Core/Src/main.c ****       {
 1089              		.loc 1 248 18 is_stmt 0 view .LVU256
 1090 00b6 294B     		ldr	r3, .L71+16
 1091 00b8 1B68     		ldr	r3, [r3]
 248:Core/Src/main.c ****       {
 1092              		.loc 1 248 10 view .LVU257
 1093 00ba 3B2B     		cmp	r3, #59
 1094 00bc 06DD     		ble	.L61
 250:Core/Src/main.c ****         hour++;
 1095              		.loc 1 250 9 is_stmt 1 view .LVU258
 250:Core/Src/main.c ****         hour++;
 1096              		.loc 1 250 16 is_stmt 0 view .LVU259
 1097 00be 274B     		ldr	r3, .L71+16
 1098 00c0 0022     		movs	r2, #0
 1099 00c2 1A60     		str	r2, [r3]
 251:Core/Src/main.c ****       }
 1100              		.loc 1 251 9 is_stmt 1 view .LVU260
 251:Core/Src/main.c ****       }
 1101              		.loc 1 251 13 is_stmt 0 view .LVU261
 1102 00c4 264A     		ldr	r2, .L71+20
 1103 00c6 1368     		ldr	r3, [r2]
 1104 00c8 0133     		adds	r3, r3, #1
 1105 00ca 1360     		str	r3, [r2]
 1106              	.L61:
 253:Core/Src/main.c ****       {
 1107              		.loc 1 253 7 is_stmt 1 view .LVU262
 253:Core/Src/main.c ****       {
 1108              		.loc 1 253 16 is_stmt 0 view .LVU263
 1109 00cc 244B     		ldr	r3, .L71+20
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 34


 1110 00ce 1B68     		ldr	r3, [r3]
 253:Core/Src/main.c ****       {
 1111              		.loc 1 253 10 view .LVU264
 1112 00d0 172B     		cmp	r3, #23
 1113 00d2 02DD     		ble	.L62
 255:Core/Src/main.c ****       }
 1114              		.loc 1 255 9 is_stmt 1 view .LVU265
 255:Core/Src/main.c ****       }
 1115              		.loc 1 255 14 is_stmt 0 view .LVU266
 1116 00d4 224B     		ldr	r3, .L71+20
 1117 00d6 0022     		movs	r2, #0
 1118 00d8 1A60     		str	r2, [r3]
 1119              	.L62:
 257:Core/Src/main.c ****       HAL_GPIO_TogglePin(DOT_GPIO_Port, DOT_Pin);
 1120              		.loc 1 257 7 is_stmt 1 view .LVU267
 1121 00da FFF7FEFF 		bl	updateClockBuffer
 1122              	.LVL118:
 258:Core/Src/main.c ****       setTimer1(100);
 1123              		.loc 1 258 7 view .LVU268
 1124 00de 1021     		movs	r1, #16
 1125 00e0 1B48     		ldr	r0, .L71+4
 1126 00e2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1127              	.LVL119:
 259:Core/Src/main.c ****     }
 1128              		.loc 1 259 7 view .LVU269
 1129 00e6 6420     		movs	r0, #100
 1130 00e8 FFF7FEFF 		bl	setTimer1
 1131              	.LVL120:
 1132 00ec 17E0     		b	.L59
 1133              	.L70:
 263:Core/Src/main.c ****       ledPos++;
 1134              		.loc 1 263 7 view .LVU270
 1135 00ee 6342     		rsbs	r3, r4, #0
 1136 00f0 04F00300 		and	r0, r4, #3
 1137 00f4 03F00303 		and	r3, r3, #3
 1138 00f8 58BF     		it	pl
 1139 00fa 5842     		rsbpl	r0, r3, #0
 1140 00fc FFF7FEFF 		bl	update7SEG
 1141              	.LVL121:
 264:Core/Src/main.c ****       if (ledPos > 3)
 1142              		.loc 1 264 7 view .LVU271
 264:Core/Src/main.c ****       if (ledPos > 3)
 1143              		.loc 1 264 13 is_stmt 0 view .LVU272
 1144 0100 0134     		adds	r4, r4, #1
 1145              	.LVL122:
 265:Core/Src/main.c ****         ledPos = 0;
 1146              		.loc 1 265 7 is_stmt 1 view .LVU273
 265:Core/Src/main.c ****         ledPos = 0;
 1147              		.loc 1 265 10 is_stmt 0 view .LVU274
 1148 0102 032C     		cmp	r4, #3
 1149 0104 00DD     		ble	.L64
 266:Core/Src/main.c ****       setTimer2(25);
 1150              		.loc 1 266 16 view .LVU275
 1151 0106 0024     		movs	r4, #0
 1152              	.LVL123:
 1153              	.L64:
 267:Core/Src/main.c ****     }
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 35


 1154              		.loc 1 267 7 is_stmt 1 view .LVU276
 1155 0108 1920     		movs	r0, #25
 1156 010a FFF7FEFF 		bl	setTimer2
 1157              	.LVL124:
 1158 010e 0AE0     		b	.L63
 1159              	.L66:
 279:Core/Src/main.c ****       }
 1160              		.loc 1 279 9 view .LVU277
 1161 0110 0520     		movs	r0, #5
 1162 0112 FFF7FEFF 		bl	setTimer3
 1163              	.LVL125:
 1164              	.L58:
 238:Core/Src/main.c ****   {
 1165              		.loc 1 238 3 view .LVU278
 240:Core/Src/main.c ****     {
 1166              		.loc 1 240 5 view .LVU279
 240:Core/Src/main.c ****     {
 1167              		.loc 1 240 21 is_stmt 0 view .LVU280
 1168 0116 134B     		ldr	r3, .L71+24
 1169 0118 1B68     		ldr	r3, [r3]
 240:Core/Src/main.c ****     {
 1170              		.loc 1 240 8 view .LVU281
 1171 011a 012B     		cmp	r3, #1
 1172 011c BED0     		beq	.L69
 1173              	.L59:
 261:Core/Src/main.c ****     {
 1174              		.loc 1 261 5 is_stmt 1 view .LVU282
 261:Core/Src/main.c ****     {
 1175              		.loc 1 261 21 is_stmt 0 view .LVU283
 1176 011e 124B     		ldr	r3, .L71+28
 1177 0120 1B68     		ldr	r3, [r3]
 261:Core/Src/main.c ****     {
 1178              		.loc 1 261 8 view .LVU284
 1179 0122 012B     		cmp	r3, #1
 1180 0124 E3D0     		beq	.L70
 1181              	.L63:
 269:Core/Src/main.c ****     {
 1182              		.loc 1 269 5 is_stmt 1 view .LVU285
 269:Core/Src/main.c ****     {
 1183              		.loc 1 269 21 is_stmt 0 view .LVU286
 1184 0126 114B     		ldr	r3, .L71+32
 1185 0128 1B68     		ldr	r3, [r3]
 269:Core/Src/main.c ****     {
 1186              		.loc 1 269 8 view .LVU287
 1187 012a 012B     		cmp	r3, #1
 1188 012c F3D1     		bne	.L58
 271:Core/Src/main.c ****       if (index_led_matrix >= 8)
 1189              		.loc 1 271 7 is_stmt 1 view .LVU288
 1190 012e 104D     		ldr	r5, .L71+36
 1191 0130 2868     		ldr	r0, [r5]
 1192 0132 431C     		adds	r3, r0, #1
 1193 0134 2B60     		str	r3, [r5]
 1194 0136 FFF7FEFF 		bl	updateLedMatrix
 1195              	.LVL126:
 272:Core/Src/main.c ****       {
 1196              		.loc 1 272 7 view .LVU289
 272:Core/Src/main.c ****       {
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 36


 1197              		.loc 1 272 28 is_stmt 0 view .LVU290
 1198 013a 2B68     		ldr	r3, [r5]
 272:Core/Src/main.c ****       {
 1199              		.loc 1 272 10 view .LVU291
 1200 013c 072B     		cmp	r3, #7
 1201 013e E7DD     		ble	.L66
 274:Core/Src/main.c ****         index_led_matrix = 0;
 1202              		.loc 1 274 9 is_stmt 1 view .LVU292
 1203 0140 0A20     		movs	r0, #10
 1204 0142 FFF7FEFF 		bl	setTimer3
 1205              	.LVL127:
 275:Core/Src/main.c ****       }
 1206              		.loc 1 275 9 view .LVU293
 275:Core/Src/main.c ****       }
 1207              		.loc 1 275 26 is_stmt 0 view .LVU294
 1208 0146 0022     		movs	r2, #0
 1209 0148 2A60     		str	r2, [r5]
 1210 014a E4E7     		b	.L58
 1211              	.L72:
 1212              		.align	2
 1213              	.L71:
 1214 014c 00000000 		.word	htim2
 1215 0150 00080140 		.word	1073809408
 1216 0154 000C0140 		.word	1073810432
 1217 0158 00000000 		.word	second
 1218 015c 00000000 		.word	minute
 1219 0160 00000000 		.word	hour
 1220 0164 00000000 		.word	timer1_flag
 1221 0168 00000000 		.word	timer2_flag
 1222 016c 00000000 		.word	timer3_flag
 1223 0170 00000000 		.word	index_led_matrix
 1224              		.cfi_endproc
 1225              	.LFE72:
 1227              		.global	second
 1228              		.section	.data.second,"aw"
 1229              		.align	2
 1232              	second:
 1233 0000 32000000 		.word	50
 1234              		.global	minute
 1235              		.section	.data.minute,"aw"
 1236              		.align	2
 1239              	minute:
 1240 0000 09000000 		.word	9
 1241              		.global	hour
 1242              		.section	.data.hour,"aw"
 1243              		.align	2
 1246              	hour:
 1247 0000 12000000 		.word	18
 1248              		.global	bytes
 1249              		.section	.data.bytes,"aw"
 1250              		.align	2
 1253              	bytes:
 1254 0000 0100     		.short	1
 1255 0002 0200     		.short	2
 1256 0004 0400     		.short	4
 1257 0006 0800     		.short	8
 1258 0008 1000     		.short	16
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 37


 1259 000a 2000     		.short	32
 1260 000c 4000     		.short	64
 1261 000e 8000     		.short	128
 1262              		.global	matrix_buffer
 1263              		.section	.data.matrix_buffer,"aw"
 1264              		.align	2
 1267              	matrix_buffer:
 1268 0000 1800     		.short	24
 1269 0002 3C00     		.short	60
 1270 0004 6600     		.short	102
 1271 0006 6600     		.short	102
 1272 0008 7E00     		.short	126
 1273 000a 7E00     		.short	126
 1274 000c 6600     		.short	102
 1275 000e 6600     		.short	102
 1276              		.global	hang
 1277              		.section	.data.hang,"aw"
 1278              		.align	2
 1281              	hang:
 1282 0000 0001     		.short	256
 1283 0002 0002     		.short	512
 1284 0004 0004     		.short	1024
 1285 0006 0008     		.short	2048
 1286 0008 0010     		.short	4096
 1287 000a 0020     		.short	8192
 1288 000c 0040     		.short	16384
 1289 000e 0080     		.short	-32768
 1290              		.global	cot
 1291              		.section	.data.cot,"aw"
 1292              		.align	2
 1295              	cot:
 1296 0000 0400     		.short	4
 1297 0002 0800     		.short	8
 1298 0004 0004     		.short	1024
 1299 0006 0008     		.short	2048
 1300 0008 0010     		.short	4096
 1301 000a 0020     		.short	8192
 1302 000c 0040     		.short	16384
 1303 000e 0080     		.short	-32768
 1304              		.global	led_buffer
 1305              		.section	.data.led_buffer,"aw"
 1306              		.align	2
 1309              	led_buffer:
 1310 0000 01000000 		.word	1
 1311 0004 08000000 		.word	8
 1312 0008 00000000 		.word	0
 1313 000c 09000000 		.word	9
 1314              		.global	index_led_matrix
 1315              		.section	.bss.index_led_matrix,"aw",%nobits
 1316              		.align	2
 1319              	index_led_matrix:
 1320 0000 00000000 		.space	4
 1321              		.global	MAX_LED_MATRIX
 1322              		.section	.rodata.MAX_LED_MATRIX,"a"
 1323              		.align	2
 1326              	MAX_LED_MATRIX:
 1327 0000 08000000 		.word	8
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 38


 1328              		.global	MAX_LED
 1329              		.section	.rodata.MAX_LED,"a"
 1330              		.align	2
 1333              	MAX_LED:
 1334 0000 04000000 		.word	4
 1335              		.global	htim2
 1336              		.section	.bss.htim2,"aw",%nobits
 1337              		.align	2
 1340              	htim2:
 1341 0000 00000000 		.space	72
 1341      00000000 
 1341      00000000 
 1341      00000000 
 1341      00000000 
 1342              		.text
 1343              	.Letext0:
 1344              		.file 3 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\machine\\_default_types.h"
 1345              		.file 4 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\sys\\_stdint.h"
 1346              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 1347              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1348              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1349              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1350              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1351              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1352              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1353              		.file 12 "Core/Inc/software_timer.h"
 1354              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1355              		.file 14 "Core/Inc/7segmentLED.h"
 1356              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1357              		.file 16 "<built-in>"
ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 39


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:141    .text.MX_GPIO_Init:00000088 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:148    .text.update7SEG:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:154    .text.update7SEG:00000000 update7SEG
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:172    .text.update7SEG:0000000a $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:176    .text.update7SEG:0000000e $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:278    .text.update7SEG:00000098 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1309   .data.led_buffer:00000000 led_buffer
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:284    .text.updateClockBuffer:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:290    .text.updateClockBuffer:00000000 updateClockBuffer
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:344    .text.updateClockBuffer:00000040 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1246   .data.hour:00000000 hour
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1239   .data.minute:00000000 minute
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:352    .text.writeByte:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:358    .text.writeByte:00000000 writeByte
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:436    .text.updateLedMatrix:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:442    .text.updateLedMatrix:00000000 updateLedMatrix
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:465    .text.updateLedMatrix:00000010 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:473    .text.updateLedMatrix:00000018 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:663    .text.updateLedMatrix:000000e8 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1267   .data.matrix_buffer:00000000 matrix_buffer
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1295   .data.cot:00000000 cot
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1281   .data.hang:00000000 hang
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:672    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:678    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:700    .text.Error_Handler:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:706    .text.Error_Handler:00000000 Error_Handler
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:738    .text.MX_TIM2_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:743    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:846    .text.MX_TIM2_Init:00000064 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1340   .bss.htim2:00000000 htim2
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:851    .text.SystemClock_Config:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:857    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:950    .text.main:00000000 $t
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:956    .text.main:00000000 main
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1214   .text.main:0000014c $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1232   .data.second:00000000 second
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1319   .bss.index_led_matrix:00000000 index_led_matrix
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1229   .data.second:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1236   .data.minute:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1243   .data.hour:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1253   .data.bytes:00000000 bytes
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1250   .data.bytes:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1264   .data.matrix_buffer:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1278   .data.hang:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1292   .data.cot:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1306   .data.led_buffer:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1316   .bss.index_led_matrix:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1326   .rodata.MAX_LED_MATRIX:00000000 MAX_LED_MATRIX
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1323   .rodata.MAX_LED_MATRIX:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1333   .rodata.MAX_LED:00000000 MAX_LED
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1330   .rodata.MAX_LED:00000000 $d
C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s:1337   .bss.htim2:00000000 $d

ARM GAS  C:\Users\phong\AppData\Local\Temp\ccvjBHBb.s 			page 40


UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
display7Seg
timerRun
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
setTimer1
setTimer2
setTimer3
clearDisplay7Seg
HAL_GPIO_TogglePin
timer1_flag
timer2_flag
timer3_flag

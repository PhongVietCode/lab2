ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB75:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "software_timer.h"
  25:Core/Src/main.c **** #include "7segmentLED.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_TIM2_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** const int MAX_LED = 4;
  63:Core/Src/main.c **** const int MAX_LED_MATRIX = 8;
  64:Core/Src/main.c **** int index_led_matrix = 0;
  65:Core/Src/main.c **** int led_buffer[4] = {1, 8, 0, 9};
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // quet cot hang
  68:Core/Src/main.c **** uint16_t cot[8] = {ENM0_Pin, ENM1_Pin, ENM2_Pin, ENM3_Pin, ENM4_Pin, ENM5_Pin, ENM6_Pin, ENM7_Pin};
  69:Core/Src/main.c **** uint16_t hang[8] = {ROW0_Pin, ROW1_Pin, ROW2_Pin, ROW3_Pin, ROW4_Pin, ROW5_Pin, ROW6_Pin, ROW7_Pin}
  70:Core/Src/main.c **** // ma gui ra cot
  71:Core/Src/main.c **** uint16_t matrix_buffer[3][8] = {{0x30, 0x78, 0xcc, 0xcc, 0xfc, 0xfc, 0xcc, 0xcc},
  72:Core/Src/main.c ****                                 {0x18, 0x3c, 0x66, 0x66, 0x7e, 0x7e, 0x66, 0x66},
  73:Core/Src/main.c ****                                 {0x0c, 0x1e, 0x33, 0x33, 0x3f, 0x3f, 0x33, 0x33}};
  74:Core/Src/main.c **** // ma quet hang
  75:Core/Src/main.c **** uint16_t bytes[8] = {
  76:Core/Src/main.c ****     0x01,
  77:Core/Src/main.c ****     0x02,
  78:Core/Src/main.c ****     0x04,
  79:Core/Src/main.c ****     0x08,
  80:Core/Src/main.c ****     0x10,
  81:Core/Src/main.c ****     0x20,
  82:Core/Src/main.c ****     0x40,
  83:Core/Src/main.c ****     0x80,
  84:Core/Src/main.c **** };
  85:Core/Src/main.c **** int hour = 18;
  86:Core/Src/main.c **** int minute = 9;
  87:Core/Src/main.c **** int second = 50;
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** void update7SEG(int index)
  90:Core/Src/main.c **** {
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 3


  91:Core/Src/main.c ****   switch (index)
  92:Core/Src/main.c ****   {
  93:Core/Src/main.c ****   case 0:
  94:Core/Src/main.c ****     display7Seg(led_buffer[0]);
  95:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
  96:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
  97:Core/Src/main.c ****     break;
  98:Core/Src/main.c ****   case 1:
  99:Core/Src/main.c ****     display7Seg(led_buffer[1]);
 100:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 1);
 102:Core/Src/main.c ****     break;
 103:Core/Src/main.c ****   case 2:
 104:Core/Src/main.c ****     display7Seg(led_buffer[2]);
 105:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 106:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 107:Core/Src/main.c ****     break;
 108:Core/Src/main.c ****   case 3:
 109:Core/Src/main.c ****     display7Seg(led_buffer[3]);
 110:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
 111:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 112:Core/Src/main.c ****     break;
 113:Core/Src/main.c ****   default:
 114:Core/Src/main.c ****     break;
 115:Core/Src/main.c ****   }
 116:Core/Src/main.c **** }
 117:Core/Src/main.c **** void updateClockBuffer()
 118:Core/Src/main.c **** {
 119:Core/Src/main.c ****   led_buffer[0] = hour / 10;
 120:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 121:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 122:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 123:Core/Src/main.c **** }
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** void writeByte(GPIO_TypeDef *port, uint16_t *pins, uint16_t byte)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[0], byte & (uint16_t)0x01);
 128:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 129:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[2], byte & (uint16_t)0x04);
 130:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[3], byte & (uint16_t)0x08);
 131:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[4], byte & (uint16_t)0x10);
 132:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[5], byte & (uint16_t)0x20);
 133:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[6], byte & (uint16_t)0x40);
 134:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[7], byte & (uint16_t)0x80);
 135:Core/Src/main.c **** }
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** void updateLedMatrix(int index, int frame)
 138:Core/Src/main.c **** {
 139:Core/Src/main.c ****   uint16_t temp = matrix_buffer[frame][index];
 140:Core/Src/main.c ****   switch (index)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****   case 0:
 143:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 144:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 145:Core/Src/main.c ****     break;
 146:Core/Src/main.c ****   case 1:
 147:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 4


 148:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****     break;
 151:Core/Src/main.c ****   case 2:
 152:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 153:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****     break;
 156:Core/Src/main.c ****   case 3:
 157:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 158:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     break;
 161:Core/Src/main.c ****   case 4:
 162:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 163:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****     break;
 166:Core/Src/main.c ****   case 5:
 167:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 168:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****     break;
 171:Core/Src/main.c ****   case 6:
 172:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 173:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****     break;
 176:Core/Src/main.c ****   case 7:
 177:Core/Src/main.c ****     writeByte(GPIOA, cot, ~(temp));
 178:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 179:Core/Src/main.c ****     break;
 180:Core/Src/main.c ****   default:
 181:Core/Src/main.c ****     break;
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c **** }
 184:Core/Src/main.c **** /* USER CODE END 0 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /**
 187:Core/Src/main.c ****  * @brief  The application entry point.
 188:Core/Src/main.c ****  * @retval int
 189:Core/Src/main.c ****  */
 190:Core/Src/main.c **** int main(void)
 191:Core/Src/main.c **** {
 192:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END 1 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 199:Core/Src/main.c ****   HAL_Init();
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE END Init */
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 5


 205:Core/Src/main.c ****   /* Configure the system clock */
 206:Core/Src/main.c ****   SystemClock_Config();
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE END SysInit */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* Initialize all configured peripherals */
 213:Core/Src/main.c ****   MX_GPIO_Init();
 214:Core/Src/main.c ****   MX_TIM2_Init();
 215:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 216:Core/Src/main.c ****   int ledPos = 1;
 217:Core/Src/main.c ****   int frame = 0;
 218:Core/Src/main.c ****   int direction = 1;
 219:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 220:Core/Src/main.c ****   setTimer1(100);
 221:Core/Src/main.c ****   setTimer2(25);
 222:Core/Src/main.c ****   setTimer3(3); // fai lam tan so  >= 25hz
 223:Core/Src/main.c ****   clearDisplay7Seg();
 224:Core/Src/main.c ****   updateLedMatrix(0, frame);
 225:Core/Src/main.c ****   frame += direction;
 226:Core/Src/main.c ****   update7SEG(0);
 227:Core/Src/main.c ****   updateClockBuffer();
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   HAL_GPIO_WritePin(DOT_GPIO_Port, DOT_Pin, 1);
 230:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 0);
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
 233:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 234:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 235:Core/Src/main.c ****   HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, ROW0_Pin | ROW1_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_Pin | ROW6_P
 238:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ENM0_Pin | ENM1_Pin | ENM2_Pin | ENM3_Pin | ENM4_Pin | ENM5_Pin | ENM6_P
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END 2 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* Infinite loop */
 243:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 244:Core/Src/main.c ****   while (1)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     if (timer1_flag == 1)
 247:Core/Src/main.c ****     {
 248:Core/Src/main.c ****       second++;
 249:Core/Src/main.c ****       if (second >= 60)
 250:Core/Src/main.c ****       {
 251:Core/Src/main.c ****         second = 0;
 252:Core/Src/main.c ****         minute++;
 253:Core/Src/main.c ****       }
 254:Core/Src/main.c ****       if (minute >= 60)
 255:Core/Src/main.c ****       {
 256:Core/Src/main.c ****         minute = 0;
 257:Core/Src/main.c ****         hour++;
 258:Core/Src/main.c ****       }
 259:Core/Src/main.c ****       if (hour >= 24)
 260:Core/Src/main.c ****       {
 261:Core/Src/main.c ****         hour = 0;
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 6


 262:Core/Src/main.c ****       }
 263:Core/Src/main.c ****       updateClockBuffer();
 264:Core/Src/main.c ****       HAL_GPIO_TogglePin(DOT_GPIO_Port, DOT_Pin);
 265:Core/Src/main.c ****       setTimer1(100);
 266:Core/Src/main.c ****     }
 267:Core/Src/main.c ****     if (timer2_flag == 1)
 268:Core/Src/main.c ****     {
 269:Core/Src/main.c ****       update7SEG(ledPos % 4);
 270:Core/Src/main.c ****       ledPos++;
 271:Core/Src/main.c ****       if (ledPos > 3)
 272:Core/Src/main.c ****         ledPos = 0;
 273:Core/Src/main.c ****       setTimer2(25);
 274:Core/Src/main.c ****     }
 275:Core/Src/main.c ****     if (timer3_flag == 1)
 276:Core/Src/main.c ****     {
 277:Core/Src/main.c ****       updateLedMatrix(index_led_matrix++, frame);
 278:Core/Src/main.c ****       if (index_led_matrix >= 8)
 279:Core/Src/main.c ****       {
 280:Core/Src/main.c ****         index_led_matrix = 0;
 281:Core/Src/main.c ****         frame += direction;
 282:Core/Src/main.c ****       }
 283:Core/Src/main.c ****       if (frame >= 3)
 284:Core/Src/main.c ****       {
 285:Core/Src/main.c ****         frame = 1;
 286:Core/Src/main.c ****         direction = -1;
 287:Core/Src/main.c ****       }
 288:Core/Src/main.c ****       else if (frame < 0)
 289:Core/Src/main.c ****       {
 290:Core/Src/main.c ****         frame = 1;
 291:Core/Src/main.c ****         direction = 1;
 292:Core/Src/main.c ****       }
 293:Core/Src/main.c ****       setTimer3(3);
 294:Core/Src/main.c ****     }
 295:Core/Src/main.c ****     /* USER CODE END WHILE */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c ****   /* USER CODE END 3 */
 300:Core/Src/main.c **** }
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** /**
 303:Core/Src/main.c ****  * @brief System Clock Configuration
 304:Core/Src/main.c ****  * @retval None
 305:Core/Src/main.c ****  */
 306:Core/Src/main.c **** void SystemClock_Config(void)
 307:Core/Src/main.c **** {
 308:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 309:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 312:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 313:Core/Src/main.c ****    */
 314:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 315:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 316:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 318:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 7


 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 324:Core/Src/main.c ****    */
 325:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 326:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 327:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 328:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 329:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c **** }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** /**
 338:Core/Src/main.c ****  * @brief TIM2 Initialization Function
 339:Core/Src/main.c ****  * @param None
 340:Core/Src/main.c ****  * @retval None
 341:Core/Src/main.c ****  */
 342:Core/Src/main.c **** static void MX_TIM2_Init(void)
 343:Core/Src/main.c **** {
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 350:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 355:Core/Src/main.c ****   htim2.Instance = TIM2;
 356:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 357:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 358:Core/Src/main.c ****   htim2.Init.Period = 9;
 359:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 360:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 361:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 362:Core/Src/main.c ****   {
 363:Core/Src/main.c ****     Error_Handler();
 364:Core/Src/main.c ****   }
 365:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 366:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 367:Core/Src/main.c ****   {
 368:Core/Src/main.c ****     Error_Handler();
 369:Core/Src/main.c ****   }
 370:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 371:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 372:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 373:Core/Src/main.c ****   {
 374:Core/Src/main.c ****     Error_Handler();
 375:Core/Src/main.c ****   }
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 8


 376:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 379:Core/Src/main.c **** }
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /**
 382:Core/Src/main.c ****  * @brief GPIO Initialization Function
 383:Core/Src/main.c ****  * @param None
 384:Core/Src/main.c ****  * @retval None
 385:Core/Src/main.c ****  */
 386:Core/Src/main.c **** static void MX_GPIO_Init(void)
 387:Core/Src/main.c **** {
  26              		.loc 1 387 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 388:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 388 3 view .LVU1
  43              		.loc 1 388 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
 389:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 390:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 393:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 393 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 393 3 view .LVU4
  52              		.loc 1 393 3 view .LVU5
  53 0010 1D4B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 393 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 393 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 393 3 view .LVU8
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 9


 394:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 394 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 394 3 view .LVU10
  68              		.loc 1 394 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00802 		orr	r2, r2, #8
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 394 3 view .LVU12
  73 002c 9B69     		ldr	r3, [r3, #24]
  74 002e 03F00803 		and	r3, r3, #8
  75 0032 0193     		str	r3, [sp, #4]
  76              		.loc 1 394 3 view .LVU13
  77 0034 019B     		ldr	r3, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 394 3 view .LVU14
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 397:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ENM0_Pin | ENM1_Pin | DOT_Pin | LED_Pin | EN0_Pin | EN1_Pin | EN2_Pin | 
  80              		.loc 1 397 3 view .LVU15
  81 0036 DFF85480 		ldr	r8, .L3+4
  82 003a 2246     		mov	r2, r4
  83 003c 4FF6FC71 		movw	r1, #65532
  84 0040 4046     		mov	r0, r8
  85 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 400:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, SEG0_Pin | SEG1_Pin | SEG2_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_P
  87              		.loc 1 400 3 view .LVU16
  88 0046 124D     		ldr	r5, .L3+8
  89 0048 2246     		mov	r2, r4
  90 004a 4FF67F71 		movw	r1, #65407
  91 004e 2846     		mov	r0, r5
  92 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /*Configure GPIO pins : ENM0_Pin ENM1_Pin DOT_Pin LED_Pin
 403:Core/Src/main.c ****                            EN0_Pin EN1_Pin EN2_Pin EN3_Pin
 404:Core/Src/main.c ****                            ENM2_Pin ENM3_Pin ENM4_Pin ENM5_Pin
 405:Core/Src/main.c ****                            ENM6_Pin ENM7_Pin */
 406:Core/Src/main.c ****   GPIO_InitStruct.Pin = ENM0_Pin | ENM1_Pin | DOT_Pin | LED_Pin | EN0_Pin | EN1_Pin | EN2_Pin | EN3
  94              		.loc 1 406 3 view .LVU17
  95              		.loc 1 406 23 is_stmt 0 view .LVU18
  96 0054 4FF6FC73 		movw	r3, #65532
  97 0058 0293     		str	r3, [sp, #8]
 407:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 407 3 is_stmt 1 view .LVU19
  99              		.loc 1 407 24 is_stmt 0 view .LVU20
 100 005a 0127     		movs	r7, #1
 101 005c 0397     		str	r7, [sp, #12]
 408:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 408 3 is_stmt 1 view .LVU21
 103              		.loc 1 408 24 is_stmt 0 view .LVU22
 104 005e 0494     		str	r4, [sp, #16]
 409:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 105              		.loc 1 409 3 is_stmt 1 view .LVU23
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 10


 106              		.loc 1 409 25 is_stmt 0 view .LVU24
 107 0060 0226     		movs	r6, #2
 108 0062 0596     		str	r6, [sp, #20]
 410:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 410 3 is_stmt 1 view .LVU25
 110 0064 02A9     		add	r1, sp, #8
 111 0066 4046     		mov	r0, r8
 112 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 113              	.LVL2:
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /*Configure GPIO pins : SEG0_Pin SEG1_Pin SEG2_Pin ROW2_Pin
 413:Core/Src/main.c ****                            ROW3_Pin ROW4_Pin ROW5_Pin ROW6_Pin
 414:Core/Src/main.c ****                            ROW7_Pin SEG3_Pin SEG4_Pin SEG5_Pin
 415:Core/Src/main.c ****                            SEG6_Pin ROW0_Pin ROW1_Pin */
 416:Core/Src/main.c ****   GPIO_InitStruct.Pin = SEG0_Pin | SEG1_Pin | SEG2_Pin | ROW2_Pin | ROW3_Pin | ROW4_Pin | ROW5_Pin 
 114              		.loc 1 416 3 view .LVU26
 115              		.loc 1 416 23 is_stmt 0 view .LVU27
 116 006c 4FF67F73 		movw	r3, #65407
 117 0070 0293     		str	r3, [sp, #8]
 417:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 417 3 is_stmt 1 view .LVU28
 119              		.loc 1 417 24 is_stmt 0 view .LVU29
 120 0072 0397     		str	r7, [sp, #12]
 418:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 121              		.loc 1 418 3 is_stmt 1 view .LVU30
 122              		.loc 1 418 24 is_stmt 0 view .LVU31
 123 0074 0494     		str	r4, [sp, #16]
 419:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 419 3 is_stmt 1 view .LVU32
 125              		.loc 1 419 25 is_stmt 0 view .LVU33
 126 0076 0596     		str	r6, [sp, #20]
 420:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 127              		.loc 1 420 3 is_stmt 1 view .LVU34
 128 0078 02A9     		add	r1, sp, #8
 129 007a 2846     		mov	r0, r5
 130 007c FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 423:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 424:Core/Src/main.c **** }
 132              		.loc 1 424 1 is_stmt 0 view .LVU35
 133 0080 06B0     		add	sp, sp, #24
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 24
 136              		@ sp needed
 137 0082 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 138              	.L4:
 139 0086 00BF     		.align	2
 140              	.L3:
 141 0088 00100240 		.word	1073876992
 142 008c 00080140 		.word	1073809408
 143 0090 000C0140 		.word	1073810432
 144              		.cfi_endproc
 145              	.LFE75:
 147              		.section	.text.update7SEG,"ax",%progbits
 148              		.align	1
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 11


 149              		.global	update7SEG
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	update7SEG:
 155              	.LVL4:
 156              	.LFB68:
  90:Core/Src/main.c ****   switch (index)
 157              		.loc 1 90 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
  90:Core/Src/main.c ****   switch (index)
 161              		.loc 1 90 1 is_stmt 0 view .LVU37
 162 0000 10B5     		push	{r4, lr}
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
  91:Core/Src/main.c ****   {
 167              		.loc 1 91 3 is_stmt 1 view .LVU38
 168 0002 0328     		cmp	r0, #3
 169 0004 13D8     		bhi	.L5
 170 0006 DFE800F0 		tbb	[pc, r0]
 171              	.L8:
 172 000a 02       		.byte	(.L11-.L8)/2
 173 000b 13       		.byte	(.L10-.L8)/2
 174 000c 23       		.byte	(.L9-.L8)/2
 175 000d 34       		.byte	(.L7-.L8)/2
 176              		.p2align 1
 177              	.L11:
  94:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 178              		.loc 1 94 5 view .LVU39
 179 000e 224B     		ldr	r3, .L14
 180 0010 1868     		ldr	r0, [r3]
 181              	.LVL5:
  94:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 182              		.loc 1 94 5 is_stmt 0 view .LVU40
 183 0012 FFF7FEFF 		bl	display7Seg
 184              	.LVL6:
  95:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 0);
 185              		.loc 1 95 5 is_stmt 1 view .LVU41
 186 0016 214C     		ldr	r4, .L14+4
 187 0018 0122     		movs	r2, #1
 188 001a 4FF40071 		mov	r1, #512
 189 001e 2046     		mov	r0, r4
 190 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 191              	.LVL7:
  96:Core/Src/main.c ****     break;
 192              		.loc 1 96 5 view .LVU42
 193 0024 0022     		movs	r2, #0
 194 0026 4021     		movs	r1, #64
 195 0028 2046     		mov	r0, r4
 196 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 197              	.LVL8:
  97:Core/Src/main.c ****   case 1:
 198              		.loc 1 97 5 view .LVU43
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 12


 199              	.L5:
 116:Core/Src/main.c **** void updateClockBuffer()
 200              		.loc 1 116 1 is_stmt 0 view .LVU44
 201 002e 10BD     		pop	{r4, pc}
 202              	.LVL9:
 203              	.L10:
  99:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
 204              		.loc 1 99 5 is_stmt 1 view .LVU45
 205 0030 194B     		ldr	r3, .L14
 206 0032 5868     		ldr	r0, [r3, #4]
 207              	.LVL10:
  99:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 0);
 208              		.loc 1 99 5 is_stmt 0 view .LVU46
 209 0034 FFF7FEFF 		bl	display7Seg
 210              	.LVL11:
 100:Core/Src/main.c ****     HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, 1);
 211              		.loc 1 100 5 is_stmt 1 view .LVU47
 212 0038 184C     		ldr	r4, .L14+4
 213 003a 0022     		movs	r2, #0
 214 003c 8021     		movs	r1, #128
 215 003e 2046     		mov	r0, r4
 216 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL12:
 101:Core/Src/main.c ****     break;
 218              		.loc 1 101 5 view .LVU48
 219 0044 0122     		movs	r2, #1
 220 0046 4021     		movs	r1, #64
 221 0048 2046     		mov	r0, r4
 222 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 223              	.LVL13:
 102:Core/Src/main.c ****   case 2:
 224              		.loc 1 102 5 view .LVU49
 225 004e EEE7     		b	.L5
 226              	.LVL14:
 227              	.L9:
 104:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 228              		.loc 1 104 5 view .LVU50
 229 0050 114B     		ldr	r3, .L14
 230 0052 9868     		ldr	r0, [r3, #8]
 231              	.LVL15:
 104:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 0);
 232              		.loc 1 104 5 is_stmt 0 view .LVU51
 233 0054 FFF7FEFF 		bl	display7Seg
 234              	.LVL16:
 105:Core/Src/main.c ****     HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 235              		.loc 1 105 5 is_stmt 1 view .LVU52
 236 0058 104C     		ldr	r4, .L14+4
 237 005a 0022     		movs	r2, #0
 238 005c 4FF48071 		mov	r1, #256
 239 0060 2046     		mov	r0, r4
 240 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL17:
 106:Core/Src/main.c ****     break;
 242              		.loc 1 106 5 view .LVU53
 243 0066 0122     		movs	r2, #1
 244 0068 8021     		movs	r1, #128
 245 006a 2046     		mov	r0, r4
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 13


 246 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 247              	.LVL18:
 107:Core/Src/main.c ****   case 3:
 248              		.loc 1 107 5 view .LVU54
 249 0070 DDE7     		b	.L5
 250              	.LVL19:
 251              	.L7:
 109:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
 252              		.loc 1 109 5 view .LVU55
 253 0072 094B     		ldr	r3, .L14
 254 0074 D868     		ldr	r0, [r3, #12]
 255              	.LVL20:
 109:Core/Src/main.c ****     HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 0);
 256              		.loc 1 109 5 is_stmt 0 view .LVU56
 257 0076 FFF7FEFF 		bl	display7Seg
 258              	.LVL21:
 110:Core/Src/main.c ****     HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 259              		.loc 1 110 5 is_stmt 1 view .LVU57
 260 007a 084C     		ldr	r4, .L14+4
 261 007c 0022     		movs	r2, #0
 262 007e 4FF40071 		mov	r1, #512
 263 0082 2046     		mov	r0, r4
 264 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 265              	.LVL22:
 111:Core/Src/main.c ****     break;
 266              		.loc 1 111 5 view .LVU58
 267 0088 0122     		movs	r2, #1
 268 008a 4FF48071 		mov	r1, #256
 269 008e 2046     		mov	r0, r4
 270 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 271              	.LVL23:
 112:Core/Src/main.c ****   default:
 272              		.loc 1 112 5 view .LVU59
 116:Core/Src/main.c **** void updateClockBuffer()
 273              		.loc 1 116 1 is_stmt 0 view .LVU60
 274 0094 CBE7     		b	.L5
 275              	.L15:
 276 0096 00BF     		.align	2
 277              	.L14:
 278 0098 00000000 		.word	led_buffer
 279 009c 00080140 		.word	1073809408
 280              		.cfi_endproc
 281              	.LFE68:
 283              		.section	.text.updateClockBuffer,"ax",%progbits
 284              		.align	1
 285              		.global	updateClockBuffer
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 290              	updateClockBuffer:
 291              	.LFB69:
 118:Core/Src/main.c ****   led_buffer[0] = hour / 10;
 292              		.loc 1 118 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 14


 297 0000 10B4     		push	{r4}
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 4, -4
 119:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 301              		.loc 1 119 3 view .LVU62
 119:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 302              		.loc 1 119 24 is_stmt 0 view .LVU63
 303 0002 0F4B     		ldr	r3, .L18
 304 0004 1C68     		ldr	r4, [r3]
 305 0006 0F48     		ldr	r0, .L18+4
 306 0008 80FB0432 		smull	r3, r2, r0, r4
 307 000c E317     		asrs	r3, r4, #31
 308 000e C3EBA203 		rsb	r3, r3, r2, asr #2
 119:Core/Src/main.c ****   led_buffer[1] = hour % 10;
 309              		.loc 1 119 17 view .LVU64
 310 0012 0D49     		ldr	r1, .L18+8
 311 0014 0B60     		str	r3, [r1]
 120:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 312              		.loc 1 120 3 is_stmt 1 view .LVU65
 120:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 313              		.loc 1 120 24 is_stmt 0 view .LVU66
 314 0016 03EB8303 		add	r3, r3, r3, lsl #2
 315 001a 5A00     		lsls	r2, r3, #1
 316 001c A21A     		subs	r2, r4, r2
 120:Core/Src/main.c ****   led_buffer[2] = minute / 10;
 317              		.loc 1 120 17 view .LVU67
 318 001e 4A60     		str	r2, [r1, #4]
 121:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 319              		.loc 1 121 3 is_stmt 1 view .LVU68
 121:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 320              		.loc 1 121 26 is_stmt 0 view .LVU69
 321 0020 0A4B     		ldr	r3, .L18+12
 322 0022 1C68     		ldr	r4, [r3]
 323 0024 80FB0430 		smull	r3, r0, r0, r4
 324 0028 E317     		asrs	r3, r4, #31
 325 002a C3EBA003 		rsb	r3, r3, r0, asr #2
 121:Core/Src/main.c ****   led_buffer[3] = minute % 10;
 326              		.loc 1 121 17 view .LVU70
 327 002e 8B60     		str	r3, [r1, #8]
 122:Core/Src/main.c **** }
 328              		.loc 1 122 3 is_stmt 1 view .LVU71
 122:Core/Src/main.c **** }
 329              		.loc 1 122 26 is_stmt 0 view .LVU72
 330 0030 03EB8303 		add	r3, r3, r3, lsl #2
 331 0034 5A00     		lsls	r2, r3, #1
 332 0036 A21A     		subs	r2, r4, r2
 122:Core/Src/main.c **** }
 333              		.loc 1 122 17 view .LVU73
 334 0038 CA60     		str	r2, [r1, #12]
 123:Core/Src/main.c **** 
 335              		.loc 1 123 1 view .LVU74
 336 003a 10BC     		pop	{r4}
 337              	.LCFI5:
 338              		.cfi_restore 4
 339              		.cfi_def_cfa_offset 0
 340 003c 7047     		bx	lr
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 15


 341              	.L19:
 342 003e 00BF     		.align	2
 343              	.L18:
 344 0040 00000000 		.word	hour
 345 0044 67666666 		.word	1717986919
 346 0048 00000000 		.word	led_buffer
 347 004c 00000000 		.word	minute
 348              		.cfi_endproc
 349              	.LFE69:
 351              		.section	.text.writeByte,"ax",%progbits
 352              		.align	1
 353              		.global	writeByte
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	writeByte:
 359              	.LVL24:
 360              	.LFB70:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[0], byte & (uint16_t)0x01);
 361              		.loc 1 126 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[0], byte & (uint16_t)0x01);
 365              		.loc 1 126 1 is_stmt 0 view .LVU76
 366 0000 70B5     		push	{r4, r5, r6, lr}
 367              	.LCFI6:
 368              		.cfi_def_cfa_offset 16
 369              		.cfi_offset 4, -16
 370              		.cfi_offset 5, -12
 371              		.cfi_offset 6, -8
 372              		.cfi_offset 14, -4
 373 0002 0546     		mov	r5, r0
 374 0004 0C46     		mov	r4, r1
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 375              		.loc 1 127 3 is_stmt 1 view .LVU77
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 376              		.loc 1 127 41 is_stmt 0 view .LVU78
 377 0006 D6B2     		uxtb	r6, r2
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 378              		.loc 1 127 3 view .LVU79
 379 0008 02F00102 		and	r2, r2, #1
 380              	.LVL25:
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 381              		.loc 1 127 3 view .LVU80
 382 000c 0988     		ldrh	r1, [r1]
 383              	.LVL26:
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[1], byte & (uint16_t)0x02);
 384              		.loc 1 127 3 view .LVU81
 385 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 386              	.LVL27:
 128:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[2], byte & (uint16_t)0x04);
 387              		.loc 1 128 3 is_stmt 1 view .LVU82
 388 0012 06F00202 		and	r2, r6, #2
 389 0016 6188     		ldrh	r1, [r4, #2]
 390 0018 2846     		mov	r0, r5
 391 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 16


 392              	.LVL28:
 129:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[3], byte & (uint16_t)0x08);
 393              		.loc 1 129 3 view .LVU83
 394 001e 06F00402 		and	r2, r6, #4
 395 0022 A188     		ldrh	r1, [r4, #4]
 396 0024 2846     		mov	r0, r5
 397 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 398              	.LVL29:
 130:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[4], byte & (uint16_t)0x10);
 399              		.loc 1 130 3 view .LVU84
 400 002a 06F00802 		and	r2, r6, #8
 401 002e E188     		ldrh	r1, [r4, #6]
 402 0030 2846     		mov	r0, r5
 403 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 404              	.LVL30:
 131:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[5], byte & (uint16_t)0x20);
 405              		.loc 1 131 3 view .LVU85
 406 0036 06F01002 		and	r2, r6, #16
 407 003a 2189     		ldrh	r1, [r4, #8]
 408 003c 2846     		mov	r0, r5
 409 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 410              	.LVL31:
 132:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[6], byte & (uint16_t)0x40);
 411              		.loc 1 132 3 view .LVU86
 412 0042 06F02002 		and	r2, r6, #32
 413 0046 6189     		ldrh	r1, [r4, #10]
 414 0048 2846     		mov	r0, r5
 415 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 416              	.LVL32:
 133:Core/Src/main.c ****   HAL_GPIO_WritePin(port, pins[7], byte & (uint16_t)0x80);
 417              		.loc 1 133 3 view .LVU87
 418 004e 06F04002 		and	r2, r6, #64
 419 0052 A189     		ldrh	r1, [r4, #12]
 420 0054 2846     		mov	r0, r5
 421 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 422              	.LVL33:
 134:Core/Src/main.c **** }
 423              		.loc 1 134 3 view .LVU88
 424 005a 06F08002 		and	r2, r6, #128
 425 005e E189     		ldrh	r1, [r4, #14]
 426 0060 2846     		mov	r0, r5
 427 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 428              	.LVL34:
 135:Core/Src/main.c **** 
 429              		.loc 1 135 1 is_stmt 0 view .LVU89
 430 0066 70BD     		pop	{r4, r5, r6, pc}
 135:Core/Src/main.c **** 
 431              		.loc 1 135 1 view .LVU90
 432              		.cfi_endproc
 433              	.LFE70:
 435              		.section	.text.updateLedMatrix,"ax",%progbits
 436              		.align	1
 437              		.global	updateLedMatrix
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 442              	updateLedMatrix:
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 17


 443              	.LVL35:
 444              	.LFB71:
 138:Core/Src/main.c ****   uint16_t temp = matrix_buffer[frame][index];
 445              		.loc 1 138 1 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 138:Core/Src/main.c ****   uint16_t temp = matrix_buffer[frame][index];
 449              		.loc 1 138 1 is_stmt 0 view .LVU92
 450 0000 08B5     		push	{r3, lr}
 451              	.LCFI7:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 3, -8
 454              		.cfi_offset 14, -4
 139:Core/Src/main.c ****   switch (index)
 455              		.loc 1 139 3 is_stmt 1 view .LVU93
 139:Core/Src/main.c ****   switch (index)
 456              		.loc 1 139 12 is_stmt 0 view .LVU94
 457 0002 00EBC101 		add	r1, r0, r1, lsl #3
 458              	.LVL36:
 139:Core/Src/main.c ****   switch (index)
 459              		.loc 1 139 12 view .LVU95
 460 0006 394B     		ldr	r3, .L35
 461 0008 33F81120 		ldrh	r2, [r3, r1, lsl #1]
 462              	.LVL37:
 140:Core/Src/main.c ****   {
 463              		.loc 1 140 3 is_stmt 1 view .LVU96
 464 000c 0728     		cmp	r0, #7
 465 000e 11D8     		bhi	.L22
 466 0010 DFE800F0 		tbb	[pc, r0]
 467              	.L25:
 468 0014 04       		.byte	(.L32-.L25)/2
 469 0015 11       		.byte	(.L31-.L25)/2
 470 0016 1E       		.byte	(.L30-.L25)/2
 471 0017 2B       		.byte	(.L29-.L25)/2
 472 0018 38       		.byte	(.L28-.L25)/2
 473 0019 45       		.byte	(.L27-.L25)/2
 474 001a 52       		.byte	(.L26-.L25)/2
 475 001b 5F       		.byte	(.L24-.L25)/2
 476              		.p2align 1
 477              	.L32:
 143:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 478              		.loc 1 143 5 view .LVU97
 479 001c D243     		mvns	r2, r2
 480              	.LVL38:
 143:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 481              		.loc 1 143 5 is_stmt 0 view .LVU98
 482 001e 92B2     		uxth	r2, r2
 483              	.LVL39:
 143:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 484              		.loc 1 143 5 view .LVU99
 485 0020 3349     		ldr	r1, .L35+4
 486              	.LVL40:
 143:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 487              		.loc 1 143 5 view .LVU100
 488 0022 3448     		ldr	r0, .L35+8
 489              	.LVL41:
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 18


 143:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x01);
 490              		.loc 1 143 5 view .LVU101
 491 0024 FFF7FEFF 		bl	writeByte
 492              	.LVL42:
 144:Core/Src/main.c ****     break;
 493              		.loc 1 144 5 is_stmt 1 view .LVU102
 494 0028 4FF6FE72 		movw	r2, #65534
 495 002c 3249     		ldr	r1, .L35+12
 496 002e 3348     		ldr	r0, .L35+16
 497 0030 FFF7FEFF 		bl	writeByte
 498              	.LVL43:
 145:Core/Src/main.c ****   case 1:
 499              		.loc 1 145 5 view .LVU103
 500              	.L22:
 183:Core/Src/main.c **** /* USER CODE END 0 */
 501              		.loc 1 183 1 is_stmt 0 view .LVU104
 502 0034 08BD     		pop	{r3, pc}
 503              	.LVL44:
 504              	.L31:
 147:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 505              		.loc 1 147 5 is_stmt 1 view .LVU105
 506 0036 D243     		mvns	r2, r2
 507              	.LVL45:
 147:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 508              		.loc 1 147 5 is_stmt 0 view .LVU106
 509 0038 92B2     		uxth	r2, r2
 510              	.LVL46:
 147:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 511              		.loc 1 147 5 view .LVU107
 512 003a 2D49     		ldr	r1, .L35+4
 513              	.LVL47:
 147:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 514              		.loc 1 147 5 view .LVU108
 515 003c 2D48     		ldr	r0, .L35+8
 516              	.LVL48:
 147:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x02);
 517              		.loc 1 147 5 view .LVU109
 518 003e FFF7FEFF 		bl	writeByte
 519              	.LVL49:
 148:Core/Src/main.c **** 
 520              		.loc 1 148 5 is_stmt 1 view .LVU110
 521 0042 4FF6FD72 		movw	r2, #65533
 522 0046 2C49     		ldr	r1, .L35+12
 523 0048 2C48     		ldr	r0, .L35+16
 524 004a FFF7FEFF 		bl	writeByte
 525              	.LVL50:
 150:Core/Src/main.c ****   case 2:
 526              		.loc 1 150 5 view .LVU111
 527 004e F1E7     		b	.L22
 528              	.LVL51:
 529              	.L30:
 152:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 530              		.loc 1 152 5 view .LVU112
 531 0050 D243     		mvns	r2, r2
 532              	.LVL52:
 152:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 533              		.loc 1 152 5 is_stmt 0 view .LVU113
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 19


 534 0052 92B2     		uxth	r2, r2
 535              	.LVL53:
 152:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 536              		.loc 1 152 5 view .LVU114
 537 0054 2649     		ldr	r1, .L35+4
 538              	.LVL54:
 152:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 539              		.loc 1 152 5 view .LVU115
 540 0056 2748     		ldr	r0, .L35+8
 541              	.LVL55:
 152:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x04);
 542              		.loc 1 152 5 view .LVU116
 543 0058 FFF7FEFF 		bl	writeByte
 544              	.LVL56:
 153:Core/Src/main.c **** 
 545              		.loc 1 153 5 is_stmt 1 view .LVU117
 546 005c 4FF6FB72 		movw	r2, #65531
 547 0060 2549     		ldr	r1, .L35+12
 548 0062 2648     		ldr	r0, .L35+16
 549 0064 FFF7FEFF 		bl	writeByte
 550              	.LVL57:
 155:Core/Src/main.c ****   case 3:
 551              		.loc 1 155 5 view .LVU118
 552 0068 E4E7     		b	.L22
 553              	.LVL58:
 554              	.L29:
 157:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 555              		.loc 1 157 5 view .LVU119
 556 006a D243     		mvns	r2, r2
 557              	.LVL59:
 157:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 558              		.loc 1 157 5 is_stmt 0 view .LVU120
 559 006c 92B2     		uxth	r2, r2
 560              	.LVL60:
 157:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 561              		.loc 1 157 5 view .LVU121
 562 006e 2049     		ldr	r1, .L35+4
 563              	.LVL61:
 157:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 564              		.loc 1 157 5 view .LVU122
 565 0070 2048     		ldr	r0, .L35+8
 566              	.LVL62:
 157:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x08);
 567              		.loc 1 157 5 view .LVU123
 568 0072 FFF7FEFF 		bl	writeByte
 569              	.LVL63:
 158:Core/Src/main.c **** 
 570              		.loc 1 158 5 is_stmt 1 view .LVU124
 571 0076 4FF6F772 		movw	r2, #65527
 572 007a 1F49     		ldr	r1, .L35+12
 573 007c 1F48     		ldr	r0, .L35+16
 574 007e FFF7FEFF 		bl	writeByte
 575              	.LVL64:
 160:Core/Src/main.c ****   case 4:
 576              		.loc 1 160 5 view .LVU125
 577 0082 D7E7     		b	.L22
 578              	.LVL65:
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 20


 579              	.L28:
 162:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 580              		.loc 1 162 5 view .LVU126
 581 0084 D243     		mvns	r2, r2
 582              	.LVL66:
 162:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 583              		.loc 1 162 5 is_stmt 0 view .LVU127
 584 0086 92B2     		uxth	r2, r2
 585              	.LVL67:
 162:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 586              		.loc 1 162 5 view .LVU128
 587 0088 1949     		ldr	r1, .L35+4
 588              	.LVL68:
 162:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 589              		.loc 1 162 5 view .LVU129
 590 008a 1A48     		ldr	r0, .L35+8
 591              	.LVL69:
 162:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x10);
 592              		.loc 1 162 5 view .LVU130
 593 008c FFF7FEFF 		bl	writeByte
 594              	.LVL70:
 163:Core/Src/main.c **** 
 595              		.loc 1 163 5 is_stmt 1 view .LVU131
 596 0090 4FF6EF72 		movw	r2, #65519
 597 0094 1849     		ldr	r1, .L35+12
 598 0096 1948     		ldr	r0, .L35+16
 599 0098 FFF7FEFF 		bl	writeByte
 600              	.LVL71:
 165:Core/Src/main.c ****   case 5:
 601              		.loc 1 165 5 view .LVU132
 602 009c CAE7     		b	.L22
 603              	.LVL72:
 604              	.L27:
 167:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 605              		.loc 1 167 5 view .LVU133
 606 009e D243     		mvns	r2, r2
 607              	.LVL73:
 167:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 608              		.loc 1 167 5 is_stmt 0 view .LVU134
 609 00a0 92B2     		uxth	r2, r2
 610              	.LVL74:
 167:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 611              		.loc 1 167 5 view .LVU135
 612 00a2 1349     		ldr	r1, .L35+4
 613              	.LVL75:
 167:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 614              		.loc 1 167 5 view .LVU136
 615 00a4 1348     		ldr	r0, .L35+8
 616              	.LVL76:
 167:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x20);
 617              		.loc 1 167 5 view .LVU137
 618 00a6 FFF7FEFF 		bl	writeByte
 619              	.LVL77:
 168:Core/Src/main.c **** 
 620              		.loc 1 168 5 is_stmt 1 view .LVU138
 621 00aa 4FF6DF72 		movw	r2, #65503
 622 00ae 1249     		ldr	r1, .L35+12
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 21


 623 00b0 1248     		ldr	r0, .L35+16
 624 00b2 FFF7FEFF 		bl	writeByte
 625              	.LVL78:
 170:Core/Src/main.c ****   case 6:
 626              		.loc 1 170 5 view .LVU139
 627 00b6 BDE7     		b	.L22
 628              	.LVL79:
 629              	.L26:
 172:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 630              		.loc 1 172 5 view .LVU140
 631 00b8 D243     		mvns	r2, r2
 632              	.LVL80:
 172:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 633              		.loc 1 172 5 is_stmt 0 view .LVU141
 634 00ba 92B2     		uxth	r2, r2
 635              	.LVL81:
 172:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 636              		.loc 1 172 5 view .LVU142
 637 00bc 0C49     		ldr	r1, .L35+4
 638              	.LVL82:
 172:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 639              		.loc 1 172 5 view .LVU143
 640 00be 0D48     		ldr	r0, .L35+8
 641              	.LVL83:
 172:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x40);
 642              		.loc 1 172 5 view .LVU144
 643 00c0 FFF7FEFF 		bl	writeByte
 644              	.LVL84:
 173:Core/Src/main.c **** 
 645              		.loc 1 173 5 is_stmt 1 view .LVU145
 646 00c4 4FF6BF72 		movw	r2, #65471
 647 00c8 0B49     		ldr	r1, .L35+12
 648 00ca 0C48     		ldr	r0, .L35+16
 649 00cc FFF7FEFF 		bl	writeByte
 650              	.LVL85:
 175:Core/Src/main.c ****   case 7:
 651              		.loc 1 175 5 view .LVU146
 652 00d0 B0E7     		b	.L22
 653              	.LVL86:
 654              	.L24:
 177:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 655              		.loc 1 177 5 view .LVU147
 656 00d2 D243     		mvns	r2, r2
 657              	.LVL87:
 177:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 658              		.loc 1 177 5 is_stmt 0 view .LVU148
 659 00d4 92B2     		uxth	r2, r2
 660              	.LVL88:
 177:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 661              		.loc 1 177 5 view .LVU149
 662 00d6 0649     		ldr	r1, .L35+4
 663              	.LVL89:
 177:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
 664              		.loc 1 177 5 view .LVU150
 665 00d8 0648     		ldr	r0, .L35+8
 666              	.LVL90:
 177:Core/Src/main.c ****     writeByte(GPIOB, hang, ~0x80);
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 22


 667              		.loc 1 177 5 view .LVU151
 668 00da FFF7FEFF 		bl	writeByte
 669              	.LVL91:
 178:Core/Src/main.c ****     break;
 670              		.loc 1 178 5 is_stmt 1 view .LVU152
 671 00de 4FF67F72 		movw	r2, #65407
 672 00e2 0549     		ldr	r1, .L35+12
 673 00e4 0548     		ldr	r0, .L35+16
 674 00e6 FFF7FEFF 		bl	writeByte
 675              	.LVL92:
 179:Core/Src/main.c ****   default:
 676              		.loc 1 179 5 view .LVU153
 183:Core/Src/main.c **** /* USER CODE END 0 */
 677              		.loc 1 183 1 is_stmt 0 view .LVU154
 678 00ea A3E7     		b	.L22
 679              	.L36:
 680              		.align	2
 681              	.L35:
 682 00ec 00000000 		.word	matrix_buffer
 683 00f0 00000000 		.word	cot
 684 00f4 00080140 		.word	1073809408
 685 00f8 00000000 		.word	hang
 686 00fc 000C0140 		.word	1073810432
 687              		.cfi_endproc
 688              	.LFE71:
 690              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 691              		.align	1
 692              		.global	HAL_TIM_PeriodElapsedCallback
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 697              	HAL_TIM_PeriodElapsedCallback:
 698              	.LVL93:
 699              	.LFB76:
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 427:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 428:Core/Src/main.c **** {
 700              		.loc 1 428 1 is_stmt 1 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		.loc 1 428 1 is_stmt 0 view .LVU156
 705 0000 08B5     		push	{r3, lr}
 706              	.LCFI8:
 707              		.cfi_def_cfa_offset 8
 708              		.cfi_offset 3, -8
 709              		.cfi_offset 14, -4
 429:Core/Src/main.c ****   timerRun();
 710              		.loc 1 429 3 is_stmt 1 view .LVU157
 711 0002 FFF7FEFF 		bl	timerRun
 712              	.LVL94:
 430:Core/Src/main.c **** }
 713              		.loc 1 430 1 is_stmt 0 view .LVU158
 714 0006 08BD     		pop	{r3, pc}
 715              		.cfi_endproc
 716              	.LFE76:
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 23


 718              		.section	.text.Error_Handler,"ax",%progbits
 719              		.align	1
 720              		.global	Error_Handler
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	Error_Handler:
 726              	.LFB77:
 431:Core/Src/main.c **** /* USER CODE END 4 */
 432:Core/Src/main.c **** 
 433:Core/Src/main.c **** /**
 434:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 435:Core/Src/main.c ****  * @retval None
 436:Core/Src/main.c ****  */
 437:Core/Src/main.c **** void Error_Handler(void)
 438:Core/Src/main.c **** {
 727              		.loc 1 438 1 is_stmt 1 view -0
 728              		.cfi_startproc
 729              		@ Volatile: function does not return.
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 439:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 440:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 441:Core/Src/main.c ****   __disable_irq();
 733              		.loc 1 441 3 view .LVU160
 734              	.LBB6:
 735              	.LBI6:
 736              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 24


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 25


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 737              		.loc 2 140 27 view .LVU161
 738              	.LBB7:
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 26


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 739              		.loc 2 142 3 view .LVU162
 740              		.syntax unified
 741              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 742 0000 72B6     		cpsid i
 743              	@ 0 "" 2
 744              		.thumb
 745              		.syntax unified
 746              	.L40:
 747              	.LBE7:
 748              	.LBE6:
 442:Core/Src/main.c ****   while (1)
 749              		.loc 1 442 3 discriminator 1 view .LVU163
 443:Core/Src/main.c ****   {
 444:Core/Src/main.c ****   }
 750              		.loc 1 444 3 discriminator 1 view .LVU164
 442:Core/Src/main.c ****   while (1)
 751              		.loc 1 442 9 discriminator 1 view .LVU165
 752 0002 FEE7     		b	.L40
 753              		.cfi_endproc
 754              	.LFE77:
 756              		.section	.text.MX_TIM2_Init,"ax",%progbits
 757              		.align	1
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 762              	MX_TIM2_Init:
 763              	.LFB74:
 343:Core/Src/main.c **** 
 764              		.loc 1 343 1 view -0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 24
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768 0000 00B5     		push	{lr}
 769              	.LCFI9:
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 14, -4
 772 0002 87B0     		sub	sp, sp, #28
 773              	.LCFI10:
 774              		.cfi_def_cfa_offset 32
 349:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 775              		.loc 1 349 3 view .LVU167
 349:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 776              		.loc 1 349 26 is_stmt 0 view .LVU168
 777 0004 0023     		movs	r3, #0
 778 0006 0293     		str	r3, [sp, #8]
 779 0008 0393     		str	r3, [sp, #12]
 780 000a 0493     		str	r3, [sp, #16]
 781 000c 0593     		str	r3, [sp, #20]
 350:Core/Src/main.c **** 
 782              		.loc 1 350 3 is_stmt 1 view .LVU169
 350:Core/Src/main.c **** 
 783              		.loc 1 350 27 is_stmt 0 view .LVU170
 784 000e 0093     		str	r3, [sp]
 785 0010 0193     		str	r3, [sp, #4]
 355:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 27


 786              		.loc 1 355 3 is_stmt 1 view .LVU171
 355:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 787              		.loc 1 355 18 is_stmt 0 view .LVU172
 788 0012 1448     		ldr	r0, .L49
 789 0014 4FF08042 		mov	r2, #1073741824
 790 0018 0260     		str	r2, [r0]
 356:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 791              		.loc 1 356 3 is_stmt 1 view .LVU173
 356:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 792              		.loc 1 356 24 is_stmt 0 view .LVU174
 793 001a 41F63F72 		movw	r2, #7999
 794 001e 4260     		str	r2, [r0, #4]
 357:Core/Src/main.c ****   htim2.Init.Period = 9;
 795              		.loc 1 357 3 is_stmt 1 view .LVU175
 357:Core/Src/main.c ****   htim2.Init.Period = 9;
 796              		.loc 1 357 26 is_stmt 0 view .LVU176
 797 0020 8360     		str	r3, [r0, #8]
 358:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 798              		.loc 1 358 3 is_stmt 1 view .LVU177
 358:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 799              		.loc 1 358 21 is_stmt 0 view .LVU178
 800 0022 0922     		movs	r2, #9
 801 0024 C260     		str	r2, [r0, #12]
 359:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 802              		.loc 1 359 3 is_stmt 1 view .LVU179
 359:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 803              		.loc 1 359 28 is_stmt 0 view .LVU180
 804 0026 0361     		str	r3, [r0, #16]
 360:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 805              		.loc 1 360 3 is_stmt 1 view .LVU181
 360:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 806              		.loc 1 360 32 is_stmt 0 view .LVU182
 807 0028 8361     		str	r3, [r0, #24]
 361:Core/Src/main.c ****   {
 808              		.loc 1 361 3 is_stmt 1 view .LVU183
 361:Core/Src/main.c ****   {
 809              		.loc 1 361 7 is_stmt 0 view .LVU184
 810 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 811              	.LVL95:
 361:Core/Src/main.c ****   {
 812              		.loc 1 361 6 view .LVU185
 813 002e 90B9     		cbnz	r0, .L46
 365:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 814              		.loc 1 365 3 is_stmt 1 view .LVU186
 365:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 815              		.loc 1 365 34 is_stmt 0 view .LVU187
 816 0030 4FF48053 		mov	r3, #4096
 817 0034 0293     		str	r3, [sp, #8]
 366:Core/Src/main.c ****   {
 818              		.loc 1 366 3 is_stmt 1 view .LVU188
 366:Core/Src/main.c ****   {
 819              		.loc 1 366 7 is_stmt 0 view .LVU189
 820 0036 02A9     		add	r1, sp, #8
 821 0038 0A48     		ldr	r0, .L49
 822 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 823              	.LVL96:
 366:Core/Src/main.c ****   {
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 28


 824              		.loc 1 366 6 view .LVU190
 825 003e 60B9     		cbnz	r0, .L47
 370:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 826              		.loc 1 370 3 is_stmt 1 view .LVU191
 370:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 827              		.loc 1 370 37 is_stmt 0 view .LVU192
 828 0040 0023     		movs	r3, #0
 829 0042 0093     		str	r3, [sp]
 371:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 830              		.loc 1 371 3 is_stmt 1 view .LVU193
 371:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 831              		.loc 1 371 33 is_stmt 0 view .LVU194
 832 0044 0193     		str	r3, [sp, #4]
 372:Core/Src/main.c ****   {
 833              		.loc 1 372 3 is_stmt 1 view .LVU195
 372:Core/Src/main.c ****   {
 834              		.loc 1 372 7 is_stmt 0 view .LVU196
 835 0046 6946     		mov	r1, sp
 836 0048 0648     		ldr	r0, .L49
 837 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 838              	.LVL97:
 372:Core/Src/main.c ****   {
 839              		.loc 1 372 6 view .LVU197
 840 004e 30B9     		cbnz	r0, .L48
 379:Core/Src/main.c **** 
 841              		.loc 1 379 1 view .LVU198
 842 0050 07B0     		add	sp, sp, #28
 843              	.LCFI11:
 844              		.cfi_remember_state
 845              		.cfi_def_cfa_offset 4
 846              		@ sp needed
 847 0052 5DF804FB 		ldr	pc, [sp], #4
 848              	.L46:
 849              	.LCFI12:
 850              		.cfi_restore_state
 363:Core/Src/main.c ****   }
 851              		.loc 1 363 5 is_stmt 1 view .LVU199
 852 0056 FFF7FEFF 		bl	Error_Handler
 853              	.LVL98:
 854              	.L47:
 368:Core/Src/main.c ****   }
 855              		.loc 1 368 5 view .LVU200
 856 005a FFF7FEFF 		bl	Error_Handler
 857              	.LVL99:
 858              	.L48:
 374:Core/Src/main.c ****   }
 859              		.loc 1 374 5 view .LVU201
 860 005e FFF7FEFF 		bl	Error_Handler
 861              	.LVL100:
 862              	.L50:
 863 0062 00BF     		.align	2
 864              	.L49:
 865 0064 00000000 		.word	htim2
 866              		.cfi_endproc
 867              	.LFE74:
 869              		.section	.text.SystemClock_Config,"ax",%progbits
 870              		.align	1
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 29


 871              		.global	SystemClock_Config
 872              		.syntax unified
 873              		.thumb
 874              		.thumb_func
 876              	SystemClock_Config:
 877              	.LFB73:
 307:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 878              		.loc 1 307 1 view -0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 64
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882 0000 00B5     		push	{lr}
 883              	.LCFI13:
 884              		.cfi_def_cfa_offset 4
 885              		.cfi_offset 14, -4
 886 0002 91B0     		sub	sp, sp, #68
 887              	.LCFI14:
 888              		.cfi_def_cfa_offset 72
 308:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 889              		.loc 1 308 3 view .LVU203
 308:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 890              		.loc 1 308 22 is_stmt 0 view .LVU204
 891 0004 2822     		movs	r2, #40
 892 0006 0021     		movs	r1, #0
 893 0008 06A8     		add	r0, sp, #24
 894 000a FFF7FEFF 		bl	memset
 895              	.LVL101:
 309:Core/Src/main.c **** 
 896              		.loc 1 309 3 is_stmt 1 view .LVU205
 309:Core/Src/main.c **** 
 897              		.loc 1 309 22 is_stmt 0 view .LVU206
 898 000e 0023     		movs	r3, #0
 899 0010 0193     		str	r3, [sp, #4]
 900 0012 0293     		str	r3, [sp, #8]
 901 0014 0393     		str	r3, [sp, #12]
 902 0016 0493     		str	r3, [sp, #16]
 903 0018 0593     		str	r3, [sp, #20]
 314:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 904              		.loc 1 314 3 is_stmt 1 view .LVU207
 314:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 905              		.loc 1 314 36 is_stmt 0 view .LVU208
 906 001a 0223     		movs	r3, #2
 907 001c 0693     		str	r3, [sp, #24]
 315:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 908              		.loc 1 315 3 is_stmt 1 view .LVU209
 315:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 909              		.loc 1 315 30 is_stmt 0 view .LVU210
 910 001e 0123     		movs	r3, #1
 911 0020 0A93     		str	r3, [sp, #40]
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 912              		.loc 1 316 3 is_stmt 1 view .LVU211
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 913              		.loc 1 316 41 is_stmt 0 view .LVU212
 914 0022 1023     		movs	r3, #16
 915 0024 0B93     		str	r3, [sp, #44]
 317:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 916              		.loc 1 317 3 is_stmt 1 view .LVU213
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 30


 318:Core/Src/main.c ****   {
 917              		.loc 1 318 3 view .LVU214
 318:Core/Src/main.c ****   {
 918              		.loc 1 318 7 is_stmt 0 view .LVU215
 919 0026 06A8     		add	r0, sp, #24
 920 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 921              	.LVL102:
 318:Core/Src/main.c ****   {
 922              		.loc 1 318 6 view .LVU216
 923 002c 68B9     		cbnz	r0, .L55
 325:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 924              		.loc 1 325 3 is_stmt 1 view .LVU217
 325:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 925              		.loc 1 325 31 is_stmt 0 view .LVU218
 926 002e 0F23     		movs	r3, #15
 927 0030 0193     		str	r3, [sp, #4]
 326:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 928              		.loc 1 326 3 is_stmt 1 view .LVU219
 326:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 929              		.loc 1 326 34 is_stmt 0 view .LVU220
 930 0032 0021     		movs	r1, #0
 931 0034 0291     		str	r1, [sp, #8]
 327:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 932              		.loc 1 327 3 is_stmt 1 view .LVU221
 327:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 933              		.loc 1 327 35 is_stmt 0 view .LVU222
 934 0036 0391     		str	r1, [sp, #12]
 328:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 935              		.loc 1 328 3 is_stmt 1 view .LVU223
 328:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 936              		.loc 1 328 36 is_stmt 0 view .LVU224
 937 0038 0491     		str	r1, [sp, #16]
 329:Core/Src/main.c **** 
 938              		.loc 1 329 3 is_stmt 1 view .LVU225
 329:Core/Src/main.c **** 
 939              		.loc 1 329 36 is_stmt 0 view .LVU226
 940 003a 0591     		str	r1, [sp, #20]
 331:Core/Src/main.c ****   {
 941              		.loc 1 331 3 is_stmt 1 view .LVU227
 331:Core/Src/main.c ****   {
 942              		.loc 1 331 7 is_stmt 0 view .LVU228
 943 003c 01A8     		add	r0, sp, #4
 944 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 945              	.LVL103:
 331:Core/Src/main.c ****   {
 946              		.loc 1 331 6 view .LVU229
 947 0042 20B9     		cbnz	r0, .L56
 335:Core/Src/main.c **** 
 948              		.loc 1 335 1 view .LVU230
 949 0044 11B0     		add	sp, sp, #68
 950              	.LCFI15:
 951              		.cfi_remember_state
 952              		.cfi_def_cfa_offset 4
 953              		@ sp needed
 954 0046 5DF804FB 		ldr	pc, [sp], #4
 955              	.L55:
 956              	.LCFI16:
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 31


 957              		.cfi_restore_state
 320:Core/Src/main.c ****   }
 958              		.loc 1 320 5 is_stmt 1 view .LVU231
 959 004a FFF7FEFF 		bl	Error_Handler
 960              	.LVL104:
 961              	.L56:
 333:Core/Src/main.c ****   }
 962              		.loc 1 333 5 view .LVU232
 963 004e FFF7FEFF 		bl	Error_Handler
 964              	.LVL105:
 965              		.cfi_endproc
 966              	.LFE73:
 968              		.section	.text.main,"ax",%progbits
 969              		.align	1
 970              		.global	main
 971              		.syntax unified
 972              		.thumb
 973              		.thumb_func
 975              	main:
 976              	.LFB72:
 191:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 977              		.loc 1 191 1 view -0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 982              	.LCFI17:
 983              		.cfi_def_cfa_offset 24
 984              		.cfi_offset 4, -24
 985              		.cfi_offset 5, -20
 986              		.cfi_offset 6, -16
 987              		.cfi_offset 7, -12
 988              		.cfi_offset 8, -8
 989              		.cfi_offset 14, -4
 199:Core/Src/main.c **** 
 990              		.loc 1 199 3 view .LVU234
 991 0004 FFF7FEFF 		bl	HAL_Init
 992              	.LVL106:
 206:Core/Src/main.c **** 
 993              		.loc 1 206 3 view .LVU235
 994 0008 FFF7FEFF 		bl	SystemClock_Config
 995              	.LVL107:
 213:Core/Src/main.c ****   MX_TIM2_Init();
 996              		.loc 1 213 3 view .LVU236
 997 000c FFF7FEFF 		bl	MX_GPIO_Init
 998              	.LVL108:
 214:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 999              		.loc 1 214 3 view .LVU237
 1000 0010 FFF7FEFF 		bl	MX_TIM2_Init
 1001              	.LVL109:
 216:Core/Src/main.c ****   int frame = 0;
 1002              		.loc 1 216 3 view .LVU238
 217:Core/Src/main.c ****   int direction = 1;
 1003              		.loc 1 217 3 view .LVU239
 218:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 1004              		.loc 1 218 3 view .LVU240
 219:Core/Src/main.c ****   setTimer1(100);
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 32


 1005              		.loc 1 219 3 view .LVU241
 1006 0014 5648     		ldr	r0, .L74
 1007 0016 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1008              	.LVL110:
 220:Core/Src/main.c ****   setTimer2(25);
 1009              		.loc 1 220 3 view .LVU242
 1010 001a 6420     		movs	r0, #100
 1011 001c FFF7FEFF 		bl	setTimer1
 1012              	.LVL111:
 221:Core/Src/main.c ****   setTimer3(3); // fai lam tan so  >= 25hz
 1013              		.loc 1 221 3 view .LVU243
 1014 0020 1920     		movs	r0, #25
 1015 0022 FFF7FEFF 		bl	setTimer2
 1016              	.LVL112:
 222:Core/Src/main.c ****   clearDisplay7Seg();
 1017              		.loc 1 222 3 view .LVU244
 1018 0026 0320     		movs	r0, #3
 1019 0028 FFF7FEFF 		bl	setTimer3
 1020              	.LVL113:
 223:Core/Src/main.c ****   updateLedMatrix(0, frame);
 1021              		.loc 1 223 3 view .LVU245
 1022 002c FFF7FEFF 		bl	clearDisplay7Seg
 1023              	.LVL114:
 224:Core/Src/main.c ****   frame += direction;
 1024              		.loc 1 224 3 view .LVU246
 1025 0030 0021     		movs	r1, #0
 1026 0032 0846     		mov	r0, r1
 1027 0034 FFF7FEFF 		bl	updateLedMatrix
 1028              	.LVL115:
 225:Core/Src/main.c ****   update7SEG(0);
 1029              		.loc 1 225 3 view .LVU247
 226:Core/Src/main.c ****   updateClockBuffer();
 1030              		.loc 1 226 3 view .LVU248
 1031 0038 0020     		movs	r0, #0
 1032 003a FFF7FEFF 		bl	update7SEG
 1033              	.LVL116:
 227:Core/Src/main.c **** 
 1034              		.loc 1 227 3 view .LVU249
 1035 003e FFF7FEFF 		bl	updateClockBuffer
 1036              	.LVL117:
 229:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 0);
 1037              		.loc 1 229 3 view .LVU250
 1038 0042 4C4C     		ldr	r4, .L74+4
 1039 0044 0122     		movs	r2, #1
 1040 0046 1021     		movs	r1, #16
 1041 0048 2046     		mov	r0, r4
 1042 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1043              	.LVL118:
 230:Core/Src/main.c **** 
 1044              		.loc 1 230 3 view .LVU251
 1045 004e 0022     		movs	r2, #0
 1046 0050 2021     		movs	r1, #32
 1047 0052 2046     		mov	r0, r4
 1048 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1049              	.LVL119:
 232:Core/Src/main.c ****   HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, 1);
 1050              		.loc 1 232 3 view .LVU252
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 33


 1051 0058 0022     		movs	r2, #0
 1052 005a 4021     		movs	r1, #64
 1053 005c 2046     		mov	r0, r4
 1054 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1055              	.LVL120:
 233:Core/Src/main.c ****   HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, 1);
 1056              		.loc 1 233 3 view .LVU253
 1057 0062 0122     		movs	r2, #1
 1058 0064 8021     		movs	r1, #128
 1059 0066 2046     		mov	r0, r4
 1060 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1061              	.LVL121:
 234:Core/Src/main.c ****   HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, 1);
 1062              		.loc 1 234 3 view .LVU254
 1063 006c 0122     		movs	r2, #1
 1064 006e 4FF48071 		mov	r1, #256
 1065 0072 2046     		mov	r0, r4
 1066 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1067              	.LVL122:
 235:Core/Src/main.c **** 
 1068              		.loc 1 235 3 view .LVU255
 1069 0078 0122     		movs	r2, #1
 1070 007a 4FF40071 		mov	r1, #512
 1071 007e 2046     		mov	r0, r4
 1072 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1073              	.LVL123:
 237:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ENM0_Pin | ENM1_Pin | ENM2_Pin | ENM3_Pin | ENM4_Pin | ENM5_Pin | ENM6_P
 1074              		.loc 1 237 3 view .LVU256
 1075 0084 0022     		movs	r2, #0
 1076 0086 4FF47F41 		mov	r1, #65280
 1077 008a 3B48     		ldr	r0, .L74+8
 1078 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1079              	.LVL124:
 238:Core/Src/main.c **** 
 1080              		.loc 1 238 3 view .LVU257
 1081 0090 0022     		movs	r2, #0
 1082 0092 4FF60C41 		movw	r1, #64524
 1083 0096 2046     		mov	r0, r4
 1084 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1085              	.LVL125:
 218:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 1086              		.loc 1 218 7 is_stmt 0 view .LVU258
 1087 009c 0127     		movs	r7, #1
 225:Core/Src/main.c ****   update7SEG(0);
 1088              		.loc 1 225 9 view .LVU259
 1089 009e 3D46     		mov	r5, r7
 216:Core/Src/main.c ****   int frame = 0;
 1090              		.loc 1 216 7 view .LVU260
 1091 00a0 3E46     		mov	r6, r7
 1092 00a2 3FE0     		b	.L58
 1093              	.LVL126:
 1094              	.L72:
 248:Core/Src/main.c ****       if (second >= 60)
 1095              		.loc 1 248 7 is_stmt 1 view .LVU261
 248:Core/Src/main.c ****       if (second >= 60)
 1096              		.loc 1 248 13 is_stmt 0 view .LVU262
 1097 00a4 354A     		ldr	r2, .L74+12
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 34


 1098 00a6 1368     		ldr	r3, [r2]
 1099 00a8 0133     		adds	r3, r3, #1
 1100 00aa 1360     		str	r3, [r2]
 249:Core/Src/main.c ****       {
 1101              		.loc 1 249 7 is_stmt 1 view .LVU263
 249:Core/Src/main.c ****       {
 1102              		.loc 1 249 10 is_stmt 0 view .LVU264
 1103 00ac 3B2B     		cmp	r3, #59
 1104 00ae 06DD     		ble	.L60
 251:Core/Src/main.c ****         minute++;
 1105              		.loc 1 251 9 is_stmt 1 view .LVU265
 251:Core/Src/main.c ****         minute++;
 1106              		.loc 1 251 16 is_stmt 0 view .LVU266
 1107 00b0 1346     		mov	r3, r2
 1108 00b2 0022     		movs	r2, #0
 1109 00b4 1A60     		str	r2, [r3]
 252:Core/Src/main.c ****       }
 1110              		.loc 1 252 9 is_stmt 1 view .LVU267
 252:Core/Src/main.c ****       }
 1111              		.loc 1 252 15 is_stmt 0 view .LVU268
 1112 00b6 324A     		ldr	r2, .L74+16
 1113 00b8 1368     		ldr	r3, [r2]
 1114 00ba 0133     		adds	r3, r3, #1
 1115 00bc 1360     		str	r3, [r2]
 1116              	.L60:
 254:Core/Src/main.c ****       {
 1117              		.loc 1 254 7 is_stmt 1 view .LVU269
 254:Core/Src/main.c ****       {
 1118              		.loc 1 254 18 is_stmt 0 view .LVU270
 1119 00be 304B     		ldr	r3, .L74+16
 1120 00c0 1B68     		ldr	r3, [r3]
 254:Core/Src/main.c ****       {
 1121              		.loc 1 254 10 view .LVU271
 1122 00c2 3B2B     		cmp	r3, #59
 1123 00c4 06DD     		ble	.L61
 256:Core/Src/main.c ****         hour++;
 1124              		.loc 1 256 9 is_stmt 1 view .LVU272
 256:Core/Src/main.c ****         hour++;
 1125              		.loc 1 256 16 is_stmt 0 view .LVU273
 1126 00c6 2E4B     		ldr	r3, .L74+16
 1127 00c8 0022     		movs	r2, #0
 1128 00ca 1A60     		str	r2, [r3]
 257:Core/Src/main.c ****       }
 1129              		.loc 1 257 9 is_stmt 1 view .LVU274
 257:Core/Src/main.c ****       }
 1130              		.loc 1 257 13 is_stmt 0 view .LVU275
 1131 00cc 2D4A     		ldr	r2, .L74+20
 1132 00ce 1368     		ldr	r3, [r2]
 1133 00d0 0133     		adds	r3, r3, #1
 1134 00d2 1360     		str	r3, [r2]
 1135              	.L61:
 259:Core/Src/main.c ****       {
 1136              		.loc 1 259 7 is_stmt 1 view .LVU276
 259:Core/Src/main.c ****       {
 1137              		.loc 1 259 16 is_stmt 0 view .LVU277
 1138 00d4 2B4B     		ldr	r3, .L74+20
 1139 00d6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 35


 259:Core/Src/main.c ****       {
 1140              		.loc 1 259 10 view .LVU278
 1141 00d8 172B     		cmp	r3, #23
 1142 00da 02DD     		ble	.L62
 261:Core/Src/main.c ****       }
 1143              		.loc 1 261 9 is_stmt 1 view .LVU279
 261:Core/Src/main.c ****       }
 1144              		.loc 1 261 14 is_stmt 0 view .LVU280
 1145 00dc 294B     		ldr	r3, .L74+20
 1146 00de 0022     		movs	r2, #0
 1147 00e0 1A60     		str	r2, [r3]
 1148              	.L62:
 263:Core/Src/main.c ****       HAL_GPIO_TogglePin(DOT_GPIO_Port, DOT_Pin);
 1149              		.loc 1 263 7 is_stmt 1 view .LVU281
 1150 00e2 FFF7FEFF 		bl	updateClockBuffer
 1151              	.LVL127:
 264:Core/Src/main.c ****       setTimer1(100);
 1152              		.loc 1 264 7 view .LVU282
 1153 00e6 1021     		movs	r1, #16
 1154 00e8 2248     		ldr	r0, .L74+4
 1155 00ea FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1156              	.LVL128:
 265:Core/Src/main.c ****     }
 1157              		.loc 1 265 7 view .LVU283
 1158 00ee 6420     		movs	r0, #100
 1159 00f0 FFF7FEFF 		bl	setTimer1
 1160              	.LVL129:
 1161 00f4 1AE0     		b	.L59
 1162              	.L73:
 269:Core/Src/main.c ****       ledPos++;
 1163              		.loc 1 269 7 view .LVU284
 1164 00f6 7342     		rsbs	r3, r6, #0
 1165 00f8 06F00300 		and	r0, r6, #3
 1166 00fc 03F00303 		and	r3, r3, #3
 1167 0100 58BF     		it	pl
 1168 0102 5842     		rsbpl	r0, r3, #0
 1169 0104 FFF7FEFF 		bl	update7SEG
 1170              	.LVL130:
 270:Core/Src/main.c ****       if (ledPos > 3)
 1171              		.loc 1 270 7 view .LVU285
 270:Core/Src/main.c ****       if (ledPos > 3)
 1172              		.loc 1 270 13 is_stmt 0 view .LVU286
 1173 0108 0136     		adds	r6, r6, #1
 1174              	.LVL131:
 271:Core/Src/main.c ****         ledPos = 0;
 1175              		.loc 1 271 7 is_stmt 1 view .LVU287
 271:Core/Src/main.c ****         ledPos = 0;
 1176              		.loc 1 271 10 is_stmt 0 view .LVU288
 1177 010a 032E     		cmp	r6, #3
 1178 010c 00DD     		ble	.L64
 272:Core/Src/main.c ****       setTimer2(25);
 1179              		.loc 1 272 16 view .LVU289
 1180 010e 0026     		movs	r6, #0
 1181              	.LVL132:
 1182              	.L64:
 273:Core/Src/main.c ****     }
 1183              		.loc 1 273 7 is_stmt 1 view .LVU290
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 36


 1184 0110 1920     		movs	r0, #25
 1185 0112 FFF7FEFF 		bl	setTimer2
 1186              	.LVL133:
 1187 0116 0DE0     		b	.L63
 1188              	.L69:
 286:Core/Src/main.c ****       }
 1189              		.loc 1 286 19 is_stmt 0 view .LVU291
 1190 0118 4FF0FF37 		mov	r7, #-1
 1191              	.LVL134:
 1192              	.L67:
 293:Core/Src/main.c ****     }
 1193              		.loc 1 293 7 is_stmt 1 view .LVU292
 1194 011c 0320     		movs	r0, #3
 1195 011e FFF7FEFF 		bl	setTimer3
 1196              	.LVL135:
 1197 0122 2546     		mov	r5, r4
 1198              	.LVL136:
 1199              	.L58:
 244:Core/Src/main.c ****   {
 1200              		.loc 1 244 3 view .LVU293
 246:Core/Src/main.c ****     {
 1201              		.loc 1 246 5 view .LVU294
 246:Core/Src/main.c ****     {
 1202              		.loc 1 246 21 is_stmt 0 view .LVU295
 1203 0124 184B     		ldr	r3, .L74+24
 1204 0126 1B68     		ldr	r3, [r3]
 246:Core/Src/main.c ****     {
 1205              		.loc 1 246 8 view .LVU296
 1206 0128 012B     		cmp	r3, #1
 1207 012a BBD0     		beq	.L72
 1208              	.L59:
 267:Core/Src/main.c ****     {
 1209              		.loc 1 267 5 is_stmt 1 view .LVU297
 267:Core/Src/main.c ****     {
 1210              		.loc 1 267 21 is_stmt 0 view .LVU298
 1211 012c 174B     		ldr	r3, .L74+28
 1212 012e 1B68     		ldr	r3, [r3]
 267:Core/Src/main.c ****     {
 1213              		.loc 1 267 8 view .LVU299
 1214 0130 012B     		cmp	r3, #1
 1215 0132 E0D0     		beq	.L73
 1216              	.L63:
 275:Core/Src/main.c ****     {
 1217              		.loc 1 275 5 is_stmt 1 view .LVU300
 275:Core/Src/main.c ****     {
 1218              		.loc 1 275 21 is_stmt 0 view .LVU301
 1219 0134 164B     		ldr	r3, .L74+32
 1220 0136 1C68     		ldr	r4, [r3]
 275:Core/Src/main.c ****     {
 1221              		.loc 1 275 8 view .LVU302
 1222 0138 012C     		cmp	r4, #1
 1223 013a F3D1     		bne	.L58
 277:Core/Src/main.c ****       if (index_led_matrix >= 8)
 1224              		.loc 1 277 7 is_stmt 1 view .LVU303
 1225 013c DFF85480 		ldr	r8, .L74+36
 1226 0140 D8F80000 		ldr	r0, [r8]
 1227 0144 431C     		adds	r3, r0, #1
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 37


 1228 0146 C8F80030 		str	r3, [r8]
 1229 014a 2946     		mov	r1, r5
 1230 014c FFF7FEFF 		bl	updateLedMatrix
 1231              	.LVL137:
 278:Core/Src/main.c ****       {
 1232              		.loc 1 278 7 view .LVU304
 278:Core/Src/main.c ****       {
 1233              		.loc 1 278 28 is_stmt 0 view .LVU305
 1234 0150 D8F80030 		ldr	r3, [r8]
 278:Core/Src/main.c ****       {
 1235              		.loc 1 278 10 view .LVU306
 1236 0154 072B     		cmp	r3, #7
 1237 0156 03DD     		ble	.L66
 280:Core/Src/main.c ****         frame += direction;
 1238              		.loc 1 280 9 is_stmt 1 view .LVU307
 280:Core/Src/main.c ****         frame += direction;
 1239              		.loc 1 280 26 is_stmt 0 view .LVU308
 1240 0158 0022     		movs	r2, #0
 1241 015a C8F80020 		str	r2, [r8]
 281:Core/Src/main.c ****       }
 1242              		.loc 1 281 9 is_stmt 1 view .LVU309
 281:Core/Src/main.c ****       }
 1243              		.loc 1 281 15 is_stmt 0 view .LVU310
 1244 015e 3D44     		add	r5, r5, r7
 1245              	.LVL138:
 1246              	.L66:
 283:Core/Src/main.c ****       {
 1247              		.loc 1 283 7 is_stmt 1 view .LVU311
 283:Core/Src/main.c ****       {
 1248              		.loc 1 283 10 is_stmt 0 view .LVU312
 1249 0160 022D     		cmp	r5, #2
 1250 0162 D9DC     		bgt	.L69
 288:Core/Src/main.c ****       {
 1251              		.loc 1 288 12 is_stmt 1 view .LVU313
 288:Core/Src/main.c ****       {
 1252              		.loc 1 288 15 is_stmt 0 view .LVU314
 1253 0164 002D     		cmp	r5, #0
 1254 0166 01DB     		blt	.L70
 1255 0168 2C46     		mov	r4, r5
 1256 016a D7E7     		b	.L67
 1257              	.L70:
 291:Core/Src/main.c ****       }
 1258              		.loc 1 291 19 view .LVU315
 1259 016c 2746     		mov	r7, r4
 1260              	.LVL139:
 291:Core/Src/main.c ****       }
 1261              		.loc 1 291 19 view .LVU316
 1262 016e D5E7     		b	.L67
 1263              	.L75:
 1264              		.align	2
 1265              	.L74:
 1266 0170 00000000 		.word	htim2
 1267 0174 00080140 		.word	1073809408
 1268 0178 000C0140 		.word	1073810432
 1269 017c 00000000 		.word	second
 1270 0180 00000000 		.word	minute
 1271 0184 00000000 		.word	hour
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 38


 1272 0188 00000000 		.word	timer1_flag
 1273 018c 00000000 		.word	timer2_flag
 1274 0190 00000000 		.word	timer3_flag
 1275 0194 00000000 		.word	index_led_matrix
 1276              		.cfi_endproc
 1277              	.LFE72:
 1279              		.global	second
 1280              		.section	.data.second,"aw"
 1281              		.align	2
 1284              	second:
 1285 0000 32000000 		.word	50
 1286              		.global	minute
 1287              		.section	.data.minute,"aw"
 1288              		.align	2
 1291              	minute:
 1292 0000 09000000 		.word	9
 1293              		.global	hour
 1294              		.section	.data.hour,"aw"
 1295              		.align	2
 1298              	hour:
 1299 0000 12000000 		.word	18
 1300              		.global	bytes
 1301              		.section	.data.bytes,"aw"
 1302              		.align	2
 1305              	bytes:
 1306 0000 0100     		.short	1
 1307 0002 0200     		.short	2
 1308 0004 0400     		.short	4
 1309 0006 0800     		.short	8
 1310 0008 1000     		.short	16
 1311 000a 2000     		.short	32
 1312 000c 4000     		.short	64
 1313 000e 8000     		.short	128
 1314              		.global	matrix_buffer
 1315              		.section	.data.matrix_buffer,"aw"
 1316              		.align	2
 1319              	matrix_buffer:
 1320 0000 3000     		.short	48
 1321 0002 7800     		.short	120
 1322 0004 CC00     		.short	204
 1323 0006 CC00     		.short	204
 1324 0008 FC00     		.short	252
 1325 000a FC00     		.short	252
 1326 000c CC00     		.short	204
 1327 000e CC00     		.short	204
 1328 0010 1800     		.short	24
 1329 0012 3C00     		.short	60
 1330 0014 6600     		.short	102
 1331 0016 6600     		.short	102
 1332 0018 7E00     		.short	126
 1333 001a 7E00     		.short	126
 1334 001c 6600     		.short	102
 1335 001e 6600     		.short	102
 1336 0020 0C00     		.short	12
 1337 0022 1E00     		.short	30
 1338 0024 3300     		.short	51
 1339 0026 3300     		.short	51
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 39


 1340 0028 3F00     		.short	63
 1341 002a 3F00     		.short	63
 1342 002c 3300     		.short	51
 1343 002e 3300     		.short	51
 1344              		.global	hang
 1345              		.section	.data.hang,"aw"
 1346              		.align	2
 1349              	hang:
 1350 0000 0001     		.short	256
 1351 0002 0002     		.short	512
 1352 0004 0004     		.short	1024
 1353 0006 0008     		.short	2048
 1354 0008 0010     		.short	4096
 1355 000a 0020     		.short	8192
 1356 000c 0040     		.short	16384
 1357 000e 0080     		.short	-32768
 1358              		.global	cot
 1359              		.section	.data.cot,"aw"
 1360              		.align	2
 1363              	cot:
 1364 0000 0400     		.short	4
 1365 0002 0800     		.short	8
 1366 0004 0004     		.short	1024
 1367 0006 0008     		.short	2048
 1368 0008 0010     		.short	4096
 1369 000a 0020     		.short	8192
 1370 000c 0040     		.short	16384
 1371 000e 0080     		.short	-32768
 1372              		.global	led_buffer
 1373              		.section	.data.led_buffer,"aw"
 1374              		.align	2
 1377              	led_buffer:
 1378 0000 01000000 		.word	1
 1379 0004 08000000 		.word	8
 1380 0008 00000000 		.word	0
 1381 000c 09000000 		.word	9
 1382              		.global	index_led_matrix
 1383              		.section	.bss.index_led_matrix,"aw",%nobits
 1384              		.align	2
 1387              	index_led_matrix:
 1388 0000 00000000 		.space	4
 1389              		.global	MAX_LED_MATRIX
 1390              		.section	.rodata.MAX_LED_MATRIX,"a"
 1391              		.align	2
 1394              	MAX_LED_MATRIX:
 1395 0000 08000000 		.word	8
 1396              		.global	MAX_LED
 1397              		.section	.rodata.MAX_LED,"a"
 1398              		.align	2
 1401              	MAX_LED:
 1402 0000 04000000 		.word	4
 1403              		.global	htim2
 1404              		.section	.bss.htim2,"aw",%nobits
 1405              		.align	2
 1408              	htim2:
 1409 0000 00000000 		.space	72
 1409      00000000 
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 40


 1409      00000000 
 1409      00000000 
 1409      00000000 
 1410              		.text
 1411              	.Letext0:
 1412              		.file 3 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\machine\\_default_types.h"
 1413              		.file 4 "d:\\armgnu\\12.3 rel1\\arm-none-eabi\\include\\sys\\_stdint.h"
 1414              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 1415              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1416              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1417              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1418              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1419              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1420              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1421              		.file 12 "Core/Inc/software_timer.h"
 1422              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1423              		.file 14 "Core/Inc/7segmentLED.h"
 1424              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1425              		.file 16 "<built-in>"
ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 41


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:141    .text.MX_GPIO_Init:00000088 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:148    .text.update7SEG:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:154    .text.update7SEG:00000000 update7SEG
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:172    .text.update7SEG:0000000a $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:176    .text.update7SEG:0000000e $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:278    .text.update7SEG:00000098 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1377   .data.led_buffer:00000000 led_buffer
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:284    .text.updateClockBuffer:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:290    .text.updateClockBuffer:00000000 updateClockBuffer
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:344    .text.updateClockBuffer:00000040 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1298   .data.hour:00000000 hour
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1291   .data.minute:00000000 minute
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:352    .text.writeByte:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:358    .text.writeByte:00000000 writeByte
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:436    .text.updateLedMatrix:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:442    .text.updateLedMatrix:00000000 updateLedMatrix
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:468    .text.updateLedMatrix:00000014 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:476    .text.updateLedMatrix:0000001c $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:682    .text.updateLedMatrix:000000ec $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1319   .data.matrix_buffer:00000000 matrix_buffer
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1363   .data.cot:00000000 cot
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1349   .data.hang:00000000 hang
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:691    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:697    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:719    .text.Error_Handler:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:725    .text.Error_Handler:00000000 Error_Handler
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:757    .text.MX_TIM2_Init:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:762    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:865    .text.MX_TIM2_Init:00000064 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1408   .bss.htim2:00000000 htim2
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:870    .text.SystemClock_Config:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:876    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:969    .text.main:00000000 $t
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:975    .text.main:00000000 main
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1266   .text.main:00000170 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1284   .data.second:00000000 second
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1387   .bss.index_led_matrix:00000000 index_led_matrix
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1281   .data.second:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1288   .data.minute:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1295   .data.hour:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1305   .data.bytes:00000000 bytes
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1302   .data.bytes:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1316   .data.matrix_buffer:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1346   .data.hang:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1360   .data.cot:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1374   .data.led_buffer:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1384   .bss.index_led_matrix:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1394   .rodata.MAX_LED_MATRIX:00000000 MAX_LED_MATRIX
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1391   .rodata.MAX_LED_MATRIX:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1401   .rodata.MAX_LED:00000000 MAX_LED
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1398   .rodata.MAX_LED:00000000 $d
C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s:1405   .bss.htim2:00000000 $d

ARM GAS  C:\Users\phong\AppData\Local\Temp\cc9ycyaK.s 			page 42


UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
display7Seg
timerRun
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
setTimer1
setTimer2
setTimer3
clearDisplay7Seg
HAL_GPIO_TogglePin
timer1_flag
timer2_flag
timer3_flag
